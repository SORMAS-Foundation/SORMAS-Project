<domain application-root="${com.sun.aas.instanceRoot}/applications" version="115" log-root="${com.sun.aas.instanceRoot}/logs">
    <hazelcast-runtime-configuration/>
    <security-configurations>
        <authentication-service default="true" name="adminAuth" use-password-credential="true">
            <security-provider provider-name="adminSpc" name="spcrealm" type="LoginModule">
                <login-module-config module-class="com.sun.enterprise.admin.util.AdminLoginModule" control-flag="sufficient" name="adminSpecialLM">
                    <property name="config" value="server-config"/>
                    <property name="auth-realm" value="admin-realm"/>
                </login-module-config>
            </security-provider>
            <security-provider provider-name="adminFile" name="filerealm" type="LoginModule">
                <login-module-config module-class="com.sun.enterprise.security.auth.login.FileLoginModule" control-flag="sufficient" name="adminFileLM">
                    <property name="config" value="server-config"/>
                    <property name="auth-realm" value="admin-realm"/>
                </login-module-config>
            </security-provider>
        </authentication-service>
        <authorization-service default="true" name="authorizationService">
            <security-provider provider-name="simpleAuthorizationProvider" name="simpleAuthorization" type="Simple">
                <authorization-provider-config name="simpleAuthorizationProviderConfig" support-policy-deploy="false"/>
            </security-provider>
        </authorization-service>
    </security-configurations>
    <managed-job-config/>
    <system-applications/>
    <resources>
        <jdbc-resource pool-name="__TimerPool" object-type="system-all" jndi-name="jdbc/__TimerPool"/>
        <jdbc-resource pool-name="DerbyPool" object-type="system-all" jndi-name="jdbc/__derby"/>
        <jdbc-resource pool-name="H2Pool" object-type="system-all" jndi-name="jdbc/__default"/>
        <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.EmbeddedXADataSource" name="__TimerPool" res-type="javax.sql.XADataSource">
            <property name="databaseName" value="${com.sun.aas.instanceRoot}/lib/databases/ejbtimer"/>
            <property name="connectionAttributes" value=";create=true"/>
        </jdbc-connection-pool>
        <jdbc-connection-pool is-isolation-level-guaranteed="false" datasource-classname="org.apache.derby.jdbc.ClientDataSource" name="DerbyPool" res-type="javax.sql.DataSource">
            <property name="PortNumber" value="1527"/>
            <property name="Password" value="APP"/>
            <property name="User" value="APP"/>
            <property name="serverName" value="localhost"/>
            <property name="DatabaseName" value="sun-appserv-samples"/>
            <property name="connectionAttributes" value=";create=true"/>
        </jdbc-connection-pool>
        <jdbc-connection-pool is-isolation-level-guaranteed="false" datasource-classname="org.h2.jdbcx.JdbcDataSource" name="H2Pool" res-type="javax.sql.DataSource">
            <property name="URL" value="jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/embedded_default;AUTO_SERVER=TRUE"/>
        </jdbc-connection-pool>
        <managed-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedExecutorService"/>
        <managed-scheduled-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedScheduledExecutorService"/>
        <connector-connection-pool resource-adapter-name="jmsra" max-pool-size="250" steady-pool-size="1" name="jms/__defaultConnectionFactory-Connection-Pool" connection-definition-name="javax.jms.ConnectionFactory"/>
        <connector-resource pool-name="jms/__defaultConnectionFactory-Connection-Pool" object-type="system-all-req" jndi-name="jms/__defaultConnectionFactory"/>
        <jdbc-connection-pool datasource-classname="org.postgresql.ds.PGConnectionPoolDataSource" name="sormasDataPool" validation-classname="org.glassfish.api.jdbc.validation.PostgresConnectionValidation" is-connection-validation-required="true" connection-validation-method="custom-validation" res-type="javax.sql.ConnectionPoolDataSource">
            <property name="password" value="sormas"/>
            <property name="databaseName" value="sormas_db"/>
            <property name="serverName" value="${SORMAS_POSTGRES_SERVER}"/>
            <property name="user" value="sormas_user"/>
            <property name="portNumber" value="${SORMAS_POSTGRES_PORT}"/>
        </jdbc-connection-pool>
        <jdbc-resource pool-name="sormasDataPool" jndi-name="jdbc/sormasDataPool"/>
        <jdbc-connection-pool datasource-classname="org.postgresql.xa.PGXADataSource" name="sormasAuditlogPool" validation-classname="org.glassfish.api.jdbc.validation.PostgresConnectionValidation" is-connection-validation-required="true" connection-validation-method="custom-validation" res-type="javax.sql.XADataSource">
            <property name="password" value="sormas"/>
            <property name="databaseName" value="sormas_audit_db"/>
            <property name="serverName" value="${SORMAS_POSTGRES_SERVER}"/>
            <property name="user" value="sormas_user"/>
            <property name="portNumber" value="${SORMAS_POSTGRES_PORT}"/>
        </jdbc-connection-pool>
        <jdbc-resource pool-name="sormasAuditlogPool" jndi-name="jdbc/AuditlogPool"/>
        <mail-resource auth="false" host="localhost" from="nail@example.com" user="user" jndi-name="mail/MailSession"/>
        <custom-resource factory-class="org.glassfish.resources.custom.factory.PropertiesFactory" res-type="java.util.Properties" jndi-name="sormas/Properties">
            <property name="org.glassfish.resources.custom.factory.PropertiesFactory.fileName" value="${com.sun.aas.instanceRoot}/sormas.properties"/>
        </custom-resource>
    </resources>
    <servers>
        <server config-ref="server-config" name="server">
            <resource-ref ref="jdbc/__TimerPool"/>
            <resource-ref ref="jdbc/__default"/>
            <resource-ref ref="jdbc/__derby"/>
            <resource-ref ref="concurrent/__defaultManagedExecutorService"/>
            <resource-ref ref="concurrent/__defaultManagedScheduledExecutorService"/>
            <resource-ref ref="jms/__defaultConnectionFactory"/>
            <resource-ref ref="jdbc/sormasDataPool"/>
            <resource-ref ref="jdbc/AuditlogPool"/>
            <resource-ref ref="mail/MailSession"/>
            <resource-ref ref="sormas/Properties"/>
        </server>
    </servers>
    <nodes>
        <node name="localhost-sormas" install-dir="${com.sun.aas.productRoot}" type="CONFIG" node-host="localhost"/>
    </nodes>
    <configs>
        <config name="server-config">
            <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="6076"/>
            <payara-executor-service-configuration/>
            <http-service>
                <access-log/>
                <virtual-server network-listeners="http-listener-1,http-listener-2" id="server"/>
                <virtual-server network-listeners="admin-listener" id="__asadmin"/>
            </http-service>
            <iiop-service>
                <orb use-thread-pool-ids="thread-pool-1"/>
                <iiop-listener address="0.0.0.0" port="${SORMAS_IIOP_PORT}" lazy-init="true" id="orb-listener-1"/>
                <ssl/>
                <iiop-listener address="0.0.0.0" port="${SORMAS_IIOP_SSL_PORT}" id="SSL" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"/>
                </iiop-listener>
                <iiop-listener address="0.0.0.0" port="${SORMAS_IIOP_SSL_MUTUALAUTH_PORT}" id="SSL_MUTUALAUTH" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true"/>
                </iiop-listener>
            </iiop-service>
            <admin-service system-jmx-connector-name="system" type="das-and-server">
                <jmx-connector address="0.0.0.0" port="${SORMAS_JMX_CONNECTOR_PORT}" name="system" auth-realm-name="admin-realm" security-enabled="false"/>
                <property name="adminConsoleContextRoot" value="/admin"/>
                <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"/>
                <property name="ipsRoot" value="${com.sun.aas.installRoot}/.."/>
                <das-config/>
            </admin-service>
            <connector-service/>
            <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"/>
            <asadmin-recorder-configuration/>
            <request-tracing-service-configuration>
                <log-notifier/>
            </request-tracing-service-configuration>
            <notification-service-configuration enabled="true">
                <log-notifier-configuration enabled="true"/>
            </notification-service-configuration>
            <hazelcast-config-specific-configuration/>
            <monitoring-service-configuration/>
            <microprofile-metrics-configuration/>
            <stuck-threads-checker/>
            <batch-runtime-configuration/>
            <rest-monitoring-configuration/>
            <health-check-service-configuration>
                <log-notifier/>
            </health-check-service-configuration>
            <admin-audit-configuration/>
            <microprofile-openapi-configuration/>
            <metrics-health-check-configuration/>
            <phone-home-runtime-configuration phone-home-id="bdeaddeb-690a-4e0a-acf4-5492e7d474e9"/>
            <amx-configuration/>
            <microprofile-fault-tolerance-configuration/>
            <zendesk-support-configuration/>
            <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
                <jms-host port="${JMS_PROVIDER_PORT}" name="default_JMS_host" host="localhost"/>
            </jms-service>
            <diagnostic-service/>
            <security-service>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"/>
                    <property name="jaas-context" value="fileRealm"/>
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"/>
                    <property name="jaas-context" value="fileRealm"/>
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"/>
                <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
                    <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"/>
                </jacc-provider>
                <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"/>
                <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
                    <property name="auditOn" value="false"/>
                </audit-module>
                <message-security-config auth-layer="SOAP">
                    <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="dynamic.username.password" value="false"/>
                        <property name="debug" value="false"/>
                    </provider-config>
                    <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="dynamic.username.password" value="false"/>
                        <property name="debug" value="false"/>
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="debug" value="false"/>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="debug" value="false"/>
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                    </provider-config>
                </message-security-config>
                <message-security-config auth-layer="HttpServlet">
                    <provider-config provider-type="server" provider-id="GFConsoleAuthModule" class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule">
                        <request-policy auth-source="sender"/>
                        <response-policy/>
                        <property name="loginPage" value="/login.jsf"/>
                        <property name="loginErrorPage" value="/loginError.jsf"/>
                    </provider-config>
                </message-security-config>
                <property name="default-digest-algorithm" value="SHA-256"/>
            </security-service>
            <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=6009" system-classpath="">
                <jvm-options>-client</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/java.lang=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/java.nio=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.management/sun.management=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</jvm-options>
                <jvm-options>-Djava.awt.headless=true</jvm-options>
                <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
                <jvm-options>-Djavax.xml.accessExternalSchema=all</jvm-options>
                <jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder</jvm-options>
                <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
                <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
                <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
                <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
                <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
                <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
                <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
                <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.shell.remote,org.apache.felix.fileinstall</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.port=6066</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
                <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
                <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
                <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
                <jvm-options>-Dfelix.fileinstall.log.level=2</jvm-options>
                <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
                <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
                <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
                <jvm-options>-XX:NewRatio=2</jvm-options>
                <jvm-options>-Dcom.ctc.wstx.returnNullForDefaultNamespace=true</jvm-options>
                <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
                <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
                <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
                <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
                <jvm-options>[1.8.0|1.8.0u120]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.6.jar</jvm-options>
                <jvm-options>[1.8.0u121|1.8.0u160]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.7.jar</jvm-options>
                <jvm-options>[1.8.0u161|1.8.0u190]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.jar</jvm-options>
                <jvm-options>[1.8.0u191|1.8.0u500]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.1.jar</jvm-options>
                <jvm-options>[9|]-Xbootclasspath/a:${com.sun.aas.installRoot}/lib/grizzly-npn-api.jar</jvm-options>
                <jvm-options>-Xmx4096m</jvm-options>
                <jvm-options>-Dlogback.configurationFile=${com.sun.aas.instanceRoot}/config/logback.xml</jvm-options>
            </java-config>
            <availability-service>
                <web-container-availability/>
                <ejb-container-availability sfsb-store-pool-name="jdbc/hastore"/>
            </availability-service>
            <network-config>
                <protocols>
                    <protocol name="http-listener-1">
                        <http max-connections="250" default-virtual-server="server">
                            <file-cache/>
                        </http>
                        <ssl/>
                    </protocol>
                    <protocol name="http-listener-2" security-enabled="true">
                        <http max-connections="250" default-virtual-server="server">
                            <file-cache/>
                        </http>
                        <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"/>
                    </protocol>
                    <protocol name="admin-listener">
                        <http encoded-slash-enabled="true" max-connections="250" default-virtual-server="__asadmin">
                            <file-cache/>
                        </http>
                    </protocol>
                </protocols>
                <network-listeners>
                    <network-listener protocol="http-listener-1" port="${SORMAS_HTTP_PORT}" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp"/>
                    <network-listener protocol="http-listener-2" port="${SORMAS_HTTP_SSL_PORT}" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp"/>
                    <network-listener protocol="admin-listener" port="${SORMAS_HTTP_ADMIN_PORT}" name="admin-listener" thread-pool="admin-thread-pool" transport="tcp"/>
                </network-listeners>
                <transports>
                    <transport name="tcp"/>
                </transports>
            </network-config>
            <thread-pools>
                <thread-pool name="admin-thread-pool" min-thread-pool-size="1" max-queue-size="256" max-thread-pool-size="15"/>
                <thread-pool name="http-thread-pool"/>
                <thread-pool name="thread-pool-1" max-thread-pool-size="200"/>
            </thread-pools>
            <group-management-service>
                <failure-detection/>
            </group-management-service>
            <monitoring-service>
                <module-monitoring-levels/>
            </monitoring-service>
        </config>
        <config name="default-config">
            <payara-executor-service-configuration/>
            <http-service>
                <access-log/>
                <virtual-server network-listeners="http-listener-1, http-listener-2" id="server">
                    <property name="default-web-xml" value="${com.sun.aas.instanceRoot}/config/default-web.xml"/>
                </virtual-server>
                <virtual-server network-listeners="admin-listener" id="__asadmin"/>
            </http-service>
            <iiop-service>
                <orb use-thread-pool-ids="thread-pool-1"/>
                <iiop-listener address="0.0.0.0" port="${IIOP_LISTENER_PORT}" id="orb-listener-1"/>
                <ssl/>
                <iiop-listener address="0.0.0.0" port="${IIOP_SSL_LISTENER_PORT}" id="SSL" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"/>
                </iiop-listener>
                <iiop-listener address="0.0.0.0" port="${IIOP_SSL_MUTUALAUTH_PORT}" id="SSL_MUTUALAUTH" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true"/>
                </iiop-listener>
            </iiop-service>
            <admin-service system-jmx-connector-name="system">
                <jmx-connector address="0.0.0.0" port="${JMX_SYSTEM_CONNECTOR_PORT}" name="system" auth-realm-name="admin-realm" security-enabled="false"/>
                <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"/>
                <das-config/>
            </admin-service>
            <web-container>
                <session-config>
                    <session-manager>
                        <manager-properties/>
                        <store-properties/>
                    </session-manager>
                    <session-properties/>
                </session-config>
            </web-container>
            <ejb-container>
                <ejb-timer-service/>
            </ejb-container>
            <mdb-container/>
            <jms-service addresslist-behavior="priority" default-jms-host="default_JMS_host" type="EMBEDDED">
                <jms-host port="${JMS_PROVIDER_PORT}" host="localhost" name="default_JMS_host"/>
            </jms-service>
            <log-service file="${com.sun.aas.instanceRoot}/logs/server.log" log-rotation-limit-in-bytes="2000000">
                <module-log-levels/>
            </log-service>
            <security-service>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"/>
                    <property name="jaas-context" value="fileRealm"/>
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"/>
                    <property name="jaas-context" value="fileRealm"/>
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"/>
                <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
                    <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"/>
                </jacc-provider>
                <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"/>
                <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
                    <property name="auditOn" value="false"/>
                </audit-module>
                <message-security-config auth-layer="SOAP">
                    <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="dynamic.username.password" value="false"/>
                        <property name="debug" value="false"/>
                    </provider-config>
                    <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="dynamic.username.password" value="false"/>
                        <property name="debug" value="false"/>
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="debug" value="false"/>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="debug" value="false"/>
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                    </provider-config>
                </message-security-config>
            </security-service>
            <transaction-service automatic-recovery="true" tx-log-dir="${com.sun.aas.instanceRoot}/logs"/>
            <request-tracing-service-configuration>
                <log-notifier/>
            </request-tracing-service-configuration>
            <notification-service-configuration enabled="true">
                <log-notifier-configuration enabled="true"/>
            </notification-service-configuration>
            <hazelcast-config-specific-configuration/>
            <monitoring-service-configuration/>
            <microprofile-metrics-configuration/>
            <diagnostic-service/>
            <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${JAVA_DEBUGGER_PORT}" system-classpath="">
                <jvm-options>-server</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/java.lang=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/java.nio=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.management/sun.management=ALL-UNNAMED</jvm-options>
                <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</jvm-options>
                <jvm-options>-Djava.awt.headless=true</jvm-options>
                <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
                <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
                <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
                <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
                <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
                <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
                <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
                <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
                <jvm-options>-XX:NewRatio=2</jvm-options>
                <jvm-options>-Xmx512m</jvm-options>
                <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.fileinstall</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.port=${OSGI_SHELL_TELNET_PORT}</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
                <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
                <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
                <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
                <jvm-options>-Dfelix.fileinstall.log.level=3</jvm-options>
                <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
                <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
                <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
                <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
                <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
                <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
                <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
                <jvm-options>[1.8.0|1.8.0u120]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.6.jar</jvm-options>
                <jvm-options>[1.8.0u121|1.8.0u160]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.7.jar</jvm-options>
                <jvm-options>[1.8.0u161|1.8.0u190]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.jar</jvm-options>
                <jvm-options>[1.8.0u191|1.8.0u500]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.1.jar</jvm-options>
                <jvm-options>[9|]-Xbootclasspath/a:${com.sun.aas.installRoot}/lib/grizzly-npn-api.jar</jvm-options>
            </java-config>
            <availability-service>
                <web-container-availability/>
                <ejb-container-availability sfsb-store-pool-name="jdbc/hastore"/>
                <jms-availability/>
            </availability-service>
            <network-config>
                <protocols>
                    <protocol name="http-listener-1">
                        <http default-virtual-server="server">
                            <file-cache/>
                        </http>
                        <ssl/>
                    </protocol>
                    <protocol name="http-listener-2" security-enabled="true">
                        <http default-virtual-server="server">
                            <file-cache/>
                        </http>
                        <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"/>
                    </protocol>
                    <protocol name="admin-listener">
                        <http max-connections="250" default-virtual-server="__asadmin">
                            <file-cache/>
                        </http>
                    </protocol>
                    <protocol name="sec-admin-listener" security-enabled="true">
                        <http encoded-slash-enabled="true" default-virtual-server="__asadmin">
                            <file-cache/>
                        </http>
                        <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" cert-nickname="glassfish-instance" renegotiate-on-client-auth-want="false"/>
                    </protocol>
                    <protocol name="admin-http-redirect">
                        <http-redirect secure="true"/>
                    </protocol>
                    <protocol name="pu-protocol">
                        <port-unification>
                            <protocol-finder protocol="sec-admin-listener" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="http-finder"/>
                            <protocol-finder protocol="admin-http-redirect" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="admin-http-redirect"/>
                        </port-unification>
                    </protocol>
                </protocols>
                <network-listeners>
                    <network-listener protocol="http-listener-1" port="${HTTP_LISTENER_PORT}" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp"/>
                    <network-listener protocol="http-listener-2" port="${HTTP_SSL_LISTENER_PORT}" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp"/>
                    <network-listener protocol="pu-protocol" port="${ASADMIN_LISTENER_PORT}" name="admin-listener" thread-pool="admin-thread-pool" transport="tcp"/>
                </network-listeners>
                <transports>
                    <transport name="tcp"/>
                </transports>
            </network-config>
            <thread-pools>
                <thread-pool name="http-thread-pool"/>
                <thread-pool name="thread-pool-1" min-thread-pool-size="2" max-thread-pool-size="200"/>
                <thread-pool name="admin-thread-pool" min-thread-pool-size="1" max-queue-size="256" max-thread-pool-size="15"/>
            </thread-pools>
            <group-management-service>
                <failure-detection/>
            </group-management-service>
            <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="27676"/>
            <system-property name="ASADMIN_LISTENER_PORT" value="24848"/>
            <system-property name="HTTP_LISTENER_PORT" value="28080"/>
            <system-property name="HTTP_SSL_LISTENER_PORT" value="28181"/>
            <system-property name="IIOP_LISTENER_PORT" value="23700"/>
            <system-property name="IIOP_SSL_LISTENER_PORT" value="23820"/>
            <system-property name="IIOP_SSL_MUTUALAUTH_PORT" value="23920"/>
            <system-property name="JMX_SYSTEM_CONNECTOR_PORT" value="28686"/>
            <system-property name="OSGI_SHELL_TELNET_PORT" value="26666"/>
            <system-property name="JAVA_DEBUGGER_PORT" value="29009"/>
            <monitoring-service>
                <module-monitoring-levels/>
            </monitoring-service>
        </config>
    </configs>
    <property name="administrative.domain.name" value="sormas"/>
    <secure-admin special-admin-indicator="46406b91-118a-4e27-8de9-408ea2b45e8b">
        <secure-admin-principal dn="CN=6182e049664c,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK"/>
        <secure-admin-principal dn="CN=6182e049664c-instance,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK"/>
    </secure-admin>
    <deployment-groups/>
    <clusters/>
    <applications/>
</domain>