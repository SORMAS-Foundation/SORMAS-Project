<?xml version="1.0"?>
<!DOCTYPE project>
<project name="build-artifact" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<!-- Dieses Build-Skript wird von Artefakten importiert, die gepackt ins autodeploy-Verzeichnis deployt werden kÃ¶nnen -->

	<property file="../sormas-base/build.properties" />
	<property environment="env" />
	<property name="autodeploy.dir" value="${glassfish.domain.root}/autodeploy" />
	<property name="maven.test.skip" value="true" />

	<artifact:pom id="mvnPom" file="pom.xml"/>

	<target name="3-collect" description="Kopiert das Artefakt nach deploy/apps.">

		<property name="copy.path" value="../deploy/apps" />
		<antcall inheritAll="true" target="--copy-artifact" />
	</target>

	<target name="--copy-artifact">

		<fail unless="copy.path">copy.path is not set!</fail>

		<property name="target.dir" value="./target" />
		<copy todir="${copy.path}" preservelastmodified="true" verbose="true">
			<fileset dir="${target.dir}">
				<include name="**/*.${file.suffix}" />
			</fileset>
			<!-- This mapper strips off all leading directory information and versions from the jars -->
			<mapper classpathref="maven-ant-tasks.classpath" classname="org.apache.maven.artifact.ant.VersionMapper" from="${dependency.versions}"
				to="flatten" />
		</copy>
	</target>

	<target name="--deploy-artifact">
		<exec executable="${payara.home}/glassfish/bin/asadmin">
			<env key="AS_ADMIN_PORT" value="${payara.admin.port}"/>
			<arg value="deploy"/>
			<arg value="--force"/> <!-- Redeploy if necessary -->
			<arg file="${mvnPom.build.directory}/${mvnPom.artifactId}.${mvnPom.packaging}"/>
		</exec>
	</target>

	<path id="maven-ant-tasks.classpath" path="../sormas-base/antlib/maven-ant-tasks-2.1.4-SNAPSHOT_PATCHED.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant"
		classpathref="maven-ant-tasks.classpath" />
</project>
