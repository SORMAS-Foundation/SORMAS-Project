<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>sormas-base</artifactId>
		<groupId>de.symeda.sormas</groupId>
		<version>1.90.0-SNAPSHOT</version>
		<relativePath>../sormas-base</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>sormas-ui</artifactId>
	<name>${project.artifactId}</name>
	<packaging>war</packaging>

	<properties>
		<m2e.jpa.activation>false</m2e.jpa.activation>
	</properties>

	<dependencies>

		<!-- *** Payara modules *** -->

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

		<dependency>
			<groupId>fish.payara.api</groupId>
			<artifactId>payara-api</artifactId>
		</dependency>
		<dependency>
			<groupId>fish.payara.security.connectors</groupId>
			<artifactId>security-connector-oidc-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.corba</groupId>
			<artifactId>glassfish-corba-omgapi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.soteria</groupId>
			<artifactId>javax.security.enterprise</artifactId>
		</dependency>

		<!-- *** Payara modules END *** -->

		<!-- *** Domain libs *** -->

		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<!-- *** Domain libs END *** -->

		<!-- *** Compile dependencies *** -->

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sormas-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sormas-widgetset</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-compatibility-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>

		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>popupbutton</artifactId>
		</dependency>

		<dependency>
		   <groupId>org.vaadin.addons</groupId>
		   <artifactId>extended-token-field</artifactId>
		</dependency>

		<dependency>
			<groupId>com.wcs.wcslib</groupId>
			<artifactId>wcslib-vaadin-widget-multifileupload</artifactId>
		</dependency>

		<!-- *** Compile dependencies END *** -->

		<!-- *** Test dependencies *** -->

		<!-- Many dependencies needed for cdi-test with sormas-backend -->

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sormas-backend</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.hilling.junit.cdi</groupId>
			<artifactId>cdi-test-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.mpkorstanje</groupId>
			<artifactId>simmetrics-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-55</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-r4</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.ibm.etcd</groupId>
			<artifactId>etcd-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.libphonenumber</groupId>
			<artifactId>libphonenumber</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.nexmo</groupId>
			<artifactId>client</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.config</groupId>
			<artifactId>geronimo-config-impl</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- *** Test dependencies END *** -->

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- By attaching the classes to a separate JAR, we can import them
						directly in the production overlay project, making it easier to compile a
						separate widgetset for production mode. -->
					<attachClasses>true</attachClasses>
					<!-- Exclude some unnecessary files generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
						WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
						</configuration>
						<goals>
							<goal>update-theme</goal>
							<!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
