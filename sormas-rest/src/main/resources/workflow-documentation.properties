externalVisitsDescription=\
The purpose of this API is to enable communication between SORMAS and other symptom journals.<br>\
Only users with the role ``REST_EXTERNAL_VISITS_USER`` are authorized to use the endpoints. Authentication is done using basic auth, with the user and password. <br>\
For technical details please contact the dev team on <a href="https://gitter.im/SORMAS-Project">gitter</a>.<br>\
<br>\
<h3>#### Workflow Description ####</h3>\
<b>About external follow up:</b><br>\
Follow up in SORMAS is done via visits. Visits hold information about symptoms at a specific time point.<br>\
Visits can be created for cases and contacts, either via the SORMAS-UI or the external visits journal API.<br>\
<br>\
<b>About persons, cases and contacts:</b><br>\
This is a very basic concept that one needs to understand when working with visits. In SORMAS, a person entity represents a phisically existing person. \
Cases and contacts represent epidemiological occurences. When a person was in contact with an infectious environment, the person has a contact in SORMAS. \
When the person was in contact with such environments twice, it gets two contacts.\
When a person falls ill, it gets a case with the according disease. This means: In SORMAS, each contact and case relates to exaclty one person. \
One person can have several contacts and cases, though. Follow up is done for a contact (or a case, which can be enabled in the SORMAS feature configuration). Contacts (or cases) initiate follow up. A person, though, either shows symptoms or not. It can not show symptoms for just \
one contact and not for the other. Thus, visits are related to all active contacts (and cases) of a person. Also the communication with external symptom journals is PERSON BASED. Only the person uuid is used, visits are uploaded to each \
active case and contact of a person.<br>\
<br>\
<b>Person status variables:</b><br>\
It is important to understand the meaning of two variables: the follow up status and the symptom journal status.<br>\
The follow up status describes the follow up for a contact or a case. Possible values are defined in \
<a href="https://github.com/hzi-braunschweig/SORMAS-Project/blob/development/sormas-api/src/main/java/de/symeda/sormas/api/contact/FollowUpStatus.java">the FollowUpStatus enum.</a> \
 Follow up can be done with, or without an external journal, the follow up status makes no distinction there. Because the follow up status is contact and case specific, \
 but the communication with external journals is person based, SORMAS determines the most important follow up status of all contacts and cases related to the person in question \
 when communicating with external journals. Whenever there is follow up ongoing for any of the persons contacts (and cases if the case follow up feature is enabled in SORMAS), \
 SORMAS will state the FollowUpStatus.FOLLOW_UP for that person towards external journals.<br>\
 The <a href="https://github.com/hzi-braunschweig/SORMAS-Project/blob/development/sormas-api/src/main/java/de/symeda/sormas/api/person/SymptomJournalStatus.java"> SymptomJournalStatus</a> \
 describes the state of a person related to external symptom journals. it is not contact or case specific.<br>\
<br>\
<b>Configuration in SORMAS</b><br>\
In the domain folder, there is a sormas.properties. it holds the following values relevant for an external journal:<br>\
``interface.patientdiary.authurl``: used to fetch an authentication token (see 1. below).<br>\
``interface.patientdiary.probandsurl``: used to register new persons in the external journal (see 2. below).<br>\
``interface.patientdiary.url``: used to open a person in the external journal (see 6. below).<br>\
``interface.patientdiary.email``: used to authenticate at the external journal (see 1. below).<br>\
``interface.patientdiary.password``: used to authenticate at the external journal.<br>\
``interface.patientdiary.defaultuser.username``: This user will be created in SORMAS and can be used by the external journal to authenticate.<br>\
``interface.patientdiary.defaultuser.password``: The above user's password.<br>\
<br>\
<ol>\
  <li><b>SORMAS fetching an authentication token from the external journal</b></li><br>\
    POST to the interface.patientdiary.authurl<br>\
    Request body:<br>\
    {<br>\
    &emsp;&emsp;"email" : [patientdiary.email],<br>\
    &emsp;&emsp;"password" : [patientdiary.password]<br>\
    }<br>\
    where [patientdiary.email] is replaced with interface.patientdiary.email and [patientdiary.password] with interface.patientdiary.password specified in the sormas.properties<br>\
    Expected response body:<br>\
    {<br>\
    &emsp;&emsp;"success" : true,<br>\
    &emsp;&emsp;"userId" : [some-user-id],<br>\
    &emsp;&emsp;"token" : [token]<br>\
    }<br>\
    The token returned will be used to authenticate in other requests.<br>\
    <br>\
  <li><b>Registration of a new person in the external journal</b></li><br>\
    This process involves several steps that are triggered via the REGISTER button a priviliged user can see in the top right corner when having opened a case or a contact.<br>\
    To be able to see this button, the user must have at least one of the following user roles: national user, contact supervisor, contact officer, communitiy officer,\
    surveillance officer, surveillance supervisor, or admin supervisor.<br>\
    <br>\
      First comes a SORMAS-internal validation of contact details. The person to be registered needs to have at least an email address or a phone number to pass this validation.\
      Also, when there are several email addresses or phone numbers, one of them has to be marked primary contact detail, so that it is clear which contact detail \
      shall be used.<br>\
      <br>\
      Then comes an external validation of the contact details. For this, SORMAS fetches an authentication token as in 1. Then it sends a GET request to the following URL for each contact detail to be used in  the external journal:<br>\
      <tt>GET [interface.patientdiary.probandsurl]/probands?q=[URL-encoded-query-parameter-and-value]'</tt>, with a header like <tt>'x-access-token: [token]'</tt><br>\
      The [URL-encoded-query-parameter-and-value] consists of a parameter-value-pair. The parameter is either 'Email' or 'Mobile phone'. The value holds the contact detail to be validated.<br>\
      An unencoded example for this is <tt>"Email" = "example@example.de"</tt><br>\
      The URL-encoded version is <tt>%22Email%22%20%3D%20%22example%40example.de%22</tt><br>\
      [token] is replaced with the token fetched for authorization.<br>\
      The CURL equivalent for an exemplary call is \
      <tt>curl --request GET 'https://probands-URL.com//probands?q=%22Email%22%20%3D%20%22example%40example.de%22' --header 'x-access-token: my-access-token'</tt><br>\
      <br>\
      Expected result is a PatientDiaryQueryResponse which information about any person already registered in the external journal and using the same contact detail.<br>\
      It needs to be structured as follows:<br>\
      ``PatientDiaryQueryResponse`` {<br>\
        &emsp;total&emsp;&emsp;&emsp;integer<br>\
        &emsp;count&emsp;&emsp;&emsp;integer<br>\
        &emsp;results&emsp;&emsp;&emsp;List (``PatientDiaryPersonData``)<br>\
      }<br>\
      - total should state how many persons are registered in the external journal (this information is currently never used in SORMAS).<br>\
      - count should state how many registered persons using the same contact detail were found.<br>\
      - results needs to contain a PatientDiaryPersonData for each match:<br>\
      ``PatientDiaryPersonData``{<br>\
        &emsp;_id&emsp;&emsp;&emsp;string<br>\
        &emsp;idatId&emsp;&emsp;&emsp;``PatientDiaryIdatId``<br>\
      }<br>\
      - _id should be a unique identifier for the person this data is about (this information is currently never used in SORMAS)<br>\
      The PatientDiaryIdatId needs to be structured as follows:<br>\
      ``PatientDiaryIdatId``{<br>\
        &emsp;idat&emsp;&emsp;&emsp;``PatientDiaryPersonDto``<br>\
      }<br>\
      The PatientDiaryPersonDto holds the actual person data:<br>\
      ``PatientDiaryPersonDto``{<br>\
        &emsp;personUUID&emsp;&emsp;&emsp;string<br>\
        &emsp;firstName&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;lastName&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;gender&emsp;&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;birthday&emsp;&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;contactInformation&emsp;&emsp;&emsp;``PatientDiaryContactInformation``<br>\
        &emsp;endDate&emsp;&emsp;&emsp;&emsp;&emsp;string<br>\
      }<br>\
      - personUUID should be the UUID of the person in SORMAS. This UUID is used to sync with external journals (this information is currently never used in SORMAS).<br>\
      - firstName and lastName need to hold the first and last name of the person.<br>\
      - gender should hold the persons gender (this information is currently never used in SORMAS).<br>\
      - birthday should hold the persons birthday (this information is currently never used in SORMAS).<br>\
      - contactInformation should hold the contact information of that person, which should for logical reasons always contain (at least) the contact detail provided by SORMAS in the query.<br>\
      - endDate should hold the date after which follow up is supposed to be stopped by the external journal.<br>\
      ``PatientDiaryIdatId``{<br>\
        &emsp;email&emsp;&emsp;&emsp;string<br>\
        &emsp;phone&emsp;&emsp;&emsp;``PatientDiaryPhone``<br>\
      }<br>\
      - email should hold the email adress for the person<br>\
      - phone should hold the phone number of that person:<br>\
      ``PatientDiaryPhone``{<br>\
        &emsp;number&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;internationalNumber&emsp;&emsp;&emsp;string<br>\
        &emsp;nationalNumber&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;countryCode&emsp;&emsp;&emsp;&emsp;string<br>\
        &emsp;dialCode&emsp;&emsp;&emsp;string<br>\
      }<br>\
      To put this all together, here is an example PatientDiaryQueryResponse with one person using the same contact detail:<br>\
      {<br>\
      &emsp;&emsp;"total" : 100,<br>\
      &emsp;&emsp;"count" : 1,<br>\
      &emsp;&emsp;"results" : [<br>\
      &emsp;&emsp;&emsp;&emsp;{<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"_id" : "60586691d4c30700119515c8"<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"idatId" : {<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"idat" : {<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"contactInformation" : {<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"phone" : null,<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"email" : "example@example.de"<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;},<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"personUUID" : "RMTEF2-UZXCXE-7YBJK6-KUMSSEME"<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;,"firstName" : "Maria",<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;,"lastName" : "Muster",<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"gender" : "female"<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;"birthday" : null<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;},<br>\
      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}<br>\
      &emsp;&emsp;&emsp;&emsp;}<br>\
      &emsp;&emsp;]<br>\
      }<br>\
      SORMAS allows to continue with the registration of a new person only when the person has a unique first name, so when all persons of the response have a different one (or if the response does not contain any matches, which needs to show in PatientDiaryQueryResponse.count == 0). \
      This validation is necessary to avoid confusion of person related data in some external journals.<br>\
      <br>\
      When there are no validation errors in the process described above, SORMAS fetches an authentication token as described in 1. and then uses it to request the external journal to register the person:<br>\
      <tt>POST [interface.patientdiary.probandsurl]/external-data/[personUUID]</tt><br>\
      The [personUUID] is replaced with the UUID of the person, which is later used to sync data between the external journal and SORMAS.<br>\
      Expected response body:<br>\
      {<br>\
      &emsp;"success" : [boolean]<br>\
      &emsp;"message" : [messageString]<br>\
      }<br>\
      [boolean] is expected to be true in case of successful registration. SORMAS then sets the symptom journal status to REGISTERED and displays the message to the user.<br>\
      When [boolean] is false, the message is shown as an error to the user.<br>\
      To fetch data relevent for the registration, the external journal can use the ``/visits-external/person/{personUuid}`` API endpoint described below.<br>\
      <br>\
    <li><b>Synchronization of person data changed in SORMAS</b></li><br>\
    It may happen that person data (like a contact detail) gets changed after a person is registered in an external journal. SORMAS notifies external journals about such a change whith \
    first fetching an authentication token as descriced in 1., and the using this token for this request:<br>\
    <tt>PUT [interface.patientdiary.probandsurl]/external-data/[personUUID]</tt><br>\
    The external journal is expected to refetch the person data via the ``/visits-external/person/{personUuid}`` API endpoint described below and save the changes.</li><br>\
    After refetching the person data, the symptom journal does its own internal validation and responds to SORMAS with the synchronization result, containing eventual validation errors.\
    The expected reponse body:<br>\
    {<br>\
    &emsp;"success" : [boolean]<br>\
    &emsp;"message" : [messageString]<br>\
    &emsp;"errors" : [<br>\
    &emsp;&emsp;{[errorKey]:[errorString]}<br>\
    &emsp;]<br>\
    }<br>\
    If the changes were done manually by a user from the person edit form, the synchronization result is shown to the user in a popup window, so that the user can fix eventual errors and resynchronize the person data.\
    <br>\
    <li><b>Upload of symptom journal data to SORMAS</b></li><br>\
    For this, the ``/visits-external`` API endpoint \is to be used. This is described below.<br>\
    <br>\
    <li><b>Upload of a symptom journal status to SORMAS</b></li><br>\
    For this, the ``/visits-external/person/{personUuid}/status`` API endpoint is to be used. This is described below.<br>\
    <br>\
    <li><b>Opening a person in the external journal from within SORMAS</b></li><br>\
    Once the symptom journal status of a person is set to REGISTERED or ACCEPTED, the external journal button in the SORMAS-UI changes. It does not provide a registration anymore, \
    but the options to open the person in the external journal and to cancel external follow up. This button can be found when having opened a contact (or a case if the case follow up feature is enabled in SORMAS) \
    in the top right corner. If the user choses to open the person in the external journal, SORMAS fetches an authentication token as described in 1. and opens a new browser tab with the following URL:<br>\
    <tt>[interface.patientdiary.url]/data?q=[personUuid]&queryKey=sicFieldIdentifier&token=[token]</tt><br>\
    SORMAS expects the external journal to present a view of the person there.<br>\
    <br>\
    <li><b>Deletion of a person from an external journal</b></li><br>\
    As described above, the journal button can offer the option to cancel external follow up. If a user choses this option, SORMAS fetches an authentication token as described in 1., and uses it to request:<br>\
    <tt>DELETE [interface.patientdiary.probandsurl]/external-data/[personUUID]</tt><br>\
    Expected response body:<br>\
    {<br>\
    &emsp;"success" : [boolean]<br>\
    &emsp;"message" : [messageString]<br>\
    }<br>\
    [boolean] is expected to be true in case of successful deletion. SORMAS then sets the symptom journal status to DELETED and displays the message to the user.<br>\
    When [boolean] is false, the message is shown as an error to the user.<br>\
    Please note that this does not affect any follow up status. Cancelling follow up of a contact or case is independent from cancelling external follow up of a person.<br>\
</ol>\
It follows a autogenerated description of the relevant API endpoints provided by SORMAS.
