{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "[Readme of the module on GitHub](https://github.com/sormas-foundation/SORMAS-Project/tree/development/sormas-rest). \n### Responses\n- 400: Bad request: The request is not valid, e.g. missing required data\n- 403: Forbidden: User does not have necessary user rights\n- 404: Not found: The requested entity was not found.\n- 409: Conflict: Tried to update data of an entity that was updated in the mean-time.\n- 500: Internal server error: Other exceptions\n",
    "license" : {
      "name" : "GPL v3",
      "url" : "https://www.gnu.org/licenses/gpl-3.0.html"
    },
    "title" : "SORMAS REST API",
    "version" : "1.97.0-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "/sormas-rest"
  } ],
  "paths" : {
    "/actions/all/{since}" : {
      "get" : {
        "operationId" : "getAll",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Action Controller" ]
      }
    },
    "/actions/indexActionList" : {
      "post" : {
        "operationId" : "getActionList",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageActionDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Action Controller" ]
      }
    },
    "/actions/indexEventActionList" : {
      "post" : {
        "operationId" : "getEventActionIndexList",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEventActionIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Action Controller" ]
      }
    },
    "/actions/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ActionDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Action Controller" ]
      }
    },
    "/actions/query" : {
      "post" : {
        "operationId" : "getByUuids",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Action Controller" ]
      }
    },
    "/actions/uuids" : {
      "get" : {
        "operationId" : "getAllUuids",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Action Controller" ]
      }
    },
    "/additionaltests/all/{since}" : {
      "get" : {
        "operationId" : "getAllAdditionalTests",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdditionalTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Additional Test Controller" ]
      }
    },
    "/additionaltests/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllAdditionalTests_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdditionalTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Additional Test Controller" ]
      }
    },
    "/additionaltests/indexList" : {
      "post" : {
        "operationId" : "getIndexList",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAdditionalTestDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Additional Test Controller" ]
      }
    },
    "/additionaltests/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AdditionalTestDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Additional Test Controller" ]
      }
    },
    "/additionaltests/query" : {
      "post" : {
        "operationId" : "getByUuids_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdditionalTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Additional Test Controller" ]
      }
    },
    "/additionaltests/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Additional Test Controller" ]
      }
    },
    "/aggregatereports/all/{since}" : {
      "get" : {
        "operationId" : "getAllAggregateReports",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateReportDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aggregate Report Controller" ]
      }
    },
    "/aggregatereports/indexList" : {
      "post" : {
        "operationId" : "getIndexList_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AggregateReportCriteria"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateCaseCountDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aggregate Report Controller" ]
      }
    },
    "/aggregatereports/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_2",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateReportDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Aggregate Report Controller" ]
      }
    },
    "/aggregatereports/query" : {
      "post" : {
        "operationId" : "getByUuids_2",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateReportDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aggregate Report Controller" ]
      }
    },
    "/aggregatereports/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aggregate Report Controller" ]
      }
    },
    "/areas/all/{since}" : {
      "get" : {
        "operationId" : "getAll_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AreaDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Area Controller" ]
      }
    },
    "/areas/query" : {
      "post" : {
        "operationId" : "getByUuids_3",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AreaDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Area Controller" ]
      }
    },
    "/areas/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_2",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Area Controller" ]
      }
    },
    "/bagexport/cases" : {
      "get" : {
        "operationId" : "exportCases",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "B A G Export Controller" ]
      }
    },
    "/bagexport/contacts" : {
      "get" : {
        "operationId" : "exportContacts",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "B A G Export Controller" ]
      }
    },
    "/campaignFormData/all/{since}" : {
      "get" : {
        "operationId" : "getAllCampaignFormData",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignFormDataDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Form Data Controller" ]
      }
    },
    "/campaignFormData/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_3",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CampaignFormDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Campaign Form Data Controller" ]
      }
    },
    "/campaignFormData/query" : {
      "post" : {
        "operationId" : "getByUuids_4",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignFormDataDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Form Data Controller" ]
      }
    },
    "/campaignFormData/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_3",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Form Data Controller" ]
      }
    },
    "/campaignFormMeta/all/{since}" : {
      "get" : {
        "operationId" : "getAllCampaignFormMeta",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignFormMetaDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Form Meta Controller" ]
      }
    },
    "/campaignFormMeta/query" : {
      "post" : {
        "operationId" : "getByUuids_5",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignFormMetaDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Form Meta Controller" ]
      }
    },
    "/campaignFormMeta/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_4",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Form Meta Controller" ]
      }
    },
    "/campaigns/all/{since}" : {
      "get" : {
        "operationId" : "getAllCampaignFormData_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Controller" ]
      }
    },
    "/campaigns/query" : {
      "post" : {
        "operationId" : "getByUuids_6",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Controller" ]
      }
    },
    "/campaigns/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_5",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Campaign Controller" ]
      }
    },
    "/cases/all/{since}" : {
      "get" : {
        "operationId" : "getAllCases",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseDataDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllCases_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseDataDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/archived/{since}" : {
      "get" : {
        "operationId" : "getArchivedUuidsSince",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/caseFollowUpIndexList" : {
      "post" : {
        "operationId" : "getCaseFollowUpIndexList",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCaseFollowUpDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/delete" : {
      "post" : {
        "operationId" : "delete",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/detailedIndexList" : {
      "post" : {
        "operationId" : "getIndexDetailedList",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCaseIndexDetailedDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/externalData" : {
      "post" : {
        "operationId" : "updateExternalData",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/getduplicates" : {
      "post" : {
        "operationId" : "getDuplicates",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasePersonDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CasePersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/getduplicates/{reportDateThreshold}" : {
      "post" : {
        "operationId" : "getDuplicates_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "reportDateThreshold",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasePersonDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CasePersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/indexList" : {
      "post" : {
        "operationId" : "getIndexList_2",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCaseIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/postUpdate/{uuid}" : {
      "post" : {
        "operationId" : "postUpdate",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseDataDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_4",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CaseDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/push-detailed" : {
      "post" : {
        "operationId" : "postCasesDetailed",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CaseDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/pushWithPerson" : {
      "post" : {
        "operationId" : "postCase",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CoreAndPersonDtoCaseDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CoreAndPersonDtoCaseDataDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/query" : {
      "post" : {
        "operationId" : "getByUuids_7",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseDataDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/query/persons" : {
      "post" : {
        "operationId" : "getByPersonUuids",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseDataDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/specificCase/{searchTerm}" : {
      "post" : {
        "operationId" : "getSpecificCase",
        "parameters" : [ {
          "in" : "path",
          "name" : "searchTerm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_6",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/cases/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseDataDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Case Controller" ]
      }
    },
    "/classification/all/{since}" : {
      "get" : {
        "operationId" : "getAll_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiseaseClassificationCriteriaDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Classification Controller" ]
      }
    },
    "/clinicalvisits/all/{since}" : {
      "get" : {
        "operationId" : "getAllVisits",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ClinicalVisitDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Clinical Visit Controller" ]
      }
    },
    "/clinicalvisits/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllVisits_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ClinicalVisitDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Clinical Visit Controller" ]
      }
    },
    "/clinicalvisits/indexList" : {
      "post" : {
        "operationId" : "getIndexList_3",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageClinicalVisitIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Clinical Visit Controller" ]
      }
    },
    "/clinicalvisits/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_5",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ClinicalVisitDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Clinical Visit Controller" ]
      }
    },
    "/clinicalvisits/query" : {
      "post" : {
        "operationId" : "getByUuids_8",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ClinicalVisitDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Clinical Visit Controller" ]
      }
    },
    "/clinicalvisits/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Clinical Visit Controller" ]
      }
    },
    "/communities/all/{since}" : {
      "get" : {
        "operationId" : "getAll_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CommunityDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Community Controller" ]
      }
    },
    "/communities/archive" : {
      "post" : {
        "operationId" : "archive",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Community Controller" ]
      }
    },
    "/communities/dearchive" : {
      "post" : {
        "operationId" : "dearchive",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Community Controller" ]
      }
    },
    "/communities/indexList" : {
      "post" : {
        "operationId" : "getIndexList_4",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCommunityDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Community Controller" ]
      }
    },
    "/communities/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_6",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CommunityDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Community Controller" ]
      }
    },
    "/communities/query" : {
      "post" : {
        "operationId" : "getByUuids_9",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CommunityDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Community Controller" ]
      }
    },
    "/communities/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_7",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Community Controller" ]
      }
    },
    "/contacts/all/{since}" : {
      "get" : {
        "operationId" : "getAllContacts",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllContacts_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/archived/{since}" : {
      "get" : {
        "operationId" : "getArchivedUuidsSince_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/delete" : {
      "post" : {
        "operationId" : "delete_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/detailedIndexList" : {
      "post" : {
        "operationId" : "getIndexDetailedList_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContactIndexDetailedDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/externalData" : {
      "post" : {
        "operationId" : "updateExternalData_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/indexList" : {
      "post" : {
        "operationId" : "getIndexList_5",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContactIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_7",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ContactDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/pushWithPerson" : {
      "post" : {
        "operationId" : "postContact",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CoreAndPersonDtoContactDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CoreAndPersonDtoContactDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/query" : {
      "post" : {
        "operationId" : "getByUuids_10",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/query/persons" : {
      "post" : {
        "operationId" : "getByPersonUuids_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_2",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/contacts/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Contact Controller" ]
      }
    },
    "/continents/all/{since}" : {
      "get" : {
        "operationId" : "getAll_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContinentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Continent Controller" ]
      }
    },
    "/continents/archive" : {
      "post" : {
        "operationId" : "archive_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Continent Controller" ]
      }
    },
    "/continents/dearchive" : {
      "post" : {
        "operationId" : "dearchive_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Continent Controller" ]
      }
    },
    "/continents/indexList" : {
      "post" : {
        "operationId" : "getIndexList_6",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContinentIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Continent Controller" ]
      }
    },
    "/continents/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_8",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ContinentDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Continent Controller" ]
      }
    },
    "/continents/query" : {
      "post" : {
        "operationId" : "getByUuids_11",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContinentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Continent Controller" ]
      }
    },
    "/continents/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_8",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Continent Controller" ]
      }
    },
    "/countries/all/{since}" : {
      "get" : {
        "operationId" : "getAll_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Country Controller" ]
      }
    },
    "/countries/archive" : {
      "post" : {
        "operationId" : "archive_2",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Country Controller" ]
      }
    },
    "/countries/dearchive" : {
      "post" : {
        "operationId" : "dearchive_2",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Country Controller" ]
      }
    },
    "/countries/indexList" : {
      "post" : {
        "operationId" : "getIndexList_7",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCountryIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Country Controller" ]
      }
    },
    "/countries/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_9",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Country Controller" ]
      }
    },
    "/countries/query" : {
      "post" : {
        "operationId" : "getByUuids_12",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Country Controller" ]
      }
    },
    "/countries/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_9",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Country Controller" ]
      }
    },
    "/customizableenumvalues/all/{since}" : {
      "get" : {
        "operationId" : "getAllCustomizableEnumValues",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomizableEnumValueDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customizable Enum Value Controller" ]
      }
    },
    "/customizableenumvalues/query" : {
      "post" : {
        "operationId" : "getByUuids_13",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomizableEnumValueDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customizable Enum Value Controller" ]
      }
    },
    "/customizableenumvalues/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_10",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customizable Enum Value Controller" ]
      }
    },
    "/dashboard/caseMeasurePerDistrict" : {
      "post" : {
        "operationId" : "getCaseMeasurePerDistrict",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardCaseMeasureDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/contacts" : {
      "post" : {
        "operationId" : "getDashboardContactStatistic",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardContactStatisticDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/diseaseBurden" : {
      "post" : {
        "operationId" : "getAll_6",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiseaseBurdenDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/epiCurveDataPerCaseClassification" : {
      "post" : {
        "operationId" : "getEpidemiologicalCurveDataPerCaseClassification",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/epiCurveDataPerPresentCondition" : {
      "post" : {
        "operationId" : "getEpidemiologicalCurveDataPerPresentCondition",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/epiCurveElementsContactClassification" : {
      "post" : {
        "operationId" : "getEpiCurveSeriesElementsPerContactClassification",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "integer",
                      "format" : "int64"
                    }
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/epiCurveElementsContactFollowUpStatus" : {
      "post" : {
        "operationId" : "getEpiCurveSeriesElementsPerContactFollowUpStatus",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "integer",
                      "format" : "int64"
                    }
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/epiCurveElementsContactFollowUpUntil" : {
      "post" : {
        "operationId" : "getEpiCurveSeriesElementsPerContactFollowUpUntil",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/loadMapCaseData" : {
      "post" : {
        "operationId" : "getMapCaseData",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MapCaseDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/loadMapContactData" : {
      "post" : {
        "operationId" : "getMapContactData",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MapContactDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/loadMapEventData" : {
      "post" : {
        "operationId" : "getMapEventData",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DashboardEventDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/newCases" : {
      "post" : {
        "operationId" : "getDashboardCaseStatistic",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardCaseStatisticDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/newEvents" : {
      "post" : {
        "operationId" : "getEventCountByStatus",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "integer",
                    "format" : "int64"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/dashboard/testResults" : {
      "post" : {
        "operationId" : "getTestResultCountByResultType",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "integer",
                    "format" : "int64"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Dashboard Controller" ]
      }
    },
    "/diseaseconfigurations/all/{since}" : {
      "get" : {
        "operationId" : "getAllDiseaseConfigurations",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiseaseConfigurationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Disease Configuration Controller" ]
      }
    },
    "/diseaseconfigurations/diseaseNames" : {
      "get" : {
        "operationId" : "getDiseases",
        "parameters" : [ {
          "in" : "query",
          "name" : "active",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "primary",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "caseBased",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Disease Configuration Controller" ]
      }
    },
    "/diseaseconfigurations/diseaseVariants" : {
      "get" : {
        "operationId" : "getDiseaseVariants",
        "parameters" : [ {
          "in" : "query",
          "name" : "disease",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomizableEnum"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Disease Configuration Controller" ]
      }
    },
    "/diseaseconfigurations/query" : {
      "post" : {
        "operationId" : "getByUuids_14",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiseaseConfigurationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Disease Configuration Controller" ]
      }
    },
    "/diseaseconfigurations/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_11",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Disease Configuration Controller" ]
      }
    },
    "/districts/all/{since}" : {
      "get" : {
        "operationId" : "getAll_7",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DistrictDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "District Controller" ]
      }
    },
    "/districts/archive" : {
      "post" : {
        "operationId" : "archive_3",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "District Controller" ]
      }
    },
    "/districts/dearchive" : {
      "post" : {
        "operationId" : "dearchive_3",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "District Controller" ]
      }
    },
    "/districts/indexList" : {
      "post" : {
        "operationId" : "getIndexList_8",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDistrictIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "District Controller" ]
      }
    },
    "/districts/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_10",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DistrictDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "District Controller" ]
      }
    },
    "/districts/query" : {
      "post" : {
        "operationId" : "getByUuids_15",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DistrictDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "District Controller" ]
      }
    },
    "/districts/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_12",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "District Controller" ]
      }
    },
    "/documents/entityDocuments" : {
      "post" : {
        "operationId" : "getDocumentsRelatedToEntities",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CriteriaWithSortingDocumentCriteria"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/DocumentDto"
                    }
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document Controller" ]
      }
    },
    "/documents/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document Controller" ]
      }
    },
    "/environments/all/{since}" : {
      "get" : {
        "operationId" : "getAllEnvironments",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnvironmentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environments/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllEnvironments_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnvironmentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environments/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environments/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_11",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EnvironmentDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environments/query" : {
      "post" : {
        "operationId" : "getByUuids_16",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnvironmentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environments/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_13",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environments/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnvironmentDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Controller" ]
      }
    },
    "/environmentsamples/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllAfter",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnvironmentSampleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Sample Controller" ]
      }
    },
    "/environmentsamples/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Sample Controller" ]
      }
    },
    "/environmentsamples/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_12",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EnvironmentSampleDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Entity Dto Controller" ]
      }
    },
    "/environmentsamples/query" : {
      "post" : {
        "operationId" : "getByUuids_17",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnvironmentSampleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Sample Controller" ]
      }
    },
    "/environmentsamples/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_14",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Environment Sample Controller" ]
      }
    },
    "/eventGroups/indexList" : {
      "post" : {
        "operationId" : "getIndexList_9",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEventGroupIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Group Controller" ]
      }
    },
    "/eventGroups/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_13",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EventGroupDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Event Group Controller" ]
      }
    },
    "/eventGroups/{uuid}" : {
      "delete" : {
        "operationId" : "delete_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Group Controller" ]
      },
      "get" : {
        "operationId" : "getByUuid_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventGroupDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Group Controller" ]
      }
    },
    "/eventGroups/{uuid}/linkEvents" : {
      "post" : {
        "operationId" : "linkEventsToGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Group Controller" ]
      }
    },
    "/eventGroups/{uuid}/unlinkEvent" : {
      "post" : {
        "operationId" : "unlinkEventGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "eventUuid",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Group Controller" ]
      }
    },
    "/eventparticipants/all/{since}" : {
      "get" : {
        "operationId" : "getAllEventParticipantsAfter",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventParticipantDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllEventParticipantsAfter_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventParticipantDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/archived/{since}" : {
      "get" : {
        "operationId" : "getArchivedUuidsSince_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/indexList" : {
      "post" : {
        "operationId" : "getIndexList_10",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEventParticipantIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_14",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EventParticipantDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/query" : {
      "post" : {
        "operationId" : "getByUuids_18",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventParticipantDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/query/events" : {
      "post" : {
        "operationId" : "getByEventUuids",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventParticipantDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/query/persons" : {
      "post" : {
        "operationId" : "getByPersonUuids_2",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventParticipantDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_3",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/eventparticipants/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventParticipantDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Participant Controller" ]
      }
    },
    "/events/all/{since}" : {
      "get" : {
        "operationId" : "getAllEvents",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllEvents_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/archived/{since}" : {
      "get" : {
        "operationId" : "getArchivedUuidsSince_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/children" : {
      "post" : {
        "operationId" : "getChildrenUuids",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/delete" : {
      "post" : {
        "operationId" : "delete_3",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/externalData" : {
      "post" : {
        "operationId" : "updateExternalData_2",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/indexList" : {
      "post" : {
        "operationId" : "getIndexList_11",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEventIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_15",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EventDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/query" : {
      "post" : {
        "operationId" : "getByUuids_19",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/specificEvent/{searchTerm}" : {
      "get" : {
        "operationId" : "getSpecificCase_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "searchTerm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_4",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/events/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_6",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Controller" ]
      }
    },
    "/external-surveillance/share/cases" : {
      "post" : {
        "operationId" : "importCases",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "External Surveillance Tool Gateway Controller" ]
      }
    },
    "/external-surveillance/share/events" : {
      "post" : {
        "operationId" : "importEvents",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "External Surveillance Tool Gateway Controller" ]
      }
    },
    "/facilities/archive" : {
      "post" : {
        "operationId" : "archive_4",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/dearchive" : {
      "post" : {
        "operationId" : "dearchive_4",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/general/{since}" : {
      "get" : {
        "operationId" : "getAllWithoutRegion",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FacilityDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/indexList" : {
      "post" : {
        "operationId" : "getIndexList_12",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageFacilityIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_17",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/FacilityDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/query" : {
      "post" : {
        "operationId" : "getByUuids_20",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FacilityDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/region/{regionUuid}/{since}" : {
      "get" : {
        "operationId" : "getAllByRegion",
        "parameters" : [ {
          "in" : "path",
          "name" : "regionUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FacilityDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/facilities/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_15",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Facility Controller" ]
      }
    },
    "/featureconfigurations/all/{since}" : {
      "get" : {
        "operationId" : "getAllFeatureConfigurations",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FeatureConfigurationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Configuration Controller" ]
      }
    },
    "/featureconfigurations/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuids",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Configuration Controller" ]
      }
    },
    "/featureconfigurations/query" : {
      "post" : {
        "operationId" : "getByUuids_21",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FeatureConfigurationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Configuration Controller" ]
      }
    },
    "/featureconfigurations/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_16",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Configuration Controller" ]
      }
    },
    "/immunizations/all/{since}" : {
      "get" : {
        "operationId" : "getAllAfter_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImmunizationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllAfter_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImmunizationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/archived/{since}" : {
      "get" : {
        "operationId" : "getArchivedUuidsSince_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/createVaccination" : {
      "post" : {
        "operationId" : "createVaccination",
        "parameters" : [ {
          "in" : "query",
          "name" : "regionUuid",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "districtUuid",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "personUuid",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "disease",
          "schema" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VaccinationDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaccinationDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/delete" : {
      "post" : {
        "operationId" : "delete_4",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/indexList" : {
      "post" : {
        "operationId" : "getIndexList_13",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageImmunizationIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_6",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_18",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ImmunizationDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/query" : {
      "post" : {
        "operationId" : "getByUuids_22",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImmunizationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/query/persons" : {
      "post" : {
        "operationId" : "getByPersonUuids_3",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImmunizationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_17",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/vaccination/postUpdate/{uuid}" : {
      "post" : {
        "operationId" : "postUpdate_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaccinationDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/vaccination/push" : {
      "post" : {
        "operationId" : "postVaccination",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VaccinationDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaccinationDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/vaccination/{uuid}" : {
      "get" : {
        "operationId" : "getVaccinationByUuid",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaccinationDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/vaccinations" : {
      "post" : {
        "operationId" : "getAllVaccinations",
        "parameters" : [ {
          "in" : "query",
          "name" : "personUuid",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "disease",
          "schema" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VaccinationDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/immunizations/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_7",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImmunizationDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Immunization Controller" ]
      }
    },
    "/info/appurl" : {
      "get" : {
        "operationId" : "getAppUrl",
        "parameters" : [ {
          "in" : "query",
          "name" : "appVersion",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Info Controller" ]
      }
    },
    "/info/checkcompatibility" : {
      "get" : {
        "operationId" : "isCompatibleToApi",
        "parameters" : [ {
          "in" : "query",
          "name" : "appVersion",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string",
                  "enum" : [ "COMPATIBLE", "TOO_OLD", "TOO_NEW" ]
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Info Controller" ]
      }
    },
    "/info/countryname" : {
      "get" : {
        "operationId" : "getCountryName",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Info Controller" ]
      }
    },
    "/info/locale" : {
      "get" : {
        "operationId" : "getLocale",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Info Controller" ]
      }
    },
    "/info/version" : {
      "get" : {
        "operationId" : "getVersion_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Info Controller" ]
      }
    },
    "/infrastructure/sync" : {
      "post" : {
        "operationId" : "getInfrastructureSyncData",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/InfrastructureChangeDatesDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InfrastructureSyncDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Infrastructure Controller" ]
      }
    },
    "/labmessages/indexList" : {
      "post" : {
        "operationId" : "getIndexList_14",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageExternalMessageIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lab Message Controller" ]
      }
    },
    "/labmessages/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_8",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalMessageDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lab Message Controller" ]
      }
    },
    "/lineListing/delete" : {
      "post" : {
        "operationId" : "deleteFeatureConfigurations",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeatureConfigurationCriteria"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Line Listing Controller" ]
      }
    },
    "/lineListing/enabled" : {
      "post" : {
        "operationId" : "getEnabledFeatureConfigurations",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/FeatureConfigurationIndexDto"
                    }
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Line Listing Controller" ]
      }
    },
    "/lineListing/indexList" : {
      "post" : {
        "operationId" : "getIndexList_15",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageFeatureConfigurationIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Line Listing Controller" ]
      }
    },
    "/lineListing/push" : {
      "post" : {
        "operationId" : "postFeatureConfigurations",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/FeatureConfigurationIndexDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Line Listing Controller" ]
      }
    },
    "/outbreaks/active/{since}" : {
      "get" : {
        "operationId" : "getActiveSince",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OutbreakDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Outbreak Controller" ]
      }
    },
    "/outbreaks/inactive/{since}" : {
      "get" : {
        "operationId" : "getInactiveUuidsSince",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Outbreak Controller" ]
      }
    },
    "/outbreaks/indexList" : {
      "post" : {
        "operationId" : "getIndexList_16",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOutbreakDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Outbreak Controller" ]
      }
    },
    "/outbreaks/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_19",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/OutbreakDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Outbreak Controller" ]
      }
    },
    "/outbreaks/uuids" : {
      "get" : {
        "operationId" : "getActiveUuids",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Outbreak Controller" ]
      }
    },
    "/pathogentests/all/{since}" : {
      "get" : {
        "operationId" : "getAllPathogenTests",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PathogenTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllPathogenTests_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PathogenTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/indexList" : {
      "post" : {
        "operationId" : "getIndexList_17",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePathogenTestDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_20",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PathogenTestDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/query" : {
      "post" : {
        "operationId" : "getByUuids_23",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PathogenTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/query/samples" : {
      "post" : {
        "operationId" : "getBySampleUuids",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PathogenTestDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/pathogentests/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_5",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Pathogen Test Controller" ]
      }
    },
    "/persons/all/{since}" : {
      "get" : {
        "operationId" : "getAllPersons",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllPersons_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/externalData" : {
      "post" : {
        "operationId" : "updateExternalData_3",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalDataDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/indexList" : {
      "post" : {
        "operationId" : "getIndexList_18",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePersonIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_21",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PersonDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/query" : {
      "post" : {
        "operationId" : "getByUuids_24",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/query/byExternalIds" : {
      "post" : {
        "operationId" : "getByExternalIds",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/similarPersons" : {
      "post" : {
        "operationId" : "getSimilarPersons",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SimilarPersonDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_18",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/persons/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_9",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Person Controller" ]
      }
    },
    "/pointsofentry/all/{since}" : {
      "get" : {
        "operationId" : "getAll_8",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PointOfEntryDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/pointsofentry/archive" : {
      "post" : {
        "operationId" : "archive_5",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/pointsofentry/dearchive" : {
      "post" : {
        "operationId" : "dearchive_5",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/pointsofentry/indexList" : {
      "post" : {
        "operationId" : "getIndexList_19",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePointOfEntryDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/pointsofentry/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_22",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PointOfEntryDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/pointsofentry/query" : {
      "post" : {
        "operationId" : "getByUuids_25",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PointOfEntryDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/pointsofentry/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_19",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Point Of Entry Controller" ]
      }
    },
    "/prescriptions/all/{since}" : {
      "get" : {
        "operationId" : "getAllPrescriptions",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrescriptionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Prescription Controller" ]
      }
    },
    "/prescriptions/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllPrescriptions_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrescriptionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Prescription Controller" ]
      }
    },
    "/prescriptions/indexList" : {
      "post" : {
        "operationId" : "getIndexList_20",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrescriptionIndexDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Prescription Controller" ]
      }
    },
    "/prescriptions/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_23",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PrescriptionDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Prescription Controller" ]
      }
    },
    "/prescriptions/query" : {
      "post" : {
        "operationId" : "getByUuids_26",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrescriptionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Prescription Controller" ]
      }
    },
    "/prescriptions/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_6",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Prescription Controller" ]
      }
    },
    "/regions/all/{since}" : {
      "get" : {
        "operationId" : "getAll_9",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RegionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Region Controller" ]
      }
    },
    "/regions/archive" : {
      "post" : {
        "operationId" : "archive_6",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Region Controller" ]
      }
    },
    "/regions/dearchive" : {
      "post" : {
        "operationId" : "dearchive_6",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Region Controller" ]
      }
    },
    "/regions/indexList" : {
      "post" : {
        "operationId" : "getIndexList_21",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageRegionIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Region Controller" ]
      }
    },
    "/regions/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_24",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/RegionDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Region Controller" ]
      }
    },
    "/regions/query" : {
      "post" : {
        "operationId" : "getByUuids_27",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RegionDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Region Controller" ]
      }
    },
    "/regions/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_20",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Region Controller" ]
      }
    },
    "/samples/all/{since}" : {
      "get" : {
        "operationId" : "getAllSamples",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SampleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllSamples_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SampleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/delete" : {
      "post" : {
        "operationId" : "delete_5",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuidsSince_6",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/indexList" : {
      "post" : {
        "operationId" : "getIndexList_22",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSampleIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_7",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_25",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SampleDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/query" : {
      "post" : {
        "operationId" : "getByUuids_28",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SampleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/query/cases" : {
      "post" : {
        "operationId" : "getByCaseUuids",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SampleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_7",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/samples/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_10",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SampleDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sample Controller" ]
      }
    },
    "/sharerequests/indexList" : {
      "post" : {
        "operationId" : "getIndexList_23",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageShareRequestIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Share Request Controller" ]
      }
    },
    "/sharerequests/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_11",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SormasToSormasShareRequestDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Share Request Controller" ]
      }
    },
    "/sormasToSormas/cases" : {
      "post" : {
        "operationId" : "saveSharedCase",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/cases/request" : {
      "post" : {
        "operationId" : "saveSharedCaseRequest",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/cases/request/data" : {
      "post" : {
        "operationId" : "getDataForCaseRequest",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/cases/shares" : {
      "post" : {
        "operationId" : "getCaseReShares",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/cases/sync" : {
      "post" : {
        "operationId" : "syncSharedCases",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/cert" : {
      "get" : {
        "operationId" : "getCertificate",
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/contacts" : {
      "post" : {
        "operationId" : "saveSharedContact",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/contacts/request" : {
      "post" : {
        "operationId" : "saveSharedContactRequest",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/contacts/request/data" : {
      "post" : {
        "operationId" : "getDataForContactRequest",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/contacts/shares" : {
      "post" : {
        "operationId" : "getContactReShares",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/contacts/sync" : {
      "post" : {
        "operationId" : "syncSharedContacts",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/events" : {
      "post" : {
        "operationId" : "saveSharedEvents",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/events/request" : {
      "post" : {
        "operationId" : "saveSharedEventRequest",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/events/request/data" : {
      "post" : {
        "operationId" : "getDataForEventRequest",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/events/shares" : {
      "post" : {
        "operationId" : "getEventReShares",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/events/sync" : {
      "post" : {
        "operationId" : "syncSharedEvents",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/externalmessages" : {
      "post" : {
        "operationId" : "syncSharedLAbMessages",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/reject-requests" : {
      "post" : {
        "operationId" : "rejectShareRequests",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/request/accepted" : {
      "post" : {
        "operationId" : "acceptedShareRequests",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/sormasToSormas/revoke-requests" : {
      "post" : {
        "operationId" : "revokeShareRequests",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SormasToSormasEncryptedDataDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sormas To Sormas Controller" ]
      }
    },
    "/subcontinents/all/{since}" : {
      "get" : {
        "operationId" : "getAll_10",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubcontinentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/subcontinents/archive" : {
      "post" : {
        "operationId" : "archive_7",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/subcontinents/dearchive" : {
      "post" : {
        "operationId" : "dearchive_7",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/subcontinents/indexList" : {
      "post" : {
        "operationId" : "getIndexList_24",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSubcontinentIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/subcontinents/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_26",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SubcontinentDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/subcontinents/query" : {
      "post" : {
        "operationId" : "getByUuids_29",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubcontinentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/subcontinents/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_21",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subcontinent Controller" ]
      }
    },
    "/surveillancereports/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_27",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SurveillanceReportDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Surveillance Report Controller" ]
      }
    },
    "/surveillancereports/query/cases" : {
      "post" : {
        "operationId" : "getByCaseUuids_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SurveillanceReportDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Surveillance Report Controller" ]
      }
    },
    "/tasks/all/{since}" : {
      "get" : {
        "operationId" : "getAll_11",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAll_12",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/archived/{since}" : {
      "get" : {
        "operationId" : "getArchivedUuidsSince_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/delete" : {
      "post" : {
        "operationId" : "delete_6",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/indexList" : {
      "post" : {
        "operationId" : "getIndexList_25",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageTaskIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/obsolete/{since}" : {
      "get" : {
        "operationId" : "getObsoleteUuidsSince_8",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_28",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TaskDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/query" : {
      "post" : {
        "operationId" : "getByUuids_30",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_8",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/tasks/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_12",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Task Controller" ]
      }
    },
    "/travelentries/indexList" : {
      "post" : {
        "operationId" : "getIndexList_26",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageTravelEntryIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Travel Entry Controller" ]
      }
    },
    "/travelentries/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_29",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TravelEntryDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Travel Entry Controller" ]
      }
    },
    "/travelentries/{uuid}" : {
      "delete" : {
        "operationId" : "delete_7",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Travel Entry Controller" ]
      },
      "get" : {
        "operationId" : "getByUuid_13",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TravelEntryDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Travel Entry Controller" ]
      }
    },
    "/treatments/all/{since}" : {
      "get" : {
        "operationId" : "getAllTreatments",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TreatmentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Treatment Controller" ]
      }
    },
    "/treatments/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllTreatments_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TreatmentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Treatment Controller" ]
      }
    },
    "/treatments/indexList" : {
      "post" : {
        "operationId" : "getIndexList_27",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TreatmentIndexDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Treatment Controller" ]
      }
    },
    "/treatments/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_30",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TreatmentDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Treatment Controller" ]
      }
    },
    "/treatments/query" : {
      "post" : {
        "operationId" : "getByUuids_31",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TreatmentDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Treatment Controller" ]
      }
    },
    "/treatments/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_9",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Treatment Controller" ]
      }
    },
    "/userroles/all/{since}" : {
      "get" : {
        "operationId" : "getAll_14",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserRoleDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Role Controller" ]
      }
    },
    "/userroles/deleted/{since}" : {
      "get" : {
        "operationId" : "getDeletedUuids_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Role Controller" ]
      }
    },
    "/userroles/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_23",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Role Controller" ]
      }
    },
    "/users/all/{since}" : {
      "get" : {
        "operationId" : "getAll_13",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/indexList" : {
      "post" : {
        "operationId" : "getIndexList_28",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/query" : {
      "post" : {
        "operationId" : "getByUuids_32",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/rights" : {
      "get" : {
        "operationId" : "getUserRightsForCurrentUser",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "enum" : [ "CASE_VIEW", "CASE_CREATE", "CASE_EDIT", "CASE_DELETE", "CASE_ARCHIVE", "CASE_VIEW_ARCHIVED", "CASE_IMPORT", "CASE_EXPORT", "CASE_INVESTIGATE", "CASE_CLASSIFY", "CASE_CHANGE_DISEASE", "CASE_CHANGE_EPID_NUMBER", "CASE_TRANSFER", "CASE_REFER_FROM_POE", "CASE_MERGE", "CASE_SHARE", "CASE_RESPONSIBLE", "GRANT_SPECIAL_CASE_ACCESS", "IMMUNIZATION_VIEW", "IMMUNIZATION_CREATE", "IMMUNIZATION_EDIT", "IMMUNIZATION_DELETE", "IMMUNIZATION_ARCHIVE", "IMMUNIZATION_VIEW_ARCHIVED", "PERSON_VIEW", "PERSON_EDIT", "PERSON_DELETE", "PERSON_EXPORT", "PERSON_CONTACT_DETAILS_DELETE", "PERSON_MERGE", "SAMPLE_VIEW", "SAMPLE_CREATE", "SAMPLE_EDIT", "SAMPLE_DELETE", "SAMPLE_EXPORT", "SAMPLE_TRANSFER", "SAMPLE_EDIT_NOT_OWNED", "PATHOGEN_TEST_CREATE", "PATHOGEN_TEST_EDIT", "PATHOGEN_TEST_DELETE", "ADDITIONAL_TEST_VIEW", "ADDITIONAL_TEST_CREATE", "ADDITIONAL_TEST_EDIT", "ADDITIONAL_TEST_DELETE", "CONTACT_VIEW", "CONTACT_CREATE", "CONTACT_EDIT", "CONTACT_DELETE", "CONTACT_ARCHIVE", "CONTACT_VIEW_ARCHIVED", "CONTACT_IMPORT", "CONTACT_EXPORT", "CONTACT_CONVERT", "CONTACT_REASSIGN_CASE", "CONTACT_MERGE", "CONTACT_RESPONSIBLE", "VISIT_CREATE", "VISIT_EDIT", "VISIT_DELETE", "VISIT_EXPORT", "TASK_VIEW", "TASK_CREATE", "TASK_EDIT", "TASK_DELETE", "TASK_EXPORT", "TASK_ASSIGN", "TASK_ARCHIVE", "TASK_VIEW_ARCHIVED", "ACTION_CREATE", "ACTION_DELETE", "ACTION_EDIT", "EVENT_VIEW", "EVENT_CREATE", "EVENT_EDIT", "EVENT_DELETE", "EVENT_ARCHIVE", "EVENT_VIEW_ARCHIVED", "EVENT_IMPORT", "EVENT_EXPORT", "EVENT_RESPONSIBLE", "EVENTPARTICIPANT_VIEW", "EVENTPARTICIPANT_CREATE", "EVENTPARTICIPANT_EDIT", "EVENTPARTICIPANT_DELETE", "EVENTPARTICIPANT_ARCHIVE", "EVENTPARTICIPANT_VIEW_ARCHIVED", "EVENTPARTICIPANT_IMPORT", "EVENTGROUP_CREATE", "EVENTGROUP_EDIT", "EVENTGROUP_ARCHIVE", "EVENTGROUP_VIEW_ARCHIVED", "EVENTGROUP_DELETE", "EVENTGROUP_LINK", "USER_VIEW", "USER_CREATE", "USER_EDIT", "USER_ROLE_VIEW", "USER_ROLE_EDIT", "USER_ROLE_DELETE", "STATISTICS_ACCESS", "STATISTICS_EXPORT", "INFRASTRUCTURE_VIEW", "INFRASTRUCTURE_CREATE", "INFRASTRUCTURE_EDIT", "INFRASTRUCTURE_IMPORT", "INFRASTRUCTURE_ARCHIVE", "INFRASTRUCTURE_VIEW_ARCHIVED", "INFRASTRUCTURE_EXPORT", "POPULATION_MANAGE", "DASHBOARD_SURVEILLANCE_VIEW", "DASHBOARD_CONTACT_VIEW", "DASHBOARD_CONTACT_VIEW_TRANSMISSION_CHAINS", "DASHBOARD_CAMPAIGNS_VIEW", "DASHBOARD_SAMPLES_VIEW", "CASE_CLINICIAN_VIEW", "THERAPY_VIEW", "PRESCRIPTION_CREATE", "PRESCRIPTION_EDIT", "PRESCRIPTION_DELETE", "TREATMENT_CREATE", "TREATMENT_EDIT", "TREATMENT_DELETE", "CLINICAL_COURSE_VIEW", "CLINICAL_COURSE_EDIT", "CLINICAL_VISIT_CREATE", "CLINICAL_VISIT_EDIT", "CLINICAL_VISIT_DELETE", "PORT_HEALTH_INFO_VIEW", "PORT_HEALTH_INFO_EDIT", "WEEKLYREPORT_VIEW", "WEEKLYREPORT_CREATE", "AGGREGATE_REPORT_VIEW", "AGGREGATE_REPORT_EDIT", "AGGREGATE_REPORT_EXPORT", "SEE_PERSONAL_DATA_IN_JURISDICTION", "SEE_PERSONAL_DATA_OUTSIDE_JURISDICTION", "SEE_SENSITIVE_DATA_IN_JURISDICTION", "SEE_SENSITIVE_DATA_OUTSIDE_JURISDICTION", "CAMPAIGN_VIEW", "CAMPAIGN_EDIT", "CAMPAIGN_ARCHIVE", "CAMPAIGN_VIEW_ARCHIVED", "CAMPAIGN_DELETE", "CAMPAIGN_FORM_DATA_VIEW", "CAMPAIGN_FORM_DATA_EDIT", "CAMPAIGN_FORM_DATA_ARCHIVE", "CAMPAIGN_FORM_DATA_DELETE", "CAMPAIGN_FORM_DATA_VIEW_ARCHIVED", "CAMPAIGN_FORM_DATA_EXPORT", "TRAVEL_ENTRY_MANAGEMENT_ACCESS", "TRAVEL_ENTRY_VIEW", "TRAVEL_ENTRY_CREATE", "TRAVEL_ENTRY_EDIT", "TRAVEL_ENTRY_ARCHIVE", "TRAVEL_ENTRY_VIEW_ARCHIVED", "TRAVEL_ENTRY_DELETE", "ENVIRONMENT_VIEW", "ENVIRONMENT_CREATE", "ENVIRONMENT_EDIT", "ENVIRONMENT_ARCHIVE", "ENVIRONMENT_VIEW_ARCHIVED", "ENVIRONMENT_DELETE", "ENVIRONMENT_IMPORT", "ENVIRONMENT_EXPORT", "ENVIRONMENT_SAMPLE_VIEW", "ENVIRONMENT_SAMPLE_CREATE", "ENVIRONMENT_SAMPLE_EDIT", "ENVIRONMENT_SAMPLE_EDIT_DISPATCH", "ENVIRONMENT_SAMPLE_EDIT_RECEIVAL", "ENVIRONMENT_SAMPLE_DELETE", "ENVIRONMENT_SAMPLE_IMPORT", "ENVIRONMENT_SAMPLE_EXPORT", "ENVIRONMENT_PATHOGEN_TEST_CREATE", "ENVIRONMENT_PATHOGEN_TEST_EDIT", "ENVIRONMENT_PATHOGEN_TEST_DELETE", "SELF_REPORT_VIEW", "SELF_REPORT_CREATE", "SELF_REPORT_EDIT", "SELF_REPORT_DELETE", "SELF_REPORT_ARCHIVE", "SELF_REPORT_PROCESS", "SELF_REPORT_IMPORT", "SELF_REPORT_EXPORT", "DOCUMENT_VIEW", "DOCUMENT_UPLOAD", "DOCUMENT_DELETE", "PERFORM_BULK_OPERATIONS", "PERFORM_BULK_OPERATIONS_PSEUDONYM", "QUARANTINE_ORDER_CREATE", "SORMAS_REST", "SORMAS_UI", "DATABASE_EXPORT_ACCESS", "EXPORT_DATA_PROTECTION_DATA", "BAG_EXPORT", "SEND_MANUAL_EXTERNAL_MESSAGES", "MANAGE_EXTERNAL_SYMPTOM_JOURNAL", "EXTERNAL_VISITS", "SORMAS_TO_SORMAS_CLIENT", "SORMAS_TO_SORMAS_SHARE", "SORMAS_TO_SORMAS_PROCESS", "EXTERNAL_SURVEILLANCE_SHARE", "EXTERNAL_SURVEILLANCE_DELETE", "EXTERNAL_MESSAGE_VIEW", "EXTERNAL_MESSAGE_PROCESS", "EXTERNAL_MESSAGE_PUSH", "EXTERNAL_MESSAGE_DELETE", "OUTBREAK_VIEW", "OUTBREAK_EDIT", "MANAGE_PUBLIC_EXPORT_CONFIGURATION", "DOCUMENT_TEMPLATE_MANAGEMENT", "LINE_LISTING_CONFIGURE", "DEV_MODE", "EMAIL_TEMPLATE_MANAGEMENT", "EXTERNAL_EMAIL_SEND", "EXTERNAL_EMAIL_ATTACH_DOCUMENTS", "CUSTOMIZABLE_ENUM_MANAGEMENT" ]
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/rights/{uuid}" : {
      "get" : {
        "operationId" : "getUserRights",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "enum" : [ "CASE_VIEW", "CASE_CREATE", "CASE_EDIT", "CASE_DELETE", "CASE_ARCHIVE", "CASE_VIEW_ARCHIVED", "CASE_IMPORT", "CASE_EXPORT", "CASE_INVESTIGATE", "CASE_CLASSIFY", "CASE_CHANGE_DISEASE", "CASE_CHANGE_EPID_NUMBER", "CASE_TRANSFER", "CASE_REFER_FROM_POE", "CASE_MERGE", "CASE_SHARE", "CASE_RESPONSIBLE", "GRANT_SPECIAL_CASE_ACCESS", "IMMUNIZATION_VIEW", "IMMUNIZATION_CREATE", "IMMUNIZATION_EDIT", "IMMUNIZATION_DELETE", "IMMUNIZATION_ARCHIVE", "IMMUNIZATION_VIEW_ARCHIVED", "PERSON_VIEW", "PERSON_EDIT", "PERSON_DELETE", "PERSON_EXPORT", "PERSON_CONTACT_DETAILS_DELETE", "PERSON_MERGE", "SAMPLE_VIEW", "SAMPLE_CREATE", "SAMPLE_EDIT", "SAMPLE_DELETE", "SAMPLE_EXPORT", "SAMPLE_TRANSFER", "SAMPLE_EDIT_NOT_OWNED", "PATHOGEN_TEST_CREATE", "PATHOGEN_TEST_EDIT", "PATHOGEN_TEST_DELETE", "ADDITIONAL_TEST_VIEW", "ADDITIONAL_TEST_CREATE", "ADDITIONAL_TEST_EDIT", "ADDITIONAL_TEST_DELETE", "CONTACT_VIEW", "CONTACT_CREATE", "CONTACT_EDIT", "CONTACT_DELETE", "CONTACT_ARCHIVE", "CONTACT_VIEW_ARCHIVED", "CONTACT_IMPORT", "CONTACT_EXPORT", "CONTACT_CONVERT", "CONTACT_REASSIGN_CASE", "CONTACT_MERGE", "CONTACT_RESPONSIBLE", "VISIT_CREATE", "VISIT_EDIT", "VISIT_DELETE", "VISIT_EXPORT", "TASK_VIEW", "TASK_CREATE", "TASK_EDIT", "TASK_DELETE", "TASK_EXPORT", "TASK_ASSIGN", "TASK_ARCHIVE", "TASK_VIEW_ARCHIVED", "ACTION_CREATE", "ACTION_DELETE", "ACTION_EDIT", "EVENT_VIEW", "EVENT_CREATE", "EVENT_EDIT", "EVENT_DELETE", "EVENT_ARCHIVE", "EVENT_VIEW_ARCHIVED", "EVENT_IMPORT", "EVENT_EXPORT", "EVENT_RESPONSIBLE", "EVENTPARTICIPANT_VIEW", "EVENTPARTICIPANT_CREATE", "EVENTPARTICIPANT_EDIT", "EVENTPARTICIPANT_DELETE", "EVENTPARTICIPANT_ARCHIVE", "EVENTPARTICIPANT_VIEW_ARCHIVED", "EVENTPARTICIPANT_IMPORT", "EVENTGROUP_CREATE", "EVENTGROUP_EDIT", "EVENTGROUP_ARCHIVE", "EVENTGROUP_VIEW_ARCHIVED", "EVENTGROUP_DELETE", "EVENTGROUP_LINK", "USER_VIEW", "USER_CREATE", "USER_EDIT", "USER_ROLE_VIEW", "USER_ROLE_EDIT", "USER_ROLE_DELETE", "STATISTICS_ACCESS", "STATISTICS_EXPORT", "INFRASTRUCTURE_VIEW", "INFRASTRUCTURE_CREATE", "INFRASTRUCTURE_EDIT", "INFRASTRUCTURE_IMPORT", "INFRASTRUCTURE_ARCHIVE", "INFRASTRUCTURE_VIEW_ARCHIVED", "INFRASTRUCTURE_EXPORT", "POPULATION_MANAGE", "DASHBOARD_SURVEILLANCE_VIEW", "DASHBOARD_CONTACT_VIEW", "DASHBOARD_CONTACT_VIEW_TRANSMISSION_CHAINS", "DASHBOARD_CAMPAIGNS_VIEW", "DASHBOARD_SAMPLES_VIEW", "CASE_CLINICIAN_VIEW", "THERAPY_VIEW", "PRESCRIPTION_CREATE", "PRESCRIPTION_EDIT", "PRESCRIPTION_DELETE", "TREATMENT_CREATE", "TREATMENT_EDIT", "TREATMENT_DELETE", "CLINICAL_COURSE_VIEW", "CLINICAL_COURSE_EDIT", "CLINICAL_VISIT_CREATE", "CLINICAL_VISIT_EDIT", "CLINICAL_VISIT_DELETE", "PORT_HEALTH_INFO_VIEW", "PORT_HEALTH_INFO_EDIT", "WEEKLYREPORT_VIEW", "WEEKLYREPORT_CREATE", "AGGREGATE_REPORT_VIEW", "AGGREGATE_REPORT_EDIT", "AGGREGATE_REPORT_EXPORT", "SEE_PERSONAL_DATA_IN_JURISDICTION", "SEE_PERSONAL_DATA_OUTSIDE_JURISDICTION", "SEE_SENSITIVE_DATA_IN_JURISDICTION", "SEE_SENSITIVE_DATA_OUTSIDE_JURISDICTION", "CAMPAIGN_VIEW", "CAMPAIGN_EDIT", "CAMPAIGN_ARCHIVE", "CAMPAIGN_VIEW_ARCHIVED", "CAMPAIGN_DELETE", "CAMPAIGN_FORM_DATA_VIEW", "CAMPAIGN_FORM_DATA_EDIT", "CAMPAIGN_FORM_DATA_ARCHIVE", "CAMPAIGN_FORM_DATA_DELETE", "CAMPAIGN_FORM_DATA_VIEW_ARCHIVED", "CAMPAIGN_FORM_DATA_EXPORT", "TRAVEL_ENTRY_MANAGEMENT_ACCESS", "TRAVEL_ENTRY_VIEW", "TRAVEL_ENTRY_CREATE", "TRAVEL_ENTRY_EDIT", "TRAVEL_ENTRY_ARCHIVE", "TRAVEL_ENTRY_VIEW_ARCHIVED", "TRAVEL_ENTRY_DELETE", "ENVIRONMENT_VIEW", "ENVIRONMENT_CREATE", "ENVIRONMENT_EDIT", "ENVIRONMENT_ARCHIVE", "ENVIRONMENT_VIEW_ARCHIVED", "ENVIRONMENT_DELETE", "ENVIRONMENT_IMPORT", "ENVIRONMENT_EXPORT", "ENVIRONMENT_SAMPLE_VIEW", "ENVIRONMENT_SAMPLE_CREATE", "ENVIRONMENT_SAMPLE_EDIT", "ENVIRONMENT_SAMPLE_EDIT_DISPATCH", "ENVIRONMENT_SAMPLE_EDIT_RECEIVAL", "ENVIRONMENT_SAMPLE_DELETE", "ENVIRONMENT_SAMPLE_IMPORT", "ENVIRONMENT_SAMPLE_EXPORT", "ENVIRONMENT_PATHOGEN_TEST_CREATE", "ENVIRONMENT_PATHOGEN_TEST_EDIT", "ENVIRONMENT_PATHOGEN_TEST_DELETE", "SELF_REPORT_VIEW", "SELF_REPORT_CREATE", "SELF_REPORT_EDIT", "SELF_REPORT_DELETE", "SELF_REPORT_ARCHIVE", "SELF_REPORT_PROCESS", "SELF_REPORT_IMPORT", "SELF_REPORT_EXPORT", "DOCUMENT_VIEW", "DOCUMENT_UPLOAD", "DOCUMENT_DELETE", "PERFORM_BULK_OPERATIONS", "PERFORM_BULK_OPERATIONS_PSEUDONYM", "QUARANTINE_ORDER_CREATE", "SORMAS_REST", "SORMAS_UI", "DATABASE_EXPORT_ACCESS", "EXPORT_DATA_PROTECTION_DATA", "BAG_EXPORT", "SEND_MANUAL_EXTERNAL_MESSAGES", "MANAGE_EXTERNAL_SYMPTOM_JOURNAL", "EXTERNAL_VISITS", "SORMAS_TO_SORMAS_CLIENT", "SORMAS_TO_SORMAS_SHARE", "SORMAS_TO_SORMAS_PROCESS", "EXTERNAL_SURVEILLANCE_SHARE", "EXTERNAL_SURVEILLANCE_DELETE", "EXTERNAL_MESSAGE_VIEW", "EXTERNAL_MESSAGE_PROCESS", "EXTERNAL_MESSAGE_PUSH", "EXTERNAL_MESSAGE_DELETE", "OUTBREAK_VIEW", "OUTBREAK_EDIT", "MANAGE_PUBLIC_EXPORT_CONFIGURATION", "DOCUMENT_TEMPLATE_MANAGEMENT", "LINE_LISTING_CONFIGURE", "DEV_MODE", "EMAIL_TEMPLATE_MANAGEMENT", "EXTERNAL_EMAIL_SEND", "EXTERNAL_EMAIL_ATTACH_DOCUMENTS", "CUSTOMIZABLE_ENUM_MANAGEMENT" ]
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/userReferenceWithNoOfTask" : {
      "post" : {
        "operationId" : "getUsersWithTaskNumbers",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserReferenceWithTaskNumbersDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_22",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/users/{uuid}" : {
      "get" : {
        "operationId" : "getByUuid_14",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Controller" ]
      }
    },
    "/visits-external" : {
      "post" : {
        "description" : "Upload visits with all symptom and disease related data to SORMAS.",
        "operationId" : "postEntityDtos_16",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalVisitDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Save visits",
        "tags" : [ "External Visits Controller" ]
      }
    },
    "/visits-external/followUpEndDates/{since}" : {
      "get" : {
        "description" : "Get latest follow up end date assigned to the specified person. Note: Only returns values for persons who have their symptom journal status set to ACCEPTED! Only returns values changed after {since}, which is interpreted as a UNIX timestamp.",
        "operationId" : "getLatestFollowUpEndDates",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonFollowUpEndDto"
                  }
                }
              }
            },
            "description" : "List of personUuids and their latest follow up end dates as UNIX timestamps."
          }
        },
        "summary" : "Get follow up end dates",
        "tags" : [ "External Visits Controller" ]
      }
    },
    "/visits-external/person/{personUuid}" : {
      "get" : {
        "description" : "Get some personal data for a specific person",
        "operationId" : "getPersonByUuid",
        "parameters" : [ {
          "in" : "path",
          "name" : "personUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JournalPersonDto"
                }
              }
            },
            "description" : "A selection of personal data, including first and last name, e-mail, phone number and birth date if available for that person. Regarding the e-mail and phone number: in SORMAS it is possible to store several e-mail addresses and phone numbers for a person. It is tried to provide one e-mail address and/or phone number via the external visits API in any feasible way.<br>if there is just one e-mail and/or phone number for a person, this is transmitted.<br>If there are several e-mail addresses and or phone numbers, SORMAS will transmit the ones marked as primary.<br>If there are several e-mail addresses or phone numbers without any marked as primary, SORMAS will request the user to mark one before registration.<br>Regarding the latestFollowUpEndDate: this is the latest follow up end date of any contact (or case, if the case follow up feature is enabled) related to the person. The contacts (and cases) considered are not filtered by disease.<br>Note that Null value fields may not be returned. If you get an unexpected result, it might help to verify if the personUuid is existing in your system via the isValid controller.<br>If you get \"pseudonymized\": true, the user the request was authorized with probably lacks the user role REST_EXTERNAL_VISITS_USER."
          }
        },
        "summary" : "Get person information",
        "tags" : [ "External Visits Controller" ]
      }
    },
    "/visits-external/person/{personUuid}/isValid" : {
      "get" : {
        "description" : "Check if a the Uuid given as parameter exists in SORMAS.",
        "operationId" : "isValidPersonUuid",
        "parameters" : [ {
          "in" : "path",
          "name" : "personUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "boolean",
                  "example" : true
                }
              }
            },
            "description" : "true a person with the given Uuid exists in SORMAS, false otherwise."
          }
        },
        "summary" : "Check person validity",
        "tags" : [ "External Visits Controller" ]
      }
    },
    "/visits-external/person/{personUuid}/status" : {
      "post" : {
        "operationId" : "postSymptomJournalStatus",
        "parameters" : [ {
          "in" : "path",
          "name" : "personUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonSymptomJournalStatusDto"
              }
            }
          },
          "description" : "status may be one of the following:<br/>UNREGISTERED: User has not yet sent any state<br/>REGISTERED: After successful registration in SymptomJournal<br/>ACCEPTED: User has accepted a confirmation<br/>REJECTED: User has rejected (declined) a confirmation<br/>DELETED: User was deleted"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "boolean",
                  "example" : true
                }
              }
            },
            "description" : "true if the status was set successfully, false otherwise."
          }
        },
        "summary" : "Save symptom journal status",
        "tags" : [ "External Visits Controller" ]
      }
    },
    "/visits-external/version" : {
      "get" : {
        "operationId" : "getVersion",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "string",
                  "example" : "1.37.0"
                }
              }
            },
            "description" : "The minimal version needed for compatibility with the external ReST API of SORMAS."
          }
        },
        "summary" : "Get API version",
        "tags" : [ "External Visits Controller" ]
      }
    },
    "/visits/all/{since}" : {
      "get" : {
        "operationId" : "getAllVisits_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VisitDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Visit Controller" ]
      }
    },
    "/visits/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllVisits_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VisitDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Visit Controller" ]
      }
    },
    "/visits/indexList" : {
      "post" : {
        "operationId" : "getIndexList_29",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageVisitIndexDto"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Visit Controller" ]
      }
    },
    "/visits/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_31",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VisitDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Visit Controller" ]
      }
    },
    "/visits/query" : {
      "post" : {
        "operationId" : "getByUuids_33",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VisitDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Visit Controller" ]
      }
    },
    "/visits/uuids" : {
      "get" : {
        "operationId" : "getAllActiveUuids_10",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Visit Controller" ]
      }
    },
    "/weeklyreports/all/{since}" : {
      "get" : {
        "operationId" : "getAllWeeklyReports",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WeeklyReportDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Weekly Report Controller" ]
      }
    },
    "/weeklyreports/all/{since}/{size}/{lastSynchronizedUuid}" : {
      "get" : {
        "operationId" : "getAllWeeklyReports_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "since",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "path",
          "name" : "size",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "path",
          "name" : "lastSynchronizedUuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WeeklyReportDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Weekly Report Controller" ]
      }
    },
    "/weeklyreports/push" : {
      "post" : {
        "description" : "A uuid will be generated for any entity that doesn't have one yet. Posting entities without uuid multiple times will also create them multiple times.",
        "operationId" : "postEntityDtos_32",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/WeeklyReportDto"
                }
              }
            }
          }
        },
        "responses" : {
          "207" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "Array of responses, matching the posted array of entities. Provides an HTML status code for every entity and an optional body (e.g. a string with an error message)."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostResponse"
                  }
                }
              }
            },
            "description" : "When the request body has one or no entry. The status code of the response entry matches the response code and may have an optional body (e.g. a string with an error message)."
          }
        },
        "summary" : "Create or update one or multiple entities.",
        "tags" : [ "Weekly Report Controller" ]
      }
    },
    "/weeklyreports/query" : {
      "post" : {
        "operationId" : "getByUuids_34",
        "requestBody" : {
          "content" : {
            "application/json; charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WeeklyReportDto"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Weekly Report Controller" ]
      }
    },
    "/weeklyreports/uuids" : {
      "get" : {
        "operationId" : "getAllUuids_24",
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Weekly Report Controller" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActionCriteria" : {
        "type" : "object",
        "properties" : {
          "actionStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE" ]
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          }
        }
      },
      "ActionDto" : {
        "type" : "object",
        "properties" : {
          "actionContext" : {
            "type" : "string",
            "enum" : [ "EVENT" ]
          },
          "actionMeasure" : {
            "type" : "string",
            "enum" : [ "PROHIBITION_OF_ENTRY_AND_WORK_CASES", "SAMPLE_COLLECTION", "FORWARDING_TO_NATIONAL_REFERENCE_CENTER", "CONTACT_FOLLOW_UP", "VERIFICATION_OF_VACCINATION_IMMUNIZATION", "POST_EXPOSURE_PROPHYLAXIS_VACCINATION", "CLOSURE_OF_FACILITY", "PROHIBITION_OF_ENTRY_AND_WORK_CONTACTS", "POPULATION_INFORMATION", "OTHER" ]
          },
          "actionStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contextReference" : {
            "$ref" : "#/components/schemas/ReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creatorUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "priority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "reply" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "statusChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "actionContext", "date" ]
      },
      "ActivityAsCaseDto" : {
        "type" : "object",
        "properties" : {
          "activityAsCaseType" : {
            "type" : "string",
            "enum" : [ "WORK", "TRAVEL", "SPORT", "VISIT", "GATHERING", "HABITATION", "PERSONAL_SERVICES", "CARED_FOR", "OTHER", "UNKNOWN" ]
          },
          "activityAsCaseTypeDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "connectionNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gatheringDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "gatheringType" : {
            "type" : "string",
            "enum" : [ "PARTY", "RELIGIOUS", "MUSICAL", "CONCERT", "DEMONSTRATION", "CARNIVAL", "FAIR", "SPORTING_EVENT", "OTHER" ]
          },
          "habitationDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "habitationType" : {
            "type" : "string",
            "enum" : [ "MEDICAL", "OTHER" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "meansOfTransport" : {
            "type" : "string",
            "enum" : [ "LOCAL_PUBLIC_TRANSPORT", "BUS", "FERRY", "PLANE", "TRAIN", "OTHER" ]
          },
          "meansOfTransportDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "PASSENGER", "STAFF", "NURSING_STAFF", "MEDICAL_STAFF", "VISITOR", "GUEST", "CUSTOMER", "CONSERVATEE", "PATIENT", "EDUCATOR", "TRAINEE_TEACHER", "PUPIL", "STUDENT", "PARENT", "TEACHER", "UNKNOWN", "OTHER" ]
          },
          "seatNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "typeOfPlace" : {
            "type" : "string",
            "enum" : [ "FACILITY", "FACILITY_23_IFSG", "COMMUNITY_FACILITY", "FACILITY_36_IFSG", "FESTIVITIES", "HOME", "MEANS_OF_TRANSPORT", "PUBLIC_PLACE", "SCATTERED", "UNKNOWN", "OTHER" ]
          },
          "typeOfPlaceDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "workEnvironment" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "OPEN_SPACE_OFFICE", "FOOD_SECTOR", "BUILDING_SECTOR", "LOGISTICS_CENTER", "OTHER" ]
          }
        },
        "required" : [ "activityAsCaseType" ]
      },
      "AdditionalTestCriteria" : {
        "type" : "object",
        "properties" : {
          "sample" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          }
        }
      },
      "AdditionalTestDto" : {
        "type" : "object",
        "properties" : {
          "altSgpt" : {
            "type" : "number",
            "format" : "float"
          },
          "arterialVenousGasHco3" : {
            "type" : "number",
            "format" : "float"
          },
          "arterialVenousGasPH" : {
            "type" : "number",
            "format" : "float"
          },
          "arterialVenousGasPao2" : {
            "type" : "number",
            "format" : "float"
          },
          "arterialVenousGasPco2" : {
            "type" : "number",
            "format" : "float"
          },
          "astSgot" : {
            "type" : "number",
            "format" : "float"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "conjBilirubin" : {
            "type" : "number",
            "format" : "float"
          },
          "creatinine" : {
            "type" : "number",
            "format" : "float"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gasOxygenTherapy" : {
            "type" : "number",
            "format" : "float"
          },
          "haemoglobin" : {
            "type" : "number",
            "format" : "float"
          },
          "haemoglobinuria" : {
            "type" : "string",
            "enum" : [ "POSITIVE", "NEGATIVE", "INDETERMINATE" ]
          },
          "hematuria" : {
            "type" : "string",
            "enum" : [ "POSITIVE", "NEGATIVE", "INDETERMINATE" ]
          },
          "otherTestResults" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "platelets" : {
            "type" : "number",
            "format" : "float"
          },
          "potassium" : {
            "type" : "number",
            "format" : "float"
          },
          "proteinuria" : {
            "type" : "string",
            "enum" : [ "POSITIVE", "NEGATIVE", "INDETERMINATE" ]
          },
          "prothrombinTime" : {
            "type" : "number",
            "format" : "float"
          },
          "sample" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          },
          "testDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalBilirubin" : {
            "type" : "number",
            "format" : "float"
          },
          "urea" : {
            "type" : "number",
            "format" : "float"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "wbcCount" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "AgeAndBirthDateDto" : {
        "type" : "object",
        "properties" : {
          "age" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ageType" : {
            "type" : "string",
            "enum" : [ "YEARS", "MONTHS", "DAYS" ]
          },
          "dateOfBirthDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateOfBirthMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateOfBirthYYYY" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AggregateCaseCountDto" : {
        "type" : "object",
        "properties" : {
          "ageGroup" : {
            "type" : "string"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deaths" : {
            "type" : "integer",
            "format" : "int64"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "districtId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "districtName" : {
            "type" : "string"
          },
          "epiWeek" : {
            "type" : "integer",
            "format" : "int32"
          },
          "healthFacilityId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "healthFacilityName" : {
            "type" : "string"
          },
          "jurisdictionlevel" : {
            "type" : "string",
            "enum" : [ "NONE", "NATION", "REGION", "DISTRICT", "COMMUNITY", "POINT_OF_ENTRY", "HEALTH_FACILITY", "LABORATORY", "EXTERNAL_LABORATORY" ]
          },
          "labConfirmations" : {
            "type" : "integer",
            "format" : "int64"
          },
          "newCases" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pointOfEntryId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pointOfEntryName" : {
            "type" : "string"
          },
          "regionId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "regionName" : {
            "type" : "string"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AggregateReportCriteria" : {
        "type" : "object",
        "properties" : {
          "aggregateReportGroupingLevel" : {
            "type" : "string",
            "enum" : [ "REGION", "DISTRICT", "HEALTH_FACILITY", "POINT_OF_ENTRY" ]
          },
          "considerNullJurisdictionCheck" : {
            "type" : "boolean"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "epiWeekFrom" : {
            "$ref" : "#/components/schemas/EpiWeek"
          },
          "epiWeekTo" : {
            "$ref" : "#/components/schemas/EpiWeek"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "showOnlyDuplicates" : {
            "type" : "boolean"
          },
          "showZeroRows" : {
            "type" : "boolean"
          }
        }
      },
      "AggregateReportDto" : {
        "type" : "object",
        "properties" : {
          "ageGroup" : {
            "type" : "string"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deaths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "duplicate" : {
            "type" : "boolean"
          },
          "epiWeek" : {
            "type" : "integer",
            "format" : "int32"
          },
          "expiredAgeGroup" : {
            "type" : "boolean"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "labConfirmations" : {
            "type" : "integer",
            "format" : "int32"
          },
          "newCases" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AreaDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "name" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "AreaReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "CampaignDashboardElement" : {
        "type" : "object",
        "properties" : {
          "diagramId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "subTabId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "tabId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CampaignDto" : {
        "type" : "object",
        "properties" : {
          "campaignDashboardElements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignDashboardElement"
            }
          },
          "campaignFormMetas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFormMetaReferenceDto"
            },
            "uniqueItems" : true
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creatingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "description" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CampaignFormDataDto" : {
        "type" : "object",
        "properties" : {
          "campaign" : {
            "$ref" : "#/components/schemas/CampaignReferenceDto"
          },
          "campaignFormMeta" : {
            "$ref" : "#/components/schemas/CampaignFormMetaReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creatingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "formDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "formValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFormDataEntry"
            }
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CampaignFormDataEntry" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "CampaignFormElement" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "dependingOn" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "dependingOnValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "expression" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "id" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "important" : {
            "type" : "boolean"
          },
          "styles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          }
        }
      },
      "CampaignFormMetaDto" : {
        "type" : "object",
        "properties" : {
          "campaignFormElements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFormElement"
            }
          },
          "campaignFormTranslations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFormTranslations"
            }
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "formId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "formName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "languageCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CampaignFormMetaReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "CampaignFormTranslations" : {
        "type" : "object",
        "properties" : {
          "languageCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "translations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TranslationElement"
            }
          }
        }
      },
      "CampaignReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "CaseCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseLike" : {
            "type" : "string"
          },
          "caseOrigin" : {
            "type" : "string",
            "enum" : [ "IN_COUNTRY", "POINT_OF_ENTRY" ]
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "caseUuidsForMerge" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creationDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "eventLike" : {
            "type" : "string"
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "facilityTypeGroup" : {
            "type" : "string",
            "enum" : [ "ACCOMMODATION", "CARE_FACILITY", "CATERING_OUTLET", "EDUCATIONAL_FACILITY", "LEISURE_FACILITY", "MEDICAL_FACILITY", "WORKING_PLACE", "RESIDENCE", "COMMERCE" ]
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntilFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpUntilTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpVisitsFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpVisitsInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpVisitsTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "includeCasesFromOtherJurisdictions" : {
            "type" : "boolean"
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "jurisdictionType" : {
            "type" : "string",
            "enum" : [ "ALL", "RESPONSIBLE", "PLACE_OF_STAY" ]
          },
          "mustBePortHealthCaseWithoutFacility" : {
            "type" : "boolean"
          },
          "mustHaveCaseManagementData" : {
            "type" : "boolean"
          },
          "mustHaveNoGeoCoordinates" : {
            "type" : "boolean"
          },
          "newCaseDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "newCaseDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "newCaseDateType" : {
            "$ref" : "#/components/schemas/CriteriaDateType"
          },
          "onlyCasesWithDontShareWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyCasesWithEvents" : {
            "type" : "boolean"
          },
          "onlyCasesWithReinfection" : {
            "type" : "boolean"
          },
          "onlyContactsFromOtherInstances" : {
            "type" : "boolean"
          },
          "onlyEntitiesChangedSinceLastSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyEntitiesNotSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyEntitiesSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyQuarantineHelpNeeded" : {
            "type" : "boolean"
          },
          "onlyShowCasesWithFulfilledReferenceDefinition" : {
            "type" : "boolean"
          },
          "outcome" : {
            "type" : "string",
            "enum" : [ "NO_OUTCOME", "DECEASED", "RECOVERED", "UNKNOWN" ]
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "personLike" : {
            "type" : "string"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineType" : {
            "type" : "string",
            "enum" : [ "HOME", "INSTITUTIONELL", "HOSPITAL", "HOTEL", "ASYLUM_ACCOMMODATION", "NONE", "UNKNOWN", "OTHER" ]
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reinfectionStatus" : {
            "type" : "string",
            "enum" : [ "CONFIRMED", "PROBABLE", "POSSIBLE" ]
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "reportDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUserLike" : {
            "type" : "string"
          },
          "reportingUserRole" : {
            "$ref" : "#/components/schemas/UserRoleReferenceDto"
          },
          "sourceCaseInfoLike" : {
            "type" : "string"
          },
          "surveillanceOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "withExtendedQuarantine" : {
            "type" : "boolean"
          },
          "withOwnership" : {
            "type" : "boolean"
          },
          "withReducedQuarantine" : {
            "type" : "boolean"
          },
          "withoutResponsibleOfficer" : {
            "type" : "boolean"
          }
        }
      },
      "CaseDataDto" : {
        "type" : "object",
        "properties" : {
          "additionalDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "bloodOrganOrTissueDonated" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseIdIsm" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseIdentificationSource" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "OUTBREAK_INVESTIGATION", "CONTACT_TRACKING_APP", "SUSPICION_REPORT", "CONTACT_TRACING", "SCREENING", "OTHER" ]
          },
          "caseOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "caseOrigin" : {
            "type" : "string",
            "enum" : [ "IN_COUNTRY", "POINT_OF_ENTRY" ]
          },
          "caseReferenceDefinition" : {
            "type" : "string",
            "enum" : [ "FULFILLED", "NOT_FULFILLED" ]
          },
          "caseReferenceNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "classificationComment" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "classificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "classificationUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "clinicalConfirmation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "clinicalCourse" : {
            "$ref" : "#/components/schemas/ClinicalCourseDto"
          },
          "clinicianEmail" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "clinicianName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "clinicianPhone" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contactTracingFirstContactDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contactTracingFirstContactType" : {
            "type" : "string",
            "enum" : [ "TELEPHONE", "SMS", "EMAIL" ]
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationVersion" : {
            "type" : "string",
            "maxLength" : 32,
            "minLength" : 0
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "dengueFeverType" : {
            "type" : "string",
            "enum" : [ "DENGUE_FEVER", "DENGUE_HEMORRHAGIC_FEVER", "DENUGE_SHOCK_SYNDROME" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "diseaseVariantDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "districtLevelDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dontShareWithReportingTool" : {
            "type" : "boolean"
          },
          "endOfIsolationReason" : {
            "type" : "string",
            "enum" : [ "RECOVERED", "DIED", "LOST_TO_FOLLOW_UP", "OTHER" ]
          },
          "endOfIsolationReasonDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "epiData" : {
            "$ref" : "#/components/schemas/EpiDataDto"
          },
          "epidNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "epidemiologicalConfirmation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "externalData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalToken" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "followUpComment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpStatusChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpStatusChangeUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthConditions" : {
            "$ref" : "#/components/schemas/HealthConditionsDto"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "healthFacilityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "hospitalization" : {
            "$ref" : "#/components/schemas/HospitalizationDto"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "infectionSetting" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "AMBULATORY", "MEDICAL_PRACTICE", "OPERATIVE_1200", "HOSPITAL_1300", "OTHER_OUTPATIENT_FACILITY", "STATIONARY", "HOSPITAL_2100", "NORMAL_WARD", "OPERATIVE_2111", "NOT_OPERATIVE", "HEMATOLOGICAL_ONCOLOGY", "CHILDREN_WARD", "NEONATOLOGY", "INTENSIVE_CARE_UNIT", "OTHER_STATION", "NURSING_HOME", "REHAB_FACILITY", "OTHER_STATIONARY_FACILITY" ]
          },
          "internalToken" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "investigatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "laboratoryDiagnosticConfirmation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "maternalHistory" : {
            "$ref" : "#/components/schemas/MaternalHistoryDto"
          },
          "nationalLevelDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nosocomialOutbreak" : {
            "type" : "boolean"
          },
          "notACaseReasonDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "notACaseReasonDifferentPathogen" : {
            "type" : "boolean"
          },
          "notACaseReasonNegativeTest" : {
            "type" : "boolean"
          },
          "notACaseReasonOther" : {
            "type" : "boolean"
          },
          "notACaseReasonPhysicianInformation" : {
            "type" : "boolean"
          },
          "notifyingClinic" : {
            "type" : "string",
            "enum" : [ "PEDIATRIC_INPATIENT", "NURSERY", "EPU", "CHER", "OPD", "EYE", "ENT", "CARDIOLOGY", "OTHER" ]
          },
          "notifyingClinicDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "outcome" : {
            "type" : "string",
            "enum" : [ "NO_OUTCOME", "DECEASED", "RECOVERED", "UNKNOWN" ]
          },
          "outcomeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "overwriteFollowUpUntil" : {
            "type" : "boolean"
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "plagueType" : {
            "type" : "string",
            "enum" : [ "BUBONIC", "PNEUMONIC", "SEPTICAEMIC" ]
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "pointOfEntryDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "portHealthInfo" : {
            "$ref" : "#/components/schemas/PortHealthInfoDto"
          },
          "postpartum" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pregnant" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "previousInfectionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "previousQuarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prohibitionToWork" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "prohibitionToWorkFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prohibitionToWorkUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "quarantine" : {
            "type" : "string",
            "enum" : [ "HOME", "INSTITUTIONELL", "HOSPITAL", "HOTEL", "ASYLUM_ACCOMMODATION", "NONE", "UNKNOWN", "OTHER" ]
          },
          "quarantineChangeComment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "quarantineExtended" : {
            "type" : "boolean"
          },
          "quarantineFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineHelpNeeded" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineHomePossible" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "quarantineHomePossibleComment" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineHomeSupplyEnsured" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "quarantineHomeSupplyEnsuredComment" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineOfficialOrderSent" : {
            "type" : "boolean"
          },
          "quarantineOfficialOrderSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineOrderedOfficialDocument" : {
            "type" : "boolean"
          },
          "quarantineOrderedOfficialDocumentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineOrderedVerbally" : {
            "type" : "boolean"
          },
          "quarantineOrderedVerballyDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineReasonBeforeIsolation" : {
            "type" : "string",
            "enum" : [ "IDENTIFIED_BY_CONTACT_TRACING", "ENTRY_FROM_RISK_AREA", "SWISS_COVID_APP_NOTIFICATION", "OUTBREAK_INVESTIGATION", "OTHER_REASON" ]
          },
          "quarantineReasonBeforeIsolationDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineReduced" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineTypeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "rabiesType" : {
            "type" : "string",
            "enum" : [ "FURIOUS_RABIES", "PARALYTIC_RABIES" ]
          },
          "reInfection" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "regionLevelDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reinfectionDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          },
          "reinfectionStatus" : {
            "type" : "string",
            "enum" : [ "CONFIRMED", "PROBABLE", "POSSIBLE" ]
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "reportLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleCommunity" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "responsibleDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "responsibleRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "screeningType" : {
            "type" : "string",
            "enum" : [ "ON_HOSPITAL_ADMISSION", "ON_CARE_HOME_ADMISSION", "ON_ASYLUM_ADMISSION", "ON_ENTRY_FROM_RISK_AREA", "HEALTH_SECTOR_EMPLOYEE", "EDUCATIONAL_INSTITUTIONS", "SELF_ARRANGED_TEST", "SELF_CONDUCTED_TEST", "OTHER" ]
          },
          "sequelae" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "sequelaeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "sharedToCountry" : {
            "type" : "boolean"
          },
          "smallpoxLastVaccinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "smallpoxVaccinationReceived" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "smallpoxVaccinationScar" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "surveillanceOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "symptoms" : {
            "$ref" : "#/components/schemas/SymptomsDto"
          },
          "therapy" : {
            "$ref" : "#/components/schemas/TherapyDto"
          },
          "trimester" : {
            "type" : "string",
            "enum" : [ "FIRST", "SECOND", "THIRD", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "wasInQuarantineBeforeIsolation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          }
        },
        "required" : [ "disease", "person", "reportDate", "responsibleDistrict", "responsibleRegion" ]
      },
      "CaseFollowUpCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseLike" : {
            "type" : "string"
          },
          "caseOrigin" : {
            "type" : "string",
            "enum" : [ "IN_COUNTRY", "POINT_OF_ENTRY" ]
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "caseUuidsForMerge" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creationDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "eventLike" : {
            "type" : "string"
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "facilityTypeGroup" : {
            "type" : "string",
            "enum" : [ "ACCOMMODATION", "CARE_FACILITY", "CATERING_OUTLET", "EDUCATIONAL_FACILITY", "LEISURE_FACILITY", "MEDICAL_FACILITY", "WORKING_PLACE", "RESIDENCE", "COMMERCE" ]
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntilFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpUntilTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpVisitsFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpVisitsInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpVisitsTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "includeCasesFromOtherJurisdictions" : {
            "type" : "boolean"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "jurisdictionType" : {
            "type" : "string",
            "enum" : [ "ALL", "RESPONSIBLE", "PLACE_OF_STAY" ]
          },
          "mustBePortHealthCaseWithoutFacility" : {
            "type" : "boolean"
          },
          "mustHaveCaseManagementData" : {
            "type" : "boolean"
          },
          "mustHaveNoGeoCoordinates" : {
            "type" : "boolean"
          },
          "newCaseDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "newCaseDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "newCaseDateType" : {
            "$ref" : "#/components/schemas/CriteriaDateType"
          },
          "onlyCasesWithDontShareWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyCasesWithEvents" : {
            "type" : "boolean"
          },
          "onlyCasesWithReinfection" : {
            "type" : "boolean"
          },
          "onlyContactsFromOtherInstances" : {
            "type" : "boolean"
          },
          "onlyEntitiesChangedSinceLastSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyEntitiesNotSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyEntitiesSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyQuarantineHelpNeeded" : {
            "type" : "boolean"
          },
          "onlyShowCasesWithFulfilledReferenceDefinition" : {
            "type" : "boolean"
          },
          "outcome" : {
            "type" : "string",
            "enum" : [ "NO_OUTCOME", "DECEASED", "RECOVERED", "UNKNOWN" ]
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "personLike" : {
            "type" : "string"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineType" : {
            "type" : "string",
            "enum" : [ "HOME", "INSTITUTIONELL", "HOSPITAL", "HOTEL", "ASYLUM_ACCOMMODATION", "NONE", "UNKNOWN", "OTHER" ]
          },
          "referenceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reinfectionStatus" : {
            "type" : "string",
            "enum" : [ "CONFIRMED", "PROBABLE", "POSSIBLE" ]
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "reportDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUserLike" : {
            "type" : "string"
          },
          "reportingUserRole" : {
            "$ref" : "#/components/schemas/UserRoleReferenceDto"
          },
          "sourceCaseInfoLike" : {
            "type" : "string"
          },
          "surveillanceOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "withExtendedQuarantine" : {
            "type" : "boolean"
          },
          "withOwnership" : {
            "type" : "boolean"
          },
          "withReducedQuarantine" : {
            "type" : "boolean"
          },
          "withoutResponsibleOfficer" : {
            "type" : "boolean"
          }
        }
      },
      "CaseFollowUpDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "firstName" : {
            "type" : "string"
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lastName" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "symptomsOnsetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "visitResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisitResultDto"
            }
          }
        }
      },
      "CaseIndexDetailedDto" : {
        "type" : "object",
        "properties" : {
          "additionalInformation" : {
            "type" : "string"
          },
          "ageAndBirthDate" : {
            "$ref" : "#/components/schemas/AgeAndBirthDateDto"
          },
          "caption" : {
            "type" : "string"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "completeness" : {
            "type" : "number",
            "format" : "float"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "districtUuid" : {
            "type" : "string"
          },
          "epidNumber" : {
            "type" : "string"
          },
          "eventCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "externalID" : {
            "type" : "string"
          },
          "externalToken" : {
            "type" : "string"
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthFacilityName" : {
            "type" : "string"
          },
          "houseNumber" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string"
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "latestEventId" : {
            "type" : "string"
          },
          "latestEventStatus" : {
            "type" : "string",
            "enum" : [ "SIGNAL", "EVENT", "SCREENING", "CLUSTER", "DROPPED" ]
          },
          "latestEventTitle" : {
            "type" : "string"
          },
          "latestSampleDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "missedVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "outcome" : {
            "type" : "string",
            "enum" : [ "NO_OUTCOME", "DECEASED", "RECOVERED", "UNKNOWN" ]
          },
          "personFirstName" : {
            "type" : "string"
          },
          "personLastName" : {
            "type" : "string"
          },
          "personUuid" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "pointOfEntryName" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reInfection" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "regionUuid" : {
            "type" : "string"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleCommunity" : {
            "type" : "string"
          },
          "responsibleDistrictName" : {
            "type" : "string"
          },
          "responsibleDistrictUuid" : {
            "type" : "string"
          },
          "responsibleRegion" : {
            "type" : "string"
          },
          "responsibleRegionUuid" : {
            "type" : "string"
          },
          "sampleCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "street" : {
            "type" : "string"
          },
          "surveillanceOfficerUuid" : {
            "type" : "string"
          },
          "surveillanceToolLastShareDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "surveillanceToolShareCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "surveillanceToolStatus" : {
            "type" : "string",
            "enum" : [ "SHARED", "DELETED" ]
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "symptomOnsetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "visitCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CaseIndexDto" : {
        "type" : "object",
        "properties" : {
          "ageAndBirthDate" : {
            "$ref" : "#/components/schemas/AgeAndBirthDateDto"
          },
          "caption" : {
            "type" : "string"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "completeness" : {
            "type" : "number",
            "format" : "float"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "districtUuid" : {
            "type" : "string"
          },
          "epidNumber" : {
            "type" : "string"
          },
          "externalID" : {
            "type" : "string"
          },
          "externalToken" : {
            "type" : "string"
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthFacilityName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string"
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "missedVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "outcome" : {
            "type" : "string",
            "enum" : [ "NO_OUTCOME", "DECEASED", "RECOVERED", "UNKNOWN" ]
          },
          "personFirstName" : {
            "type" : "string"
          },
          "personLastName" : {
            "type" : "string"
          },
          "personUuid" : {
            "type" : "string"
          },
          "pointOfEntryName" : {
            "type" : "string"
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "regionUuid" : {
            "type" : "string"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "responsibleDistrictName" : {
            "type" : "string"
          },
          "responsibleDistrictUuid" : {
            "type" : "string"
          },
          "responsibleRegionUuid" : {
            "type" : "string"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "surveillanceOfficerUuid" : {
            "type" : "string"
          },
          "surveillanceToolLastShareDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "surveillanceToolShareCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "surveillanceToolStatus" : {
            "type" : "string",
            "enum" : [ "SHARED", "DELETED" ]
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "visitCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CasePersonDto" : {
        "type" : "object",
        "properties" : {
          "caze" : {
            "$ref" : "#/components/schemas/CaseDataDto"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonDto"
          }
        }
      },
      "CaseReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ClassificationAllOfCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "criteriaName" : {
              "type" : "string"
            },
            "drawSubCriteriaTogether" : {
              "type" : "boolean"
            },
            "subCriteria" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClassificationCriteriaDto"
              }
            }
          }
        } ]
      },
      "ClassificationAllSymptomsCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        } ]
      },
      "ClassificationCaseCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "propertyId" : {
              "type" : "string"
            },
            "propertyValues" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        } ]
      },
      "ClassificationCriteriaDto" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "ClassificationEpiDataCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCaseCriteriaDto"
        } ]
      },
      "ClassificationEventClusterCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        } ]
      },
      "ClassificationExposureCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCaseCriteriaDto"
        } ]
      },
      "ClassificationNoneOfCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "classificationCriteria" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClassificationCriteriaDto"
              }
            },
            "criteriaName" : {
              "type" : "string"
            },
            "subCriteria" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClassificationCriteriaDto"
              }
            }
          }
        } ]
      },
      "ClassificationPathogenTestCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCaseCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "testTypes" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
              }
            }
          }
        } ]
      },
      "ClassificationPathogenTestNegativeResultCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        } ]
      },
      "ClassificationPathogenTestOtherPositiveResultCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        } ]
      },
      "ClassificationPathogenTestPositiveResultCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "pathogenTestTypes" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
              }
            },
            "sampleTestTypes" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
              },
              "writeOnly" : true
            }
          }
        } ]
      },
      "ClassificationPersonAgeBetweenYearsCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "lowerThreshold" : {
              "type" : "integer",
              "format" : "int32"
            },
            "upperThreshold" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "ClassificationSymptomsCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCaseCriteriaDto"
        } ]
      },
      "ClassificationVaccinationDateNotInStartDateRangeDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCaseCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "daysBeforeStartDate" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "ClassificationXOfCriteriaDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ClassificationCriteriaDto"
        }, {
          "type" : "object",
          "properties" : {
            "classificationCriteria" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClassificationCriteriaDto"
              }
            },
            "criteriaName" : {
              "type" : "string"
            },
            "requiredAmount" : {
              "type" : "integer",
              "format" : "int32"
            },
            "subCriteria" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClassificationCriteriaDto"
              }
            }
          }
        } ]
      },
      "ClinicalCourseDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ClinicalCourseReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ClinicalVisitCriteria" : {
        "type" : "object",
        "properties" : {
          "clinicalCourse" : {
            "$ref" : "#/components/schemas/ClinicalCourseReferenceDto"
          }
        }
      },
      "ClinicalVisitDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "clinicalCourse" : {
            "$ref" : "#/components/schemas/ClinicalCourseReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "symptoms" : {
            "$ref" : "#/components/schemas/SymptomsDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "visitDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "visitRemarks" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "visitingPerson" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          }
        }
      },
      "ClinicalVisitIndexDto" : {
        "type" : "object",
        "properties" : {
          "bloodPressure" : {
            "type" : "string"
          },
          "heartRate" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "signsAndSymptomsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "symptomsId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "temperature" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "visitDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "visitRemarks" : {
            "type" : "string"
          },
          "visitingPerson" : {
            "type" : "string"
          }
        }
      },
      "CommunityCriteria" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "nameLike" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          }
        }
      },
      "CommunityDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultInfrastructure" : {
            "type" : "boolean"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "growthRate" : {
            "type" : "number",
            "format" : "float"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CommunityReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ContactCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contactCategory" : {
            "type" : "string",
            "enum" : [ "HIGH_RISK", "HIGH_RISK_MED", "MEDIUM_RISK_MED", "LOW_RISK", "NO_RISK" ]
          },
          "contactClassification" : {
            "type" : "string",
            "enum" : [ "UNCONFIRMED", "CONFIRMED", "NO_CONTACT" ]
          },
          "contactOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "contactOrCaseLike" : {
            "type" : "string"
          },
          "contactStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CONVERTED", "DROPPED" ]
          },
          "contactUuidsForMerge" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "creationDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "eventLike" : {
            "type" : "string"
          },
          "eventParticipant" : {
            "$ref" : "#/components/schemas/EventParticipantReferenceDto"
          },
          "eventUuid" : {
            "type" : "string"
          },
          "excludeLimitedSyncRestrictions" : {
            "type" : "boolean"
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntilFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpUntilTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpUntilToPrecise" : {
            "type" : "boolean"
          },
          "followUpVisitsFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpVisitsInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpVisitsTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "includeContactsFromOtherJurisdictions" : {
            "type" : "boolean"
          },
          "lastContactDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastContactDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "onlyContactsFromOtherInstances" : {
            "type" : "boolean"
          },
          "onlyContactsSharingEventWithSourceCase" : {
            "type" : "boolean"
          },
          "onlyContactsWithSourceCaseInGivenEvent" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "onlyHighPriorityContacts" : {
            "type" : "boolean"
          },
          "onlyQuarantineHelpNeeded" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "personLike" : {
            "type" : "string"
          },
          "quarantineFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineNotOrdered" : {
            "type" : "boolean"
          },
          "quarantineOrderedOfficialDocument" : {
            "type" : "boolean"
          },
          "quarantineOrderedVerbally" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineType" : {
            "type" : "string",
            "enum" : [ "HOME", "INSTITUTIONELL", "HOSPITAL", "HOTEL", "ASYLUM_ACCOMMODATION", "NONE", "UNKNOWN", "OTHER" ]
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relationToCase" : {
            "type" : "string",
            "enum" : [ "SAME_HOUSEHOLD", "FAMILY_MEMBER_OR_FRIEND", "SAME_ENVIRONMENT", "MEDICAL_CARE", "OTHER" ]
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "reportDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUserLike" : {
            "type" : "string"
          },
          "reportingUserRole" : {
            "$ref" : "#/components/schemas/UserRoleReferenceDto"
          },
          "resultingCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "returningTraveler" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "withCase" : {
            "type" : "boolean"
          },
          "withExtendedQuarantine" : {
            "type" : "boolean"
          },
          "withOwnership" : {
            "type" : "boolean"
          },
          "withReducedQuarantine" : {
            "type" : "boolean"
          }
        }
      },
      "ContactDto" : {
        "type" : "object",
        "properties" : {
          "additionalDetails" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "careForPeopleOver60" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "caseIdExternalSystem" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "caseOrEventInformation" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "caseReferenceNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contactCategory" : {
            "type" : "string",
            "enum" : [ "HIGH_RISK", "HIGH_RISK_MED", "MEDIUM_RISK_MED", "LOW_RISK", "NO_RISK" ]
          },
          "contactClassification" : {
            "type" : "string",
            "enum" : [ "UNCONFIRMED", "CONFIRMED", "NO_CONTACT" ]
          },
          "contactIdentificationSource" : {
            "type" : "string",
            "enum" : [ "CASE_PERSON", "CONTACT_PERSON", "TRACING_APP", "OTHER", "UNKNOWN" ]
          },
          "contactIdentificationSourceDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "contactOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "contactProximity" : {
            "type" : "string",
            "enum" : [ "TOUCHED_FLUID", "PHYSICAL_CONTACT", "CLOTHES_OR_OTHER", "CLOSE_CONTACT", "FACE_TO_FACE_LONG", "MEDICAL_UNSAFE", "SAME_ROOM", "AIRPLANE", "FACE_TO_FACE_SHORT", "MEDICAL_SAFE", "MEDICAL_SAME_ROOM", "AEROSOL", "MEDICAL_DISTANT", "MEDICAL_LIMITED" ]
          },
          "contactProximityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "contactStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CONVERTED", "DROPPED" ]
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "description" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "endOfQuarantineReason" : {
            "type" : "string",
            "enum" : [ "ASYMPTOMATIC", "ISOLATED_AS_CASE", "LOST_TO_FOLLOWUP", "OTHER" ]
          },
          "endOfQuarantineReasonDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "epiData" : {
            "$ref" : "#/components/schemas/EpiDataDto"
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalToken" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "firstContactDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpComment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpStatusChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "followUpStatusChangeUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthConditions" : {
            "$ref" : "#/components/schemas/HealthConditionsDto"
          },
          "highPriority" : {
            "type" : "boolean"
          },
          "immunosuppressiveTherapyBasicDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "immunosuppressiveTherapyBasicDiseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "lastContactDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "multiDayContact" : {
            "type" : "boolean"
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "overwriteFollowUpUntil" : {
            "type" : "boolean"
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "previousQuarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prohibitionToWork" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "prohibitionToWorkFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prohibitionToWorkUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "quarantine" : {
            "type" : "string",
            "enum" : [ "HOME", "INSTITUTIONELL", "HOSPITAL", "HOTEL", "ASYLUM_ACCOMMODATION", "NONE", "UNKNOWN", "OTHER" ]
          },
          "quarantineChangeComment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "quarantineExtended" : {
            "type" : "boolean"
          },
          "quarantineFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineHelpNeeded" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineHomePossible" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "quarantineHomePossibleComment" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineHomeSupplyEnsured" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "quarantineHomeSupplyEnsuredComment" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "quarantineOfficialOrderSent" : {
            "type" : "boolean"
          },
          "quarantineOfficialOrderSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineOrderedOfficialDocument" : {
            "type" : "boolean"
          },
          "quarantineOrderedOfficialDocumentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineOrderedVerbally" : {
            "type" : "boolean"
          },
          "quarantineOrderedVerballyDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineReduced" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineTypeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relationDescription" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "relationToCase" : {
            "type" : "string",
            "enum" : [ "SAME_HOUSEHOLD", "FAMILY_MEMBER_OR_FRIEND", "SAME_ENVIRONMENT", "MEDICAL_CARE", "OTHER" ]
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "reportLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "reportingDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "resultingCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "resultingCaseUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "returningTraveler" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "tracingApp" : {
            "type" : "string",
            "enum" : [ "CORONA_WARN_APP", "OTHER", "UNKNOWN" ]
          },
          "tracingAppDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          }
        },
        "required" : [ "disease", "person", "reportDateTime" ]
      },
      "ContactIndexDetailedDto" : {
        "type" : "object",
        "properties" : {
          "additionalInformation" : {
            "type" : "string"
          },
          "approximateAge" : {
            "type" : "string"
          },
          "caption" : {
            "type" : "string"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseDistrictName" : {
            "type" : "string"
          },
          "caseInJurisdiction" : {
            "type" : "boolean"
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "caseRegionName" : {
            "type" : "string"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "city" : {
            "type" : "string"
          },
          "completeness" : {
            "type" : "number",
            "format" : "float"
          },
          "contactCategory" : {
            "type" : "string",
            "enum" : [ "HIGH_RISK", "HIGH_RISK_MED", "MEDIUM_RISK_MED", "LOW_RISK", "NO_RISK" ]
          },
          "contactClassification" : {
            "type" : "string",
            "enum" : [ "UNCONFIRMED", "CONFIRMED", "NO_CONTACT" ]
          },
          "contactOfficerUuid" : {
            "type" : "string"
          },
          "contactProximity" : {
            "type" : "string",
            "enum" : [ "TOUCHED_FLUID", "PHYSICAL_CONTACT", "CLOTHES_OR_OTHER", "CLOSE_CONTACT", "FACE_TO_FACE_LONG", "MEDICAL_UNSAFE", "SAME_ROOM", "AIRPLANE", "FACE_TO_FACE_SHORT", "MEDICAL_SAFE", "MEDICAL_SAME_ROOM", "AEROSOL", "MEDICAL_DISTANT", "MEDICAL_LIMITED" ]
          },
          "contactStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CONVERTED", "DROPPED" ]
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "districtName" : {
            "type" : "string"
          },
          "districtUuid" : {
            "type" : "string"
          },
          "eventCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "externalID" : {
            "type" : "string"
          },
          "externalToken" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "houseNumber" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string"
          },
          "lastContactDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "type" : "string"
          },
          "latestEventId" : {
            "type" : "string"
          },
          "latestEventTitle" : {
            "type" : "string"
          },
          "missedVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "personUuid" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "regionName" : {
            "type" : "string"
          },
          "relationToCase" : {
            "type" : "string",
            "enum" : [ "SAME_HOUSEHOLD", "FAMILY_MEMBER_OR_FRIEND", "SAME_ENVIRONMENT", "MEDICAL_CARE", "OTHER" ]
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "street" : {
            "type" : "string"
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "visitCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ContactIndexDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseDistrictName" : {
            "type" : "string"
          },
          "caseInJurisdiction" : {
            "type" : "boolean"
          },
          "caseReferenceNumber" : {
            "type" : "string"
          },
          "caseRegionName" : {
            "type" : "string"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "completeness" : {
            "type" : "number",
            "format" : "float"
          },
          "contactCategory" : {
            "type" : "string",
            "enum" : [ "HIGH_RISK", "HIGH_RISK_MED", "MEDIUM_RISK_MED", "LOW_RISK", "NO_RISK" ]
          },
          "contactClassification" : {
            "type" : "string",
            "enum" : [ "UNCONFIRMED", "CONFIRMED", "NO_CONTACT" ]
          },
          "contactOfficerUuid" : {
            "type" : "string"
          },
          "contactProximity" : {
            "type" : "string",
            "enum" : [ "TOUCHED_FLUID", "PHYSICAL_CONTACT", "CLOTHES_OR_OTHER", "CLOSE_CONTACT", "FACE_TO_FACE_LONG", "MEDICAL_UNSAFE", "SAME_ROOM", "AIRPLANE", "FACE_TO_FACE_SHORT", "MEDICAL_SAFE", "MEDICAL_SAME_ROOM", "AEROSOL", "MEDICAL_DISTANT", "MEDICAL_LIMITED" ]
          },
          "contactStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CONVERTED", "DROPPED" ]
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "districtName" : {
            "type" : "string"
          },
          "districtUuid" : {
            "type" : "string"
          },
          "externalID" : {
            "type" : "string"
          },
          "externalToken" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "followUpUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string"
          },
          "lastContactDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "type" : "string"
          },
          "missedVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "personUuid" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "regionName" : {
            "type" : "string"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          },
          "visitCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ContactReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "contactName" : {
            "$ref" : "#/components/schemas/PersonName"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ContinentCriteria" : {
        "type" : "object",
        "properties" : {
          "nameLike" : {
            "type" : "string"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          }
        }
      },
      "ContinentDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ContinentIndexDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "displayName" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ContinentReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "CoreAndPersonDtoCaseDataDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "coreData" : {
            "$ref" : "#/components/schemas/CaseDataDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonDto"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CoreAndPersonDtoContactDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "coreData" : {
            "$ref" : "#/components/schemas/ContactDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonDto"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CountryCriteria" : {
        "type" : "object",
        "properties" : {
          "nameCodeLike" : {
            "type" : "string"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "subcontinent" : {
            "$ref" : "#/components/schemas/SubcontinentReferenceDto"
          }
        }
      },
      "CountryDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "isoCode" : {
            "type" : "string",
            "maxLength" : 3,
            "minLength" : 2
          },
          "subcontinent" : {
            "$ref" : "#/components/schemas/SubcontinentReferenceDto"
          },
          "unoCode" : {
            "type" : "string",
            "maxLength" : 3,
            "minLength" : 1
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CountryIndexDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultName" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "isoCode" : {
            "type" : "string"
          },
          "subcontinent" : {
            "$ref" : "#/components/schemas/SubcontinentReferenceDto"
          },
          "unoCode" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "CountryReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "isoCode" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "CriteriaDateType" : {
        "type" : "object"
      },
      "CriteriaWithSortingActionCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ActionCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ActionCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingAdditionalTestCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/AdditionalTestCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/AdditionalTestCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingCaseCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/CaseCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/CaseCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingCaseFollowUpCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/CaseFollowUpCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/CaseFollowUpCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingClinicalVisitCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ClinicalVisitCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ClinicalVisitCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingCommunityCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/CommunityCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/CommunityCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingContactCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ContactCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ContactCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingContinentCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ContinentCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ContinentCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingCountryCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/CountryCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/CountryCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingDistrictCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/DistrictCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/DistrictCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingDocumentCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/DocumentCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/DocumentCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingEventCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/EventCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/EventCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingEventGroupCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/EventGroupCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/EventGroupCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingEventParticipantCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/EventParticipantCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/EventParticipantCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingExternalMessageCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ExternalMessageCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ExternalMessageCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingFacilityCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/FacilityCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/FacilityCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingFeatureConfigurationCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/FeatureConfigurationCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/FeatureConfigurationCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingImmunizationCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ImmunizationCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ImmunizationCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingOutbreakCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/OutbreakCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/OutbreakCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingPathogenTestCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/PathogenTestCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/PathogenTestCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingPersonCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/PersonCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/PersonCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingPointOfEntryCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/PointOfEntryCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/PointOfEntryCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingPrescriptionCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/PrescriptionCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/PrescriptionCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingRegionCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/RegionCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/RegionCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingSampleCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/SampleCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/SampleCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingShareRequestCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/ShareRequestCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/ShareRequestCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingSubcontinentCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/SubcontinentCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/SubcontinentCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingTaskCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/TaskCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/TaskCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingTravelEntryCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/TravelEntryCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/TravelEntryCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingTreatmentCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/TreatmentCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/TreatmentCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingUserCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/UserCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/UserCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CriteriaWithSortingVisitCriteria" : {
        "type" : "object",
        "properties" : {
          "caseCriteria" : {
            "$ref" : "#/components/schemas/VisitCriteria"
          },
          "criteria" : {
            "$ref" : "#/components/schemas/VisitCriteria"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            }
          }
        }
      },
      "CustomizableEnum" : {
        "type" : "object",
        "properties" : {
          "allProperties" : {
            "type" : "object"
          },
          "caption" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "writeOnly" : true
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "CustomizableEnumTranslation" : {
        "type" : "object",
        "properties" : {
          "languageCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "value" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          }
        }
      },
      "CustomizableEnumValueDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "caption" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dataType" : {
            "type" : "string",
            "enum" : [ "DISEASE_VARIANT", "SPECIFIC_EVENT_RISK", "OCCUPATION_TYPE", "PATHOGEN" ]
          },
          "defaultValue" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "descriptionTranslations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomizableEnumTranslation"
            }
          },
          "diseases" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
            },
            "uniqueItems" : true
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "translations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomizableEnumTranslation"
            }
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "value" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          }
        },
        "required" : [ "caption", "dataType", "value" ]
      },
      "DashboardCaseMeasureDto" : {
        "type" : "object",
        "properties" : {
          "caseMeasurePerDistrict" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number"
            }
          },
          "districtValuesLowerQuartile" : {
            "type" : "number"
          },
          "districtValuesMedianQuartile" : {
            "type" : "number"
          },
          "districtValuesUpperQuartile" : {
            "type" : "number"
          }
        }
      },
      "DashboardCaseStatisticDto" : {
        "type" : "object",
        "properties" : {
          "caseClassificationCount" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "contactResultingCaseCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fatalityCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fatalityRate" : {
            "type" : "number",
            "format" : "float"
          },
          "lastReportedDistrict" : {
            "type" : "string"
          },
          "newCases" : {
            "type" : "integer",
            "format" : "int32"
          },
          "outbreakDistrictCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quarantineCaseCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quarantinePlacedCaseCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "referenceDefinitionFulfilledCaseCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DashboardContactFollowUpDto" : {
        "type" : "object",
        "properties" : {
          "cooperativeContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cooperativeContactsPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "missedVisitsGtThreeDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "missedVisitsOneDay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "missedVisitsThreeDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "missedVisitsTwoDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "neverVisitedContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notVisitedContactsPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unavailableContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unavailableContactsPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uncooperativeContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uncooperativeContactsPercentage" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DashboardContactStatisticDto" : {
        "type" : "object",
        "properties" : {
          "confirmedContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactClassificationConfirmedPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactClassificationNotAContactPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactClassificationUnconfirmedPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dashboardContactFollowUp" : {
            "$ref" : "#/components/schemas/DashboardContactFollowUpDto"
          },
          "dashboardContactStoppedFollowUp" : {
            "$ref" : "#/components/schemas/DashboardContactStoppedFollowUpDto"
          },
          "dashboardContactVisit" : {
            "$ref" : "#/components/schemas/DashboardContactVisitDto"
          },
          "diseaseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "newContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "newContactsPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "symptomaticContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "symptomaticContactsPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unconfirmedContactsCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DashboardContactStoppedFollowUpDto" : {
        "type" : "object",
        "properties" : {
          "cancelledContacts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "completedContacts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactStatusConvertedPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "convertedContacts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpCanceledPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpCompletedPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lostContacts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lostToFollowUpPercentage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stoppedFollowUpContacts" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DashboardContactVisitDto" : {
        "type" : "object",
        "properties" : {
          "cooperativeVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cooperativeVisitsGrowth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "missedVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "missedVisitsGrowth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "previousCooperativeVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "previousMissedVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "previousUnavailableVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "previousUncooperativeVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unavailableVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unavailableVisitsGrowth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uncooperativeVisitsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uncooperativeVisitsGrowth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "visitsCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DashboardCriteria" : {
        "type" : "object",
        "properties" : {
          "caseMeasure" : {
            "type" : "string",
            "enum" : [ "CASE_COUNT", "CASE_INCIDENCE" ]
          },
          "dateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "epiCurveGrouping" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          },
          "includeNotACaseClassification" : {
            "type" : "boolean"
          },
          "newCaseDateType" : {
            "$ref" : "#/components/schemas/CriteriaDateType"
          },
          "previousDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "previousDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "showMinimumEntries" : {
            "type" : "boolean"
          }
        }
      },
      "DashboardEventDto" : {
        "type" : "object",
        "properties" : {
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "eventDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventInvestigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "DISCARDED" ]
          },
          "eventStatus" : {
            "type" : "string",
            "enum" : [ "SIGNAL", "EVENT", "SCREENING", "CLUSTER", "DROPPED" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "locationLat" : {
            "type" : "number",
            "format" : "double"
          },
          "locationLon" : {
            "type" : "number",
            "format" : "double"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "DeaContentEntry" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "value" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          }
        }
      },
      "DiseaseBurdenDto" : {
        "type" : "object",
        "properties" : {
          "caseCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "caseDeathCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "caseFatalityRate" : {
            "type" : "number",
            "format" : "float"
          },
          "casesDifference" : {
            "type" : "integer",
            "format" : "int64"
          },
          "casesDifferencePercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "eventCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastReportedDistrictName" : {
            "type" : "string"
          },
          "outbreakDistrictCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "previousCaseCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DiseaseClassificationCriteriaDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "confirmedCriteria" : {
            "$ref" : "#/components/schemas/ClassificationCriteriaDto"
          },
          "confirmedNoSymptomsCriteria" : {
            "$ref" : "#/components/schemas/ClassificationCriteriaDto"
          },
          "confirmedUnknownSymptomsCriteria" : {
            "$ref" : "#/components/schemas/ClassificationCriteriaDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "notACaseCriteria" : {
            "$ref" : "#/components/schemas/ClassificationCriteriaDto"
          },
          "probableCriteria" : {
            "$ref" : "#/components/schemas/ClassificationCriteriaDto"
          },
          "suspectCriteria" : {
            "$ref" : "#/components/schemas/ClassificationCriteriaDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "DiseaseConfigurationDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "ageGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "aggregateReportingEnabled" : {
            "type" : "boolean"
          },
          "automaticSampleAssignmentThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseFollowUpDuration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseSurveillanceEnabled" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "eventParticipantFollowUpDuration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedClassification" : {
            "type" : "boolean"
          },
          "extendedClassificationMulti" : {
            "type" : "boolean"
          },
          "followUpDuration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpEnabled" : {
            "type" : "boolean"
          },
          "primaryDisease" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "DiseaseVariant" : {
        "type" : "object",
        "properties" : {
          "allProperties" : {
            "type" : "object"
          },
          "caption" : {
            "type" : "string"
          },
          "hasDetails" : {
            "type" : "boolean"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "writeOnly" : true
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "DistrictCriteria" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "nameEpidLike" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          }
        }
      },
      "DistrictDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultInfrastructure" : {
            "type" : "boolean"
          },
          "epidCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "growthRate" : {
            "type" : "number",
            "format" : "float"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "DistrictIndexDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultInfrastructure" : {
            "type" : "boolean"
          },
          "epidCode" : {
            "type" : "string"
          },
          "externalID" : {
            "type" : "string"
          },
          "growthRate" : {
            "type" : "number",
            "format" : "float"
          },
          "name" : {
            "type" : "string"
          },
          "population" : {
            "type" : "integer",
            "format" : "int32"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "DistrictReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "DocumentCriteria" : {
        "type" : "object",
        "properties" : {
          "documentRelatedEntityType" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "ACTION", "EVENT", "TRAVEL_ENTRY" ]
          },
          "entityUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "documentRelatedEntityType", "entityUuids" ]
      },
      "DocumentDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "mimeType" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uploadingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "mimeType", "name", "size", "uploadingUser" ]
      },
      "EnvironmentDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "description" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "environmentMedia" : {
            "type" : "string",
            "enum" : [ "WATER", "SOIL_ROCK", "AIR", "BIOTA" ]
          },
          "environmentName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "infrastructureDetails" : {
            "type" : "string",
            "enum" : [ "SEPTIC_TANK", "LATRIN", "TOILET", "MANHOLE", "WELLS", "SURFACE_WATER", "OPEN_DRAIN", "OTHER", "UNKNOWN" ]
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherInfrastructureDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherWaterType" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherWaterUse" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "waterType" : {
            "type" : "string",
            "enum" : [ "WASTEWATER", "GROUNDWATER", "SURFACE_WATER", "PRECIPITATION", "OTHER", "UNKNOWN" ]
          },
          "waterUse" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          }
        },
        "required" : [ "environmentMedia", "environmentName", "investigationStatus", "reportDate", "reportingUser" ]
      },
      "EnvironmentReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "environmentName" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "EnvironmentSampleDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "chlorineResiduals" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "dispatchDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dispatchDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "dispatched" : {
            "type" : "boolean"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentReferenceDto"
          },
          "fieldSampleId" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "generalComment" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "heavyRain" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "labSampleId" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "laboratory" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "laboratoryDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherRequestedPathogenTests" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherSampleMaterial" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "phValue" : {
            "type" : "integer",
            "format" : "int32",
            "maximum" : 14,
            "minimum" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "receivalDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "received" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "requestedPathogenTests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Pathogen"
            },
            "uniqueItems" : true
          },
          "sampleDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sampleMaterial" : {
            "type" : "string",
            "enum" : [ "WATER", "SOIL", "AIR", "VECTORS", "OTHER" ]
          },
          "sampleTemperature" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sampleVolume" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "specimenCondition" : {
            "type" : "string",
            "enum" : [ "ADEQUATE", "NOT_ADEQUATE" ]
          },
          "turbidity" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "weatherConditions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          }
        },
        "required" : [ "environment", "laboratory", "reportDate", "reportingUser", "sampleDateTime", "sampleMaterial" ]
      },
      "EnvironmentSampleReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "EpiDataDto" : {
        "type" : "object",
        "properties" : {
          "activitiesAsCase" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityAsCaseDto"
            }
          },
          "activityAsCaseDetailsKnown" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "areaInfectedAnimals" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contactWithSourceCaseKnown" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "exposureDetailsKnown" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "exposures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExposureDto"
            }
          },
          "highTransmissionRiskArea" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "largeOutbreaksArea" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "EpiWeek" : {
        "type" : "object",
        "properties" : {
          "week" : {
            "type" : "integer",
            "format" : "int32"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EventActionIndexDto" : {
        "type" : "object",
        "properties" : {
          "actionChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionCreationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionCreatorUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "actionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionLastModifiedBy" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "actionPriority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "actionStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE" ]
          },
          "actionTitle" : {
            "type" : "string"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "eventDisease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "eventDiseaseDetails" : {
            "type" : "string"
          },
          "eventDiseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "eventEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventEvolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventIdentificationSource" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "BACKWARD_TRACING", "FORWARD_TRACING" ]
          },
          "eventInvestigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "DISCARDED" ]
          },
          "eventManagementStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "CLOSED" ]
          },
          "eventReportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "eventResponsibleUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "eventRiskLevel" : {
            "type" : "string",
            "enum" : [ "LOW", "MODERATE", "HIGH", "UNKNOWN" ]
          },
          "eventStartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventStatus" : {
            "type" : "string",
            "enum" : [ "SIGNAL", "EVENT", "SCREENING", "CLUSTER", "DROPPED" ]
          },
          "eventTitle" : {
            "type" : "string"
          },
          "eventUuid" : {
            "type" : "string"
          },
          "otherDeletionReason" : {
            "type" : "string"
          }
        }
      },
      "EventCriteria" : {
        "type" : "object",
        "properties" : {
          "actionChangeDateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "actionChangeDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionChangeDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionDateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "actionDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE" ]
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "deleted" : {
            "type" : "boolean"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "eventDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventDateType" : {
            "$ref" : "#/components/schemas/CriteriaDateType"
          },
          "eventEvolutionDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventEvolutionDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventGroup" : {
            "$ref" : "#/components/schemas/EventGroupReferenceDto"
          },
          "eventIdentificationSource" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "BACKWARD_TRACING", "FORWARD_TRACING" ]
          },
          "eventInvestigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "DISCARDED" ]
          },
          "eventManagementStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "CLOSED" ]
          },
          "eventStatus" : {
            "type" : "string",
            "enum" : [ "SIGNAL", "EVENT", "SCREENING", "CLUSTER", "DROPPED" ]
          },
          "evolutionDateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "excludedUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "facility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "freeText" : {
            "type" : "string"
          },
          "freeTextEventGroups" : {
            "type" : "string"
          },
          "freeTextEventParticipants" : {
            "type" : "string"
          },
          "hasNoSuperordinateEvent" : {
            "type" : "boolean"
          },
          "onlyEntitiesChangedSinceLastSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyEntitiesNotSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "onlyEntitiesSharedWithExternalSurvTool" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "reportingUserRole" : {
            "$ref" : "#/components/schemas/UserRoleReferenceDto"
          },
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "riskLevel" : {
            "type" : "string",
            "enum" : [ "LOW", "MODERATE", "HIGH", "UNKNOWN" ]
          },
          "specificRisk" : {
            "$ref" : "#/components/schemas/SpecificRisk"
          },
          "srcType" : {
            "type" : "string",
            "enum" : [ "NOT_APPLICABLE", "MEDIA_NEWS", "HOTLINE_PERSON", "MATHEMATICAL_MODEL", "INSTITUTIONAL_PARTNER" ]
          },
          "superordinateEvent" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "typeOfPlace" : {
            "type" : "string",
            "enum" : [ "FACILITY", "FACILITY_23_IFSG", "COMMUNITY_FACILITY", "FACILITY_36_IFSG", "FESTIVITIES", "HOME", "MEANS_OF_TRANSPORT", "PUBLIC_PLACE", "SCATTERED", "UNKNOWN", "OTHER" ]
          },
          "userFilterIncluded" : {
            "type" : "boolean"
          }
        }
      },
      "EventDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "connectionNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "diseaseTransmissionMode" : {
            "type" : "string",
            "enum" : [ "HUMAN_TO_HUMAN", "ANIMAL", "ENVIRONMENT", "FOOD", "VECTOR_BORNE", "UNKNOWN" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "diseaseVariantDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "epidemiologicalEvidence" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "epidemiologicalEvidenceDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          },
          "eventDesc" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "eventIdentificationSource" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "BACKWARD_TRACING", "FORWARD_TRACING" ]
          },
          "eventInvestigationEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventInvestigationStartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventInvestigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "DISCARDED" ]
          },
          "eventLocation" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "eventManagementStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "CLOSED" ]
          },
          "eventStatus" : {
            "type" : "string",
            "enum" : [ "SIGNAL", "EVENT", "SCREENING", "CLUSTER", "DROPPED" ]
          },
          "eventTitle" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "evolutionComment" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "evolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalToken" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "humanTransmissionMode" : {
            "type" : "string",
            "enum" : [ "FECAL_ORAL_SMEAR_INFECTION", "PARENTERAL", "DIRECT_SKIN_CONTACT", "RESPIRATORY", "SEXUAL", "CONNATAL", "OTHER" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "infectionPathCertainty" : {
            "type" : "string",
            "enum" : [ "SUSPECT", "PROBABLE", "CONFIRMED", "UNKNOWN" ]
          },
          "internalToken" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "laboratoryDiagnosticEvidence" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "laboratoryDiagnosticEvidenceDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          },
          "meansOfTransport" : {
            "type" : "string",
            "enum" : [ "LOCAL_PUBLIC_TRANSPORT", "BUS", "FERRY", "PLANE", "TRAIN", "OTHER" ]
          },
          "meansOfTransportDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "medicallyAssociatedTransmissionMode" : {
            "type" : "string",
            "enum" : [ "OPERATIVE_OR_DIAGNOSTIC_PROCEDURE", "BLOOD_PRODUCTS", "ORGAN_TRANSPLANTATION", "DIALYSIS", "INJECTION_FOR_MEDICAL_PURPOSES" ]
          },
          "multiDayEvent" : {
            "type" : "boolean"
          },
          "nosocomial" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "parenteralTransmissionMode" : {
            "type" : "string",
            "enum" : [ "INTRAVENOUS_DRUG_USE", "HOUSEHOLD_CONTACT", "MEDICALLY_ASSOCIATED", "TATTOOING_PIERCING", "PEDICURE_MANICURE", "OTHER" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "reportLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "riskLevel" : {
            "type" : "string",
            "enum" : [ "LOW", "MODERATE", "HIGH", "UNKNOWN" ]
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "specificRisk" : {
            "$ref" : "#/components/schemas/SpecificRisk"
          },
          "srcEmail" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcFirstName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcInstitutionalPartnerType" : {
            "type" : "string",
            "enum" : [ "HEALTH_INSURANCE", "TERRITORIAL_COMMUNITIES", "NATIONAL_EDUCATION", "HEALTH_ESTABLISHMENTS", "MEDICO_SOCIAL_ESTABLISHMENTS", "OTHER" ]
          },
          "srcInstitutionalPartnerTypeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcLastName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcMediaDetails" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "srcMediaName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcMediaWebsite" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcTelNo" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "srcType" : {
            "type" : "string",
            "enum" : [ "NOT_APPLICABLE", "MEDIA_NEWS", "HOTLINE_PERSON", "MATHEMATICAL_MODEL", "INSTITUTIONAL_PARTNER" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "superordinateEvent" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "transregionalOutbreak" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "travelDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "typeOfPlace" : {
            "type" : "string",
            "enum" : [ "FACILITY", "FACILITY_23_IFSG", "COMMUNITY_FACILITY", "FACILITY_36_IFSG", "FESTIVITIES", "HOME", "MEANS_OF_TRANSPORT", "PUBLIC_PLACE", "SCATTERED", "UNKNOWN", "OTHER" ]
          },
          "typeOfPlaceText" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "workEnvironment" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "OPEN_SPACE_OFFICE", "FOOD_SECTOR", "BUILDING_SECTOR", "LOGISTICS_CENTER", "OTHER" ]
          }
        },
        "required" : [ "eventLocation", "eventStatus", "eventTitle", "reportDateTime" ]
      },
      "EventGroupCriteria" : {
        "type" : "object",
        "properties" : {
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "eventDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "excludedUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "freeText" : {
            "type" : "string"
          },
          "freeTextEvent" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "userFilterIncluded" : {
            "type" : "boolean"
          }
        }
      },
      "EventGroupDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "name" ]
      },
      "EventGroupIndexDto" : {
        "type" : "object",
        "properties" : {
          "eventCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "EventGroupReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "EventGroupsIndexDto" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventGroup" : {
            "$ref" : "#/components/schemas/EventGroupReferenceDto"
          }
        }
      },
      "EventIndexDto" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "caption" : {
            "type" : "string"
          },
          "caseCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "community" : {
            "type" : "string"
          },
          "contactCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "contactCountSourceInEvent" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deathCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventGroups" : {
            "$ref" : "#/components/schemas/EventGroupsIndexDto"
          },
          "eventIdentificationSource" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "BACKWARD_TRACING", "FORWARD_TRACING" ]
          },
          "eventInvestigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "DISCARDED" ]
          },
          "eventLocation" : {
            "$ref" : "#/components/schemas/EventIndexLocation"
          },
          "eventManagementStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ONGOING", "DONE", "CLOSED" ]
          },
          "eventStatus" : {
            "type" : "string",
            "enum" : [ "SIGNAL", "EVENT", "SCREENING", "CLUSTER", "DROPPED" ]
          },
          "eventTitle" : {
            "type" : "string"
          },
          "evolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string"
          },
          "externalToken" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "inJurisdictionOrOwned" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "participantCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "type" : "string"
          },
          "regionUuid" : {
            "type" : "string"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "riskLevel" : {
            "type" : "string",
            "enum" : [ "LOW", "MODERATE", "HIGH", "UNKNOWN" ]
          },
          "specificRisk" : {
            "$ref" : "#/components/schemas/SpecificRisk"
          },
          "srcFirstName" : {
            "type" : "string"
          },
          "srcLastName" : {
            "type" : "string"
          },
          "srcMediaName" : {
            "type" : "string"
          },
          "srcMediaWebsite" : {
            "type" : "string"
          },
          "srcTelNo" : {
            "type" : "string"
          },
          "srcType" : {
            "type" : "string",
            "enum" : [ "NOT_APPLICABLE", "MEDIA_NEWS", "HOTLINE_PERSON", "MATHEMATICAL_MODEL", "INSTITUTIONAL_PARTNER" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "surveillanceToolLastShareDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "surveillanceToolShareCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "surveillanceToolStatus" : {
            "type" : "string",
            "enum" : [ "SHARED", "DELETED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "EventIndexLocation" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "community" : {
            "type" : "string"
          },
          "district" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          }
        }
      },
      "EventParticipantCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "excludePseudonymized" : {
            "type" : "boolean"
          },
          "freeText" : {
            "type" : "string"
          },
          "noResultingCase" : {
            "type" : "boolean"
          },
          "onlyCountContactsWithSourceCaseInEvent" : {
            "type" : "boolean"
          },
          "pathogenTestResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "relevantDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          }
        }
      },
      "EventParticipantDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "involvementDescription" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonDto"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "resultingCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          }
        },
        "required" : [ "event", "person" ]
      },
      "EventParticipantIndexDto" : {
        "type" : "object",
        "properties" : {
          "approximateAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caption" : {
            "type" : "string"
          },
          "caseUuid" : {
            "type" : "string"
          },
          "contactCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "eventUuid" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "inJurisdictionOrOwned" : {
            "type" : "boolean"
          },
          "involvementDescription" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "pathogenTestResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "personUuid" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "sampleDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationStatus" : {
            "type" : "string",
            "enum" : [ "VACCINATED", "UNVACCINATED", "UNKNOWN" ]
          }
        }
      },
      "EventParticipantReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "EventReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ExposureDto" : {
        "type" : "object",
        "properties" : {
          "animalCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "PROCESSED", "UNKNOWN" ]
          },
          "animalContactType" : {
            "type" : "string",
            "enum" : [ "BITE", "TOUCH", "SCRATCH", "LICK", "OTHER" ]
          },
          "animalContactTypeDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "animalMarket" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "animalVaccinated" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bodyOfWater" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "connectionNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "contactToBodyFluids" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "contactToCase" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deceasedPersonIll" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "deceasedPersonName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "deceasedPersonRelation" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "description" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "eatingRawAnimalProducts" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "exposureRole" : {
            "type" : "string",
            "enum" : [ "PASSENGER", "STAFF", "NURSING_STAFF", "MEDICAL_STAFF", "VISITOR", "GUEST", "CUSTOMER", "CONSERVATEE", "PATIENT", "EDUCATOR", "TRAINEE_TEACHER", "PUPIL", "STUDENT", "PARENT", "TEACHER", "UNKNOWN", "OTHER" ]
          },
          "exposureType" : {
            "type" : "string",
            "enum" : [ "WORK", "TRAVEL", "SPORT", "VISIT", "GATHERING", "HABITATION", "PERSONAL_SERVICES", "BURIAL", "ANIMAL_CONTACT", "OTHER", "UNKNOWN" ]
          },
          "exposureTypeDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "gatheringDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "gatheringType" : {
            "type" : "string",
            "enum" : [ "PARTY", "RELIGIOUS", "MUSICAL", "CONCERT", "DEMONSTRATION", "CARNIVAL", "FAIR", "SPORTING_EVENT", "OTHER" ]
          },
          "habitationDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "habitationType" : {
            "type" : "string",
            "enum" : [ "MEDICAL", "OTHER" ]
          },
          "handlingAnimals" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "handlingSamples" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "indoors" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "largeAttendanceNumber" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "longFaceToFaceContact" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "meansOfTransport" : {
            "type" : "string",
            "enum" : [ "LOCAL_PUBLIC_TRANSPORT", "BUS", "FERRY", "PLANE", "TRAIN", "OTHER" ]
          },
          "meansOfTransportDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherProtectiveMeasures" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "outdoors" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "percutaneous" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "physicalContactDuringPreparation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "physicalContactWithBody" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "probableInfectionEnvironment" : {
            "type" : "boolean"
          },
          "prophylaxis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "prophylaxisDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "protectiveMeasuresDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "riskArea" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "seatNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "shortDistance" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "typeOfAnimal" : {
            "type" : "string",
            "enum" : [ "BAT", "POULTRY", "CAMEL", "CANIDAE", "CAT", "CATTLE", "DOG", "PRIMATE", "SNAKE", "SWINE", "RABBIT", "RODENT", "TICK", "FLEA", "OTHER" ]
          },
          "typeOfAnimalDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "typeOfPlace" : {
            "type" : "string",
            "enum" : [ "FACILITY", "FACILITY_23_IFSG", "COMMUNITY_FACILITY", "FACILITY_36_IFSG", "FESTIVITIES", "HOME", "MEANS_OF_TRANSPORT", "PUBLIC_PLACE", "SCATTERED", "UNKNOWN", "OTHER" ]
          },
          "typeOfPlaceDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "waterSource" : {
            "type" : "string",
            "enum" : [ "PIPE_NETWORK", "COMMUNITY_BOREHOLE_WELL", "PRIVATE_BOREHOLE_WELL", "STREAM", "OTHER" ]
          },
          "waterSourceDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "wearingMask" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "wearingPpe" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "workEnvironment" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "OPEN_SPACE_OFFICE", "FOOD_SECTOR", "BUILDING_SECTOR", "LOGISTICS_CENTER", "OTHER" ]
          }
        },
        "required" : [ "exposureType" ]
      },
      "ExternalDataDto" : {
        "type" : "object",
        "properties" : {
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalToken" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ExternalMessageCriteria" : {
        "type" : "object",
        "properties" : {
          "assignee" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "birthDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "birthDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "externalMessageStatus" : {
            "type" : "string",
            "enum" : [ "UNPROCESSED", "PROCESSED", "FORWARDED", "UNCLEAR" ]
          },
          "messageContentLike" : {
            "type" : "string"
          },
          "messageDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "messageDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sample" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          },
          "searchFieldLike" : {
            "type" : "string"
          },
          "surveillanceReport" : {
            "$ref" : "#/components/schemas/SurveillanceReportReferenceDto"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "LAB_MESSAGE", "PHYSICIANS_REPORT" ]
          },
          "uuid" : {
            "type" : "string"
          }
        }
      },
      "ExternalMessageDto" : {
        "type" : "object",
        "properties" : {
          "assignee" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "automaticProcessingPossible" : {
            "type" : "boolean"
          },
          "caseReportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "diseaseVariantDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalMessageDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "messageDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "personBirthDateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "personBirthDateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "personBirthDateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "personCity" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personCountry" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "personEmail" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personExternalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "personFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "personFirstName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personHouseNumber" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personLastName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personNationalHealthId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personPhone" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personPhoneNumberType" : {
            "type" : "string",
            "enum" : [ "LANDLINE", "MOBILE", "WORK", "OTHER" ]
          },
          "personPostalCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personPresentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "personSex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "personStreet" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "reportMessageId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "reporterCity" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "reporterExternalIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "reporterName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "reporterPostalCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "sampleReports" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SampleReportDto"
            }
          },
          "sampleReportsNullSafe" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SampleReportDto"
            }
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNPROCESSED", "PROCESSED", "FORWARDED", "UNCLEAR" ]
          },
          "surveillanceReport" : {
            "$ref" : "#/components/schemas/SurveillanceReportReferenceDto"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "LAB_MESSAGE", "PHYSICIANS_REPORT" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ExternalMessageIndexDto" : {
        "type" : "object",
        "properties" : {
          "assignee" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "messageDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "personBirthDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "personFirstName" : {
            "type" : "string"
          },
          "personLastName" : {
            "type" : "string"
          },
          "personPostalCode" : {
            "type" : "string"
          },
          "reporterName" : {
            "type" : "string"
          },
          "reporterPostalCode" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNPROCESSED", "PROCESSED", "FORWARDED", "UNCLEAR" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "LAB_MESSAGE", "PHYSICIANS_REPORT" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ExternalMessageReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ExternalVisitDto" : {
        "type" : "object",
        "properties" : {
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "personUuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "reportLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "symptoms" : {
            "$ref" : "#/components/schemas/SymptomsDto"
          },
          "visitDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "visitRemarks" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "visitStatus" : {
            "type" : "string",
            "enum" : [ "UNAVAILABLE", "UNCOOPERATIVE", "COOPERATIVE" ]
          }
        },
        "required" : [ "disease", "personUuid", "visitDateTime", "visitStatus" ]
      },
      "FacilityCriteria" : {
        "type" : "object",
        "properties" : {
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "nameAddressLike" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "typeGroup" : {
            "type" : "string",
            "enum" : [ "ACCOMMODATION", "CARE_FACILITY", "CATERING_OUTLET", "EDUCATIONAL_FACILITY", "LEISURE_FACILITY", "MEDICAL_FACILITY", "WORKING_PLACE", "RESIDENCE", "COMMERCE" ]
          }
        }
      },
      "FacilityDto" : {
        "type" : "object",
        "properties" : {
          "additionalInformation" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "archived" : {
            "type" : "boolean"
          },
          "areaType" : {
            "type" : "string",
            "enum" : [ "URBAN", "RURAL", "UNKNOWN" ]
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "city" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contactPersonEmail" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "contactPersonFirstName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "contactPersonLastName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "contactPersonPhone" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "houseNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "postalCode" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "publicOwnership" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "street" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "FacilityIndexDto" : {
        "type" : "object",
        "properties" : {
          "additionalInformation" : {
            "type" : "string"
          },
          "caption" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "externalID" : {
            "type" : "string"
          },
          "houseNumber" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "name" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "street" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "FacilityReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "FeatureConfigurationCriteria" : {
        "type" : "object",
        "properties" : {
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "featureTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AGGREGATE_REPORTING", "CAMPAIGNS", "CASE_SURVEILANCE", "CLINICAL_MANAGEMENT", "CONTACT_TRACING", "EVENT_SURVEILLANCE", "SAMPLES_LAB", "ADDITIONAL_TESTS", "TASK_MANAGEMENT", "WEEKLY_REPORTING", "IMMUNIZATION_MANAGEMENT", "TRAVEL_ENTRIES", "DASHBOARD_SURVEILLANCE", "DASHBOARD_CONTACTS", "DASHBOARD_CAMPAIGNS", "DASHBOARD_SAMPLES", "LIMITED_SYNCHRONIZATION", "ENVIRONMENT_MANAGEMENT", "SELF_REPORTING", "ASSIGN_TASKS_TO_HIGHER_LEVEL", "CASE_FOLLOWUP", "DOCUMENTS", "DOCUMENTS_MULTI_UPLOAD", "EVENT_GROUPS", "EVENT_HIERARCHIES", "EXTERNAL_MESSAGES", "MANUAL_EXTERNAL_MESSAGES", "NATIONAL_CASE_SHARING", "SURVEILLANCE_REPORTS", "SORMAS_TO_SORMAS_ACCEPT_REJECT", "SORMAS_TO_SORMAS_SHARE_CASES", "SORMAS_TO_SORMAS_SHARE_CONTACTS", "SORMAS_TO_SORMAS_SHARE_EVENTS", "SORMAS_TO_SORMAS_SHARE_EXTERNAL_MESSAGES", "IMMUNIZATION_STATUS_AUTOMATION", "PERSON_DUPLICATE_CUSTOM_SEARCH", "EDIT_INFRASTRUCTURE_DATA", "AUTOMATIC_ARCHIVING", "EDIT_ARCHIVED_ENTITIES", "EXTERNAL_EMAILS", "HIDE_JURISDICTION_FIELDS", "VIEW_TAB_CASES_HOSPITALIZATION", "VIEW_TAB_CASES_SYMPTOMS", "VIEW_TAB_CASES_EPIDEMIOLOGICAL_DATA", "VIEW_TAB_CASES_THERAPY", "VIEW_TAB_CASES_FOLLOW_UP", "VIEW_TAB_CASES_CLINICAL_COURSE", "VIEW_TAB_CONTACTS_EPIDEMIOLOGICAL_DATA", "VIEW_TAB_CONTACTS_FOLLOW_UP_VISITS", "GDPR_CONSENT_POPUP", "INFRASTRUCTURE_TYPE_AREA", "OUTBREAKS", "PERSON_MANAGEMENT", "AUTH_PROVIDER_TO_SORMAS_USER_SYNC", "LINE_LISTING", "EVENT_GROUPS_MODIFICATION_NOTIFICATIONS", "EVENT_PARTICIPANT_CASE_CONFIRMED_NOTIFICATIONS", "EVENT_PARTICIPANT_RELATED_TO_OTHER_EVENTS_NOTIFICATIONS", "TASK_NOTIFICATIONS", "OTHER_NOTIFICATIONS", "TASK_GENERATION_CASE_SURVEILLANCE", "TASK_GENERATION_CONTACT_TRACING", "TASK_GENERATION_EVENT_SURVEILLANCE", "TASK_GENERATION_GENERAL", "CASE_AND_CONTACT_BULK_ACTIONS" ]
            }
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "searchText" : {
            "type" : "string"
          }
        }
      },
      "FeatureConfigurationDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "featureType" : {
            "type" : "string",
            "enum" : [ "AGGREGATE_REPORTING", "CAMPAIGNS", "CASE_SURVEILANCE", "CLINICAL_MANAGEMENT", "CONTACT_TRACING", "EVENT_SURVEILLANCE", "SAMPLES_LAB", "ADDITIONAL_TESTS", "TASK_MANAGEMENT", "WEEKLY_REPORTING", "IMMUNIZATION_MANAGEMENT", "TRAVEL_ENTRIES", "DASHBOARD_SURVEILLANCE", "DASHBOARD_CONTACTS", "DASHBOARD_CAMPAIGNS", "DASHBOARD_SAMPLES", "LIMITED_SYNCHRONIZATION", "ENVIRONMENT_MANAGEMENT", "SELF_REPORTING", "ASSIGN_TASKS_TO_HIGHER_LEVEL", "CASE_FOLLOWUP", "DOCUMENTS", "DOCUMENTS_MULTI_UPLOAD", "EVENT_GROUPS", "EVENT_HIERARCHIES", "EXTERNAL_MESSAGES", "MANUAL_EXTERNAL_MESSAGES", "NATIONAL_CASE_SHARING", "SURVEILLANCE_REPORTS", "SORMAS_TO_SORMAS_ACCEPT_REJECT", "SORMAS_TO_SORMAS_SHARE_CASES", "SORMAS_TO_SORMAS_SHARE_CONTACTS", "SORMAS_TO_SORMAS_SHARE_EVENTS", "SORMAS_TO_SORMAS_SHARE_EXTERNAL_MESSAGES", "IMMUNIZATION_STATUS_AUTOMATION", "PERSON_DUPLICATE_CUSTOM_SEARCH", "EDIT_INFRASTRUCTURE_DATA", "AUTOMATIC_ARCHIVING", "EDIT_ARCHIVED_ENTITIES", "EXTERNAL_EMAILS", "HIDE_JURISDICTION_FIELDS", "VIEW_TAB_CASES_HOSPITALIZATION", "VIEW_TAB_CASES_SYMPTOMS", "VIEW_TAB_CASES_EPIDEMIOLOGICAL_DATA", "VIEW_TAB_CASES_THERAPY", "VIEW_TAB_CASES_FOLLOW_UP", "VIEW_TAB_CASES_CLINICAL_COURSE", "VIEW_TAB_CONTACTS_EPIDEMIOLOGICAL_DATA", "VIEW_TAB_CONTACTS_FOLLOW_UP_VISITS", "GDPR_CONSENT_POPUP", "INFRASTRUCTURE_TYPE_AREA", "OUTBREAKS", "PERSON_MANAGEMENT", "AUTH_PROVIDER_TO_SORMAS_USER_SYNC", "LINE_LISTING", "EVENT_GROUPS_MODIFICATION_NOTIFICATIONS", "EVENT_PARTICIPANT_CASE_CONFIRMED_NOTIFICATIONS", "EVENT_PARTICIPANT_RELATED_TO_OTHER_EVENTS_NOTIFICATIONS", "TASK_NOTIFICATIONS", "OTHER_NOTIFICATIONS", "TASK_GENERATION_CASE_SURVEILLANCE", "TASK_GENERATION_CONTACT_TRACING", "TASK_GENERATION_EVENT_SURVEILLANCE", "TASK_GENERATION_GENERAL", "CASE_AND_CONTACT_BULK_ACTIONS" ]
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "FeatureConfigurationIndexDto" : {
        "type" : "object",
        "properties" : {
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "districtName" : {
            "type" : "string"
          },
          "districtUuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "regionName" : {
            "type" : "string"
          },
          "regionUuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "HealthConditionsDto" : {
        "type" : "object",
        "properties" : {
          "asplenia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "asthma" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "cardiovascularDiseaseIncludingHypertension" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "chronicHeartFailure" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "chronicKidneyDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "chronicLiverDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "chronicNeurologicCondition" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "chronicPulmonaryDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "congenitalSyphilis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "currentSmoker" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "diabetes" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "downSyndrome" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "formerSmoker" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hepatitis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hiv" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hivArt" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "immunodeficiencyIncludingHiv" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "immunodeficiencyOtherThanHiv" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "malignancyChemotherapy" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "obesity" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherConditions" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "sickleCellDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "tuberculosis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "HospitalizationDto" : {
        "type" : "object",
        "properties" : {
          "admissionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "admittedToHealthFacility" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "dischargeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "hospitalizationReason" : {
            "type" : "string",
            "enum" : [ "REPORTED_DISEASE", "ISOLATION", "OTHER", "UNKNOWN" ]
          },
          "hospitalizedPreviously" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "intensiveCareUnit" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "intensiveCareUnitEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "intensiveCareUnitStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isolated" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "isolationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "leftAgainstAdvice" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherHospitalizationReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "previousHospitalizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreviousHospitalizationDto"
            }
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ImmunizationCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "facilityTypeGroup" : {
            "type" : "string",
            "enum" : [ "ACCOMMODATION", "CARE_FACILITY", "CATERING_OUTLET", "EDUCATIONAL_FACILITY", "LEISURE_FACILITY", "MEDICAL_FACILITY", "WORKING_PLACE", "RESIDENCE", "COMMERCE" ]
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "immunizationDateType" : {
            "type" : "string",
            "enum" : [ "REPORT_DATE", "IMMUNIZATION_END", "VALID_UNTIL", "RECOVERY_DATE", "LAST_VACCINATION_DATE", "FIRST_VACCINATION_DATE" ]
          },
          "immunizationManagementStatus" : {
            "type" : "string",
            "enum" : [ "SCHEDULED", "ONGOING", "COMPLETED", "CANCELED" ]
          },
          "immunizationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACQUIRED", "NOT_ACQUIRED", "EXPIRED" ]
          },
          "meansOfImmunization" : {
            "type" : "string",
            "enum" : [ "VACCINATION", "RECOVERY", "VACCINATION_RECOVERY", "OTHER" ]
          },
          "nameAddressPhoneEmailLike" : {
            "type" : "string"
          },
          "onlyPersonsWithOverdueImmunization" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relatedCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ImmunizationDto" : {
        "type" : "object",
        "properties" : {
          "additionalDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "archived" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "healthFacilityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "immunizationManagementStatus" : {
            "type" : "string",
            "enum" : [ "SCHEDULED", "ONGOING", "COMPLETED", "CANCELED" ]
          },
          "immunizationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACQUIRED", "NOT_ACQUIRED", "EXPIRED" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lastInfectionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "meansOfImmunization" : {
            "type" : "string",
            "enum" : [ "VACCINATION", "RECOVERY", "VACCINATION_RECOVERY", "OTHER" ]
          },
          "meansOfImmunizationDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "numberOfDoses" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfDosesDetails" : {
            "type" : "string"
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "positiveTestResultDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "previousInfection" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "recoveryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "relatedCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleCommunity" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "responsibleDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "responsibleRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VaccinationDto"
            }
          },
          "validFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validUntil" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "required" : [ "disease", "meansOfImmunization", "person", "reportDate", "responsibleDistrict", "responsibleRegion" ]
      },
      "ImmunizationIndexDto" : {
        "type" : "object",
        "properties" : {
          "ageAndBirthDate" : {
            "$ref" : "#/components/schemas/AgeAndBirthDateDto"
          },
          "caption" : {
            "type" : "string"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "immunizationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACQUIRED", "NOT_ACQUIRED", "EXPIRED" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lastVaccineType" : {
            "type" : "string"
          },
          "managementStatus" : {
            "type" : "string",
            "enum" : [ "SCHEDULED", "ONGOING", "COMPLETED", "CANCELED" ]
          },
          "meansOfImmunization" : {
            "type" : "string",
            "enum" : [ "VACCINATION", "RECOVERY", "VACCINATION_RECOVERY", "OTHER" ]
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "personFirstName" : {
            "type" : "string"
          },
          "personLastName" : {
            "type" : "string"
          },
          "personUuid" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "recoveryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ImmunizationReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "InfrastructureChangeDatesDto" : {
        "type" : "object",
        "properties" : {
          "areaChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "communityChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "continentChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "countryChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "diseaseClassificationChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "diseaseConfigurationChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "districtChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "facilityChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "featureConfigurationChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pointOfEntryChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "regionChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "subcontinentChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "userChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "userRoleChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "InfrastructureSyncDto" : {
        "type" : "object",
        "properties" : {
          "areas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AreaDto"
            }
          },
          "communities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CommunityDto"
            }
          },
          "continents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContinentDto"
            }
          },
          "countries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryDto"
            }
          },
          "deletedFeatureConfigurationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deletedUserRoleUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "diseaseClassifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiseaseClassificationCriteriaDto"
            }
          },
          "diseaseConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiseaseConfigurationDto"
            }
          },
          "districts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DistrictDto"
            }
          },
          "facilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FacilityDto"
            }
          },
          "featureConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeatureConfigurationDto"
            }
          },
          "initialSyncRequired" : {
            "type" : "boolean"
          },
          "pointsOfEntry" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PointOfEntryDto"
            }
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionDto"
            }
          },
          "subcontinents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubcontinentDto"
            }
          },
          "userRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserRoleDto"
            }
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDto"
            }
          }
        }
      },
      "JournalPersonDto" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "followUpStatus" : {
            "type" : "string",
            "enum" : [ "FOLLOW_UP", "COMPLETED", "CANCELED", "LOST", "NO_FOLLOW_UP" ]
          },
          "lastName" : {
            "type" : "string"
          },
          "latestFollowUpEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "phone" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "JsonNode" : {
        "type" : "object"
      },
      "LocationDto" : {
        "type" : "object",
        "properties" : {
          "additionalInformation" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "addressType" : {
            "type" : "string",
            "enum" : [ "HOME", "PLACE_OF_RESIDENCE", "PLACE_OF_EXPOSURE", "PLACE_OF_WORK", "PLACE_OF_ISOLATION", "EVENT_LOCATION", "OTHER_ADDRESS" ]
          },
          "addressTypeDetails" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "areaType" : {
            "type" : "string",
            "enum" : [ "URBAN", "RURAL", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "city" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contactPersonEmail" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "contactPersonFirstName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "contactPersonLastName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "contactPersonPhone" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "continent" : {
            "$ref" : "#/components/schemas/ContinentReferenceDto"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "details" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "facility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "facilityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "houseNumber" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "latLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "postalCode" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "street" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "subcontinent" : {
            "$ref" : "#/components/schemas/SubcontinentReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "MapCaseDto" : {
        "type" : "object",
        "properties" : {
          "addressLat" : {
            "type" : "number",
            "format" : "double"
          },
          "addressLon" : {
            "type" : "number",
            "format" : "double"
          },
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "healthFacilityLat" : {
            "type" : "number",
            "format" : "double"
          },
          "healthFacilityLon" : {
            "type" : "number",
            "format" : "double"
          },
          "healthFacilityUuid" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "MapContactDto" : {
        "type" : "object",
        "properties" : {
          "addressLat" : {
            "type" : "number",
            "format" : "double"
          },
          "addressLon" : {
            "type" : "number",
            "format" : "double"
          },
          "caseOnsetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "casePersonFirstName" : {
            "type" : "string"
          },
          "casePersonLastName" : {
            "type" : "string"
          },
          "caseReportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contactClassification" : {
            "type" : "string",
            "enum" : [ "UNCONFIRMED", "CONFIRMED", "NO_CONTACT" ]
          },
          "contactReportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastVisitDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "personFirstName" : {
            "type" : "string"
          },
          "personLastName" : {
            "type" : "string"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "MaternalHistoryDto" : {
        "type" : "object",
        "properties" : {
          "ageAtBirth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "arthralgiaArthritis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "arthralgiaArthritisMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "arthralgiaArthritisOnset" : {
            "type" : "string",
            "format" : "date-time"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "childrenNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "conjunctivitis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "conjunctivitisMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "conjunctivitisOnset" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "maculopapularRash" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "maculopapularRashMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maculopapularRashOnset" : {
            "type" : "string",
            "format" : "date-time"
          },
          "otherComplications" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherComplicationsDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "otherComplicationsMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "otherComplicationsOnset" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "rashExposure" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "rashExposureCommunity" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "rashExposureDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rashExposureDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "rashExposureMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rashExposureRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "rubella" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "rubellaOnset" : {
            "type" : "string",
            "format" : "date-time"
          },
          "swollenLymphs" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "swollenLymphsMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "swollenLymphsOnset" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "OccupationType" : {
        "type" : "object",
        "properties" : {
          "allProperties" : {
            "type" : "object"
          },
          "caption" : {
            "type" : "string"
          },
          "hasDetails" : {
            "type" : "boolean"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "writeOnly" : true
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "OutbreakCriteria" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "activeLower" : {
            "type" : "string",
            "format" : "date-time"
          },
          "activeUpper" : {
            "type" : "string",
            "format" : "date-time"
          },
          "changeDateAfter" : {
            "type" : "string",
            "format" : "date-time"
          },
          "diseases" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
            },
            "uniqueItems" : true
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reportedDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportedDateTo" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "OutbreakDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "PageActionDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageAdditionalTestDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdditionalTestDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageCaseFollowUpDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseFollowUpDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageCaseIndexDetailedDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseIndexDetailedDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageCaseIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageClinicalVisitIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClinicalVisitIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageCommunityDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CommunityDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageContactIndexDetailedDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactIndexDetailedDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageContactIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageContinentIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContinentIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageCountryIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageDistrictIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DistrictIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageEventActionIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventActionIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageEventGroupIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventGroupIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageEventIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageEventParticipantIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventParticipantIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageExternalMessageIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalMessageIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageFacilityIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FacilityIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageFeatureConfigurationIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeatureConfigurationIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageImmunizationIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImmunizationIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageOutbreakDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OutbreakDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PagePathogenTestDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PathogenTestDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PagePersonIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PagePointOfEntryDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PointOfEntryDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageRegionIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageSampleIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SampleIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageShareRequestIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShareRequestIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageSubcontinentIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubcontinentIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageTaskIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageTravelEntryIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravelEntryIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageUserDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageVisitIndexDto" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisitIndexDto"
            }
          },
          "hasNext" : {
            "type" : "boolean"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElementCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Pathogen" : {
        "type" : "object",
        "properties" : {
          "allProperties" : {
            "type" : "object"
          },
          "caption" : {
            "type" : "string"
          },
          "hasDetails" : {
            "type" : "boolean"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "writeOnly" : true
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PathogenTestCriteria" : {
        "type" : "object",
        "properties" : {
          "sample" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          }
        }
      },
      "PathogenTestDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cqValue" : {
            "type" : "number",
            "format" : "float"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ctValueE" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueN" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueOrf1" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueRdrp" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueRdrpS" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueS" : {
            "type" : "number",
            "format" : "float"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "environmentSample" : {
            "$ref" : "#/components/schemas/EnvironmentSampleReferenceDto"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalOrderId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "fourFoldIncreaseAntibodyTiter" : {
            "type" : "boolean"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lab" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "labDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "labUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pcrTestSpecification" : {
            "type" : "string",
            "enum" : [ "VARIANT_SPECIFIC", "N501Y_MUTATION_DETECTION" ]
          },
          "preliminary" : {
            "type" : "boolean"
          },
          "prescriberAddress" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberCity" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberCountry" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "prescriberFirstName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberLastName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberPhoneNumber" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberPhysicianCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberPostalCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sample" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          },
          "serotype" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "testDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "testResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "testResultText" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "testResultVerified" : {
            "type" : "boolean"
          },
          "testType" : {
            "type" : "string",
            "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
          },
          "testTypeText" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "testedDisease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "testedDiseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "testedDiseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "testedDiseaseVariantDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "testedPathogen" : {
            "$ref" : "#/components/schemas/Pathogen"
          },
          "testedPathogenDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "typingId" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "viaLims" : {
            "type" : "boolean"
          }
        },
        "required" : [ "lab", "testResult", "testResultVerified", "testType" ]
      },
      "PeriodDto" : {
        "type" : "object",
        "properties" : {
          "end" : {
            "type" : "string",
            "format" : "date-time"
          },
          "start" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PersonContactDetailDto" : {
        "type" : "object",
        "properties" : {
          "additionalInformation" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contactInformation" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "details" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "personContactDetailType" : {
            "type" : "string",
            "enum" : [ "PHONE", "EMAIL", "OTHER" ]
          },
          "phoneNumberType" : {
            "type" : "string",
            "enum" : [ "LANDLINE", "MOBILE", "WORK", "OTHER" ]
          },
          "primaryContact" : {
            "type" : "boolean"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "thirdParty" : {
            "type" : "boolean"
          },
          "thirdPartyName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "thirdPartyRole" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "PersonCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "nameAddressPhoneEmailLike" : {
            "type" : "string"
          },
          "personAssociation" : {
            "type" : "string",
            "enum" : [ "ALL", "CASE", "CONTACT", "EVENT_PARTICIPANT", "IMMUNIZATION", "TRAVEL_ENTRY" ]
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          }
        }
      },
      "PersonDto" : {
        "type" : "object",
        "properties" : {
          "additionalDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "address" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationDto"
            }
          },
          "approximateAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approximateAgeReferenceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "approximateAgeType" : {
            "type" : "string",
            "enum" : [ "YEARS", "MONTHS", "DAYS" ]
          },
          "armedForcesRelationType" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NO_RELATION", "CIVIL", "SOLDIER_OR_RELATIVE" ]
          },
          "birthCountry" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "birthName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "birthWeight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "burialConductor" : {
            "type" : "string",
            "enum" : [ "FAMILY_COMMUNITY", "OUTBREAK_TEAM" ]
          },
          "burialDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "burialPlaceDescription" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "causeOfDeath" : {
            "type" : "string",
            "enum" : [ "EPIDEMIC_DISEASE", "OTHER_CAUSE" ]
          },
          "causeOfDeathDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "causeOfDeathDisease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "citizenship" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "covidCodeDelivered" : {
            "type" : "boolean"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deathDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deathPlaceDescription" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "deathPlaceType" : {
            "type" : "string",
            "enum" : [ "COMMUNITY", "HOSPITAL", "OTHER" ]
          },
          "educationDetails" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "educationType" : {
            "type" : "string",
            "enum" : [ "NONE", "NURSERY", "PRIMARY", "SECONDARY", "TERTIARY", "OTHER" ]
          },
          "emailAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalToken" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "fathersName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "firstName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "gestationAgeAtBirth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hasCovidApp" : {
            "type" : "boolean"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "internalToken" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "lastName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "mothersMaidenName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "mothersName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "namesOfGuardians" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "nationalHealthId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "nickname" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "occupationDetails" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "occupationType" : {
            "$ref" : "#/components/schemas/OccupationType"
          },
          "otherSalutation" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "passportNumber" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "personContactDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonContactDetailDto"
            }
          },
          "phone" : {
            "type" : "string",
            "readOnly" : true
          },
          "placeOfBirthCommunity" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "placeOfBirthDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "placeOfBirthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "placeOfBirthFacilityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "placeOfBirthFacilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "placeOfBirthRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "salutation" : {
            "type" : "string",
            "enum" : [ "MR", "MRS", "MR_AND_MRS", "FAMILY", "GUARDIAN_OF_MINOR", "OTHER" ]
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "symptomJournalStatus" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "firstName", "lastName", "sex" ]
      },
      "PersonFollowUpEndDto" : {
        "type" : "object",
        "properties" : {
          "latestFollowUpEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "personUuid" : {
            "type" : "string"
          }
        }
      },
      "PersonIndexDto" : {
        "type" : "object",
        "properties" : {
          "ageAndBirthDate" : {
            "$ref" : "#/components/schemas/AgeAndBirthDateDto"
          },
          "caption" : {
            "type" : "string"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "city" : {
            "type" : "string"
          },
          "district" : {
            "type" : "string"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "houseNumber" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lastName" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "street" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "PersonName" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          }
        }
      },
      "PersonReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "PersonSimilarityCriteria" : {
        "type" : "object",
        "properties" : {
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "name" : {
            "$ref" : "#/components/schemas/PersonDto"
          },
          "nameUuidExternalIdExternalTokenLike" : {
            "type" : "string"
          },
          "nationalHealthId" : {
            "type" : "string"
          },
          "passportNumber" : {
            "type" : "string"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "strictNameComparison" : {
            "type" : "boolean"
          }
        }
      },
      "PersonSymptomJournalStatusDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "UNREGISTERED", "REGISTERED", "ACCEPTED", "REJECTED", "DELETED" ]
          },
          "statusDateTime" : {
            "type" : "string"
          }
        },
        "required" : [ "status" ]
      },
      "PointOfEntryCriteria" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "nameLike" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AIRPORT", "SEAPORT", "GROUND_CROSSING", "OTHER" ]
          }
        }
      },
      "PointOfEntryDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "name" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "nameOtherPointOfEntry" : {
            "type" : "boolean"
          },
          "otherPointOfEntry" : {
            "type" : "boolean"
          },
          "pointOfEntryType" : {
            "type" : "string",
            "enum" : [ "AIRPORT", "SEAPORT", "GROUND_CROSSING", "OTHER" ]
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "PointOfEntryReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "otherPointOfEntry" : {
            "type" : "boolean"
          },
          "pointOfEntryType" : {
            "type" : "string",
            "enum" : [ "AIRPORT", "SEAPORT", "GROUND_CROSSING", "OTHER" ]
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "PortHealthInfoDto" : {
        "type" : "object",
        "properties" : {
          "airlineName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "arrivalDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "conveyanceType" : {
            "type" : "string",
            "enum" : [ "CAR", "BUS", "MOTORBIKE", "OTHER" ]
          },
          "conveyanceTypeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "departureAirport" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "departureDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "departureLocation" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "details" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "finalDestination" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "flightNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "freeSeating" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lastPortOfCall" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "numberOfTransitStops" : {
            "type" : "integer",
            "format" : "int32"
          },
          "portOfDeparture" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "seatNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "transitStopDetails1" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "transitStopDetails2" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "transitStopDetails3" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "transitStopDetails4" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "transitStopDetails5" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vesselDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "vesselName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          }
        }
      },
      "PostResponse" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "object"
          },
          "statusCode" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PrescriptionCriteria" : {
        "type" : "object",
        "properties" : {
          "prescriptionType" : {
            "type" : "string",
            "enum" : [ "DRUG_INTAKE", "ORAL_REHYDRATION_SALTS", "BLOOD_TRANSFUSION", "RENAL_REPLACEMENT_THERAPY", "IV_FLUID_THERAPY", "OXYGEN_THERAPY", "INVASIVE_MECHANICAL_VENTILATION", "VASOPRESSORS_INOTROPES", "OTHER" ]
          },
          "textFilter" : {
            "type" : "string"
          },
          "therapy" : {
            "$ref" : "#/components/schemas/TherapyReferenceDto"
          }
        }
      },
      "PrescriptionDto" : {
        "type" : "object",
        "properties" : {
          "additionalNotes" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dose" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "frequency" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "prescribingClinician" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "prescriptionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prescriptionDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "prescriptionEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prescriptionStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prescriptionType" : {
            "type" : "string",
            "enum" : [ "DRUG_INTAKE", "ORAL_REHYDRATION_SALTS", "BLOOD_TRANSFUSION", "RENAL_REPLACEMENT_THERAPY", "IV_FLUID_THERAPY", "OXYGEN_THERAPY", "INVASIVE_MECHANICAL_VENTILATION", "VASOPRESSORS_INOTROPES", "OTHER" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "route" : {
            "type" : "string",
            "enum" : [ "ORAL", "IV", "RECTAL", "TOPICAL", "OTHER" ]
          },
          "routeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "therapy" : {
            "$ref" : "#/components/schemas/TherapyReferenceDto"
          },
          "typeOfDrug" : {
            "type" : "string",
            "enum" : [ "ANTIMICROBIAL", "ANTIVIRAL", "OTHER" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "PrescriptionIndexDto" : {
        "type" : "object",
        "properties" : {
          "dose" : {
            "type" : "string"
          },
          "frequency" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "prescribingClinician" : {
            "type" : "string"
          },
          "prescriptionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "prescriptionIndexRoute" : {
            "$ref" : "#/components/schemas/PrescriptionIndexRoute"
          },
          "prescriptionIndexType" : {
            "$ref" : "#/components/schemas/PrescriptionIndexType"
          },
          "prescriptionPeriod" : {
            "$ref" : "#/components/schemas/PeriodDto"
          },
          "prescriptionRoute" : {
            "type" : "string"
          },
          "prescriptionType" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "PrescriptionIndexRoute" : {
        "type" : "object",
        "properties" : {
          "route" : {
            "type" : "string",
            "enum" : [ "ORAL", "IV", "RECTAL", "TOPICAL", "OTHER" ]
          },
          "routeDetails" : {
            "type" : "string"
          }
        }
      },
      "PrescriptionIndexType" : {
        "type" : "object",
        "properties" : {
          "prescriptionDetails" : {
            "type" : "string"
          },
          "typeOfDrug" : {
            "type" : "string",
            "enum" : [ "ANTIMICROBIAL", "ANTIVIRAL", "OTHER" ]
          }
        }
      },
      "PrescriptionReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "PreviousHospitalizationDto" : {
        "type" : "object",
        "properties" : {
          "admissionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "admittedToHealthFacility" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "dischargeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "healthFacilityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "hospitalizationReason" : {
            "type" : "string",
            "enum" : [ "REPORTED_DISEASE", "ISOLATION", "OTHER", "UNKNOWN" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "intensiveCareUnit" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "intensiveCareUnitEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "intensiveCareUnitStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isolated" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "isolationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "otherHospitalizationReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "ReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "RegionCriteria" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "nameEpidLike" : {
            "type" : "string"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          }
        }
      },
      "RegionDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "area" : {
            "$ref" : "#/components/schemas/AreaReferenceDto"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultInfrastructure" : {
            "type" : "boolean"
          },
          "epidCode" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "externalID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "growthRate" : {
            "type" : "number",
            "format" : "float"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "RegionIndexDto" : {
        "type" : "object",
        "properties" : {
          "area" : {
            "$ref" : "#/components/schemas/AreaReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultInfrastructure" : {
            "type" : "boolean"
          },
          "epidCode" : {
            "type" : "string"
          },
          "externalID" : {
            "type" : "string"
          },
          "growthRate" : {
            "type" : "number",
            "format" : "float"
          },
          "name" : {
            "type" : "string"
          },
          "population" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "RegionReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "SampleCriteria" : {
        "type" : "object",
        "properties" : {
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "caseCodeIdLike" : {
            "type" : "string"
          },
          "caseUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "contactUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "eventParticipant" : {
            "$ref" : "#/components/schemas/EventParticipantReferenceDto"
          },
          "eventParticipantUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "laboratory" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "pathogenTestResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "received" : {
            "type" : "boolean"
          },
          "referred" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "sampleAssociationType" : {
            "type" : "string",
            "enum" : [ "ALL", "CASE", "CONTACT", "EVENT_PARTICIPANT", "PERSON" ]
          },
          "sampleReportDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sampleReportDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "shipped" : {
            "type" : "boolean"
          },
          "specimenCondition" : {
            "type" : "string",
            "enum" : [ "ADEQUATE", "NOT_ADEQUATE" ]
          }
        }
      },
      "SampleDto" : {
        "type" : "object",
        "properties" : {
          "additionalTestingRequested" : {
            "type" : "boolean"
          },
          "associatedCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "associatedContact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "associatedEventParticipant" : {
            "$ref" : "#/components/schemas/EventParticipantReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "fieldSampleID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lab" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "labDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "labSampleID" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "noTestPossibleReason" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "pathogenTestResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "pathogenTestingRequested" : {
            "type" : "boolean"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "received" : {
            "type" : "boolean"
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referredTo" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "reportLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "requestedAdditionalTests" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "HAEMOGLOBINURIA", "PROTEINURIA", "HEMATURIA", "ARTERIAL_VENOUS_BLOOD_GAS", "ALT_SGPT", "AST_SGOT", "CREATININE", "POTASSIUM", "UREA", "HAEMOGLOBIN", "TOTAL_BILIRUBIN", "CONJ_BILIRUBIN", "WBC_COUNT", "PLATELETS", "PROTHROMBIN_TIME" ]
            },
            "uniqueItems" : true
          },
          "requestedOtherAdditionalTests" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "requestedOtherPathogenTests" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "requestedPathogenTests" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
            },
            "uniqueItems" : true
          },
          "sampleDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sampleMaterial" : {
            "type" : "string",
            "enum" : [ "BLOOD", "SERA", "STOOL", "NASAL_SWAB", "THROAT_SWAB", "NP_SWAB", "RECTAL_SWAB", "CEREBROSPINAL_FLUID", "CRUST", "TISSUE", "URINE", "CORNEA_PM", "SALIVA", "URINE_PM", "NUCHAL_SKIN_BIOPSY", "SPUTUM", "ENDOTRACHEAL_ASPIRATE", "BRONCHOALVEOLAR_LAVAGE", "BRAIN_TISSUE", "ANTERIOR_NARES_SWAB", "OP_ASPIRATE", "NP_ASPIRATE", "PLEURAL_FLUID", "OTHER" ]
          },
          "sampleMaterialText" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "samplePurpose" : {
            "type" : "string",
            "enum" : [ "EXTERNAL", "INTERNAL" ]
          },
          "sampleSource" : {
            "type" : "string",
            "enum" : [ "HUMAN", "ANIMAL", "ENVIRONMENT" ]
          },
          "samplingReason" : {
            "type" : "string",
            "enum" : [ "PRESENCE_OF_SYMPTOMS", "OUTBREAK", "SCREENING", "PROFESSIONAL_REASON", "QUARANTINE_REGULATIONS", "CONTACT_TO_CASE", "PLANNING_TO_TRAVEL", "RETURNING_TRAVELER", "PERSONAL_REASON", "MOVING_RETURNING_RETIREMENT_HOME", "SWISS_COVID_APP_NOTIFICATION", "QUARANTINE_END", "UNKNOWN", "OTHER_REASON" ]
          },
          "samplingReasonDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "shipmentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "shipmentDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "shipped" : {
            "type" : "boolean"
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "specimenCondition" : {
            "type" : "string",
            "enum" : [ "ADEQUATE", "NOT_ADEQUATE" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "reportDateTime", "sampleDateTime", "sampleMaterial", "samplePurpose" ]
      },
      "SampleIndexDto" : {
        "type" : "object",
        "properties" : {
          "additionalTestingStatus" : {
            "type" : "string",
            "enum" : [ "NOT_REQUESTED", "REQUESTED", "PERFORMED" ]
          },
          "associatedCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "associatedContact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "associatedEventParticipant" : {
            "$ref" : "#/components/schemas/EventParticipantReferenceDto"
          },
          "caption" : {
            "type" : "string"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string"
          },
          "district" : {
            "type" : "string"
          },
          "epidNumber" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lab" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "labSampleID" : {
            "type" : "string"
          },
          "lastTestCqValue" : {
            "type" : "number",
            "format" : "float"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "pathogenTestCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pathogenTestResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "received" : {
            "type" : "boolean"
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referred" : {
            "type" : "boolean"
          },
          "sampleDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sampleJurisdictionFlagsDto" : {
            "$ref" : "#/components/schemas/SampleJurisdictionFlagsDto"
          },
          "sampleMaterial" : {
            "type" : "string",
            "enum" : [ "BLOOD", "SERA", "STOOL", "NASAL_SWAB", "THROAT_SWAB", "NP_SWAB", "RECTAL_SWAB", "CEREBROSPINAL_FLUID", "CRUST", "TISSUE", "URINE", "CORNEA_PM", "SALIVA", "URINE_PM", "NUCHAL_SKIN_BIOPSY", "SPUTUM", "ENDOTRACHEAL_ASPIRATE", "BRONCHOALVEOLAR_LAVAGE", "BRAIN_TISSUE", "ANTERIOR_NARES_SWAB", "OP_ASPIRATE", "NP_ASPIRATE", "PLEURAL_FLUID", "OTHER" ]
          },
          "samplePurpose" : {
            "type" : "string",
            "enum" : [ "EXTERNAL", "INTERNAL" ]
          },
          "samplingReason" : {
            "type" : "string",
            "enum" : [ "PRESENCE_OF_SYMPTOMS", "OUTBREAK", "SCREENING", "PROFESSIONAL_REASON", "QUARANTINE_REGULATIONS", "CONTACT_TO_CASE", "PLANNING_TO_TRAVEL", "RETURNING_TRAVELER", "PERSONAL_REASON", "MOVING_RETURNING_RETIREMENT_HOME", "SWISS_COVID_APP_NOTIFICATION", "QUARANTINE_END", "UNKNOWN", "OTHER_REASON" ]
          },
          "samplingReasonDetails" : {
            "type" : "string"
          },
          "shipmentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "shipped" : {
            "type" : "boolean"
          },
          "specimenCondition" : {
            "type" : "string",
            "enum" : [ "ADEQUATE", "NOT_ADEQUATE" ]
          },
          "typeOfLastTest" : {
            "type" : "string",
            "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SampleJurisdictionFlagsDto" : {
        "type" : "object",
        "properties" : {
          "caseInJurisdiction" : {
            "type" : "boolean"
          },
          "contactCaseInJurisdiction" : {
            "type" : "boolean"
          },
          "contactInJurisdiction" : {
            "type" : "boolean"
          },
          "evenParticipantInJurisdiction" : {
            "type" : "boolean"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          }
        }
      },
      "SampleReferenceDto" : {
        "type" : "object",
        "properties" : {
          "associatedCaseUuid" : {
            "type" : "string"
          },
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "SampleReportDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "labMessage" : {
            "$ref" : "#/components/schemas/ExternalMessageReferenceDto"
          },
          "labSampleId" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "sample" : {
            "$ref" : "#/components/schemas/SampleReferenceDto"
          },
          "sampleDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sampleMaterial" : {
            "type" : "string",
            "enum" : [ "BLOOD", "SERA", "STOOL", "NASAL_SWAB", "THROAT_SWAB", "NP_SWAB", "RECTAL_SWAB", "CEREBROSPINAL_FLUID", "CRUST", "TISSUE", "URINE", "CORNEA_PM", "SALIVA", "URINE_PM", "NUCHAL_SKIN_BIOPSY", "SPUTUM", "ENDOTRACHEAL_ASPIRATE", "BRONCHOALVEOLAR_LAVAGE", "BRAIN_TISSUE", "ANTERIOR_NARES_SWAB", "OP_ASPIRATE", "NP_ASPIRATE", "PLEURAL_FLUID", "OTHER" ]
          },
          "sampleMaterialText" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "sampleOverallTestResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "sampleReceivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "specimenCondition" : {
            "type" : "string",
            "enum" : [ "ADEQUATE", "NOT_ADEQUATE" ]
          },
          "testReports" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TestReportDto"
            }
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SampleReportReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "ShareRequestCriteria" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACCEPTED", "REJECTED", "REVOKED" ]
          },
          "statusesExcepted" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PENDING", "ACCEPTED", "REJECTED", "REVOKED" ]
            }
          }
        }
      },
      "ShareRequestIndexDto" : {
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dataType" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "EVENT" ]
          },
          "organizationId" : {
            "type" : "string"
          },
          "organizationName" : {
            "type" : "string"
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "senderName" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACCEPTED", "REJECTED", "REVOKED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SimilarPersonDto" : {
        "type" : "object",
        "properties" : {
          "ageAndBirthDate" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "communityName" : {
            "type" : "string"
          },
          "districtName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "houseNumber" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "nationalHealthId" : {
            "type" : "string"
          },
          "nickname" : {
            "type" : "string"
          },
          "passportNumber" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "presentCondition" : {
            "type" : "string",
            "enum" : [ "ALIVE", "DEAD", "BURIED", "UNKNOWN" ]
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "street" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SormasToSormasCasePreview" : {
        "type" : "object",
        "properties" : {
          "caseClassification" : {
            "type" : "string",
            "enum" : [ "NOT_CLASSIFIED", "SUSPECT", "PROBABLE", "CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS", "NO_CASE" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "healthFacilityDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "investigationStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "DONE", "DISCARDED" ]
          },
          "onsetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "outcome" : {
            "type" : "string",
            "enum" : [ "NO_OUTCOME", "DECEASED", "RECOVERED", "UNKNOWN" ]
          },
          "person" : {
            "$ref" : "#/components/schemas/SormasToSormasPersonPreview"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "pointOfEntryDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SormasToSormasContactPreview" : {
        "type" : "object",
        "properties" : {
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contactCategory" : {
            "type" : "string",
            "enum" : [ "HIGH_RISK", "HIGH_RISK_MED", "MEDIUM_RISK_MED", "LOW_RISK", "NO_RISK" ]
          },
          "contactClassification" : {
            "type" : "string",
            "enum" : [ "UNCONFIRMED", "CONFIRMED", "NO_CONTACT" ]
          },
          "contactStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CONVERTED", "DROPPED" ]
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lastContactDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "person" : {
            "$ref" : "#/components/schemas/SormasToSormasPersonPreview"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SormasToSormasEncryptedDataDto" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "senderId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          }
        }
      },
      "SormasToSormasEventParticipantPreview" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/SormasToSormasPersonPreview"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SormasToSormasEventPreview" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "eventDesc" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "eventLocation" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "eventTitle" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SormasToSormasOriginInfoDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "organizationId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "pseudonymizedData" : {
            "type" : "boolean"
          },
          "senderEmail" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "senderName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "senderPhoneNumber" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "withAssociatedContacts" : {
            "type" : "boolean"
          },
          "withEventParticipants" : {
            "type" : "boolean"
          },
          "withImmunizations" : {
            "type" : "boolean"
          },
          "withSamples" : {
            "type" : "boolean"
          },
          "withSurveillanceReports" : {
            "type" : "boolean"
          }
        },
        "required" : [ "comment" ]
      },
      "SormasToSormasPersonPreview" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "birthdateDD" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateMM" : {
            "type" : "integer",
            "format" : "int32"
          },
          "birthdateYYYY" : {
            "type" : "integer",
            "format" : "int32"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "firstName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "lastName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "MALE", "FEMALE", "OTHER", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SormasToSormasShareRequestDto" : {
        "type" : "object",
        "properties" : {
          "cases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SormasToSormasCasePreview"
            }
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SormasToSormasContactPreview"
            }
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dataType" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "EVENT" ]
          },
          "eventParticipants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SormasToSormasEventParticipantPreview"
            }
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SormasToSormasEventPreview"
            }
          },
          "originInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "responseComment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACCEPTED", "REJECTED", "REVOKED" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SortProperty" : {
        "type" : "object",
        "properties" : {
          "ascending" : {
            "type" : "boolean"
          },
          "propertyName" : {
            "type" : "string"
          }
        }
      },
      "SpecificRisk" : {
        "type" : "object",
        "properties" : {
          "allProperties" : {
            "type" : "object"
          },
          "caption" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "writeOnly" : true
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "SubcontinentCriteria" : {
        "type" : "object",
        "properties" : {
          "continent" : {
            "$ref" : "#/components/schemas/ContinentReferenceDto"
          },
          "nameLike" : {
            "type" : "string"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          }
        }
      },
      "SubcontinentDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "continent" : {
            "$ref" : "#/components/schemas/ContinentReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SubcontinentIndexDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "centrallyManaged" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "continent" : {
            "$ref" : "#/components/schemas/ContinentReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "defaultName" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "displayName" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "SubcontinentReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "SurveillanceDashboardCriteria" : {
        "type" : "object",
        "properties" : {
          "caseMeasure" : {
            "type" : "string",
            "enum" : [ "CASE_COUNT", "CASE_INCIDENCE" ]
          },
          "dateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "epiCurveGrouping" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          },
          "includeNotACaseClassification" : {
            "type" : "boolean"
          },
          "newCaseDateType" : {
            "type" : "string",
            "enum" : [ "MOST_RELEVANT", "ONSET", "REPORT" ]
          },
          "previousDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "previousDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "showMinimumEntries" : {
            "type" : "boolean"
          }
        }
      },
      "SurveillanceReportDto" : {
        "type" : "object",
        "properties" : {
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateOfDiagnosis" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "facilityDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "facilityDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "facilityRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "facilityType" : {
            "type" : "string",
            "enum" : [ "ASSOCIATION", "BUSINESS", "BAR", "CAMPSITE", "CANTINE", "CHILDRENS_DAY_CARE", "CHILDRENS_HOME", "CORRECTIONAL_FACILITY", "CRUISE_SHIP", "ELDERLY_DAY_CARE", "EVENT_VENUE", "FOOD_STALL", "HOLIDAY_CAMP", "HOMELESS_SHELTER", "HOSPITAL", "HOSTEL", "HOTEL", "KINDERGARTEN", "LABORATORY", "MASS_ACCOMMODATION", "MILITARY_BARRACKS", "MOBILE_NURSING_SERVICE", "NIGHT_CLUB", "OTHER_ACCOMMODATION", "OTHER_CARE_FACILITY", "OTHER_CATERING_OUTLET", "OTHER_EDUCATIONAL_FACILITY", "OTHER_LEISURE_FACILITY", "OTHER_MEDICAL_FACILITY", "OTHER_RESIDENCE", "OTHER_WORKING_PLACE", "OTHER_COMMERCE", "OUTPATIENT_TREATMENT_FACILITY", "PLACE_OF_WORSHIP", "PUBLIC_PLACE", "REFUGEE_ACCOMMODATION", "REHAB_FACILITY", "RESTAURANT", "RETIREMENT_HOME", "RETAIL", "WHOLESALE", "SCHOOL", "SWIMMING_POOL", "THEATER", "UNIVERSITY", "ZOO", "AMBULATORY_SURGERY_FACILITY", "DIALYSIS_FACILITY", "DAY_HOSPITAL", "MATERNITY_FACILITY", "MEDICAL_PRACTICE", "DENTAL_PRACTICE", "OTHER_MEDICAL_PRACTICE", "DIAGNOSTIC_PREVENTATIVE_THERAPEUTIC_FACILITY", "EMERGENCY_MEDICAL_SERVICES", "ELDERLY_CARE_FACILITY", "DISABLED_PERSON_HABITATION", "CARE_RECIPIENT_HABITATION", "VISITING_AMBULATORY_AID", "AFTER_SCHOOL" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "notificationDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "ownershipHandedOver" : {
            "type" : "boolean"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingType" : {
            "type" : "string",
            "enum" : [ "DOCTOR", "LABORATORY", "FORWARDING", "HOSPITAL_OR_STATIONARY_CARE", "COMMUNITY_FACILITY", "COMMUNITY_FACILITY_IFSG_ARTICLE_34", "OWN_DETERMINATION", "NOT_DETERMINABLE", "NOT_RAISED", "OTHER" ]
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "sormasToSormasOriginInfo" : {
            "$ref" : "#/components/schemas/SormasToSormasOriginInfoDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "reportDate", "reportingType" ]
      },
      "SurveillanceReportReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "SymptomsDto" : {
        "type" : "object",
        "properties" : {
          "abdominalPain" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "abnormalLungXrayFindings" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "acuteRespiratoryDistressSyndrome" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "aerophobia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "agitation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "alteredConsciousness" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "anorexiaAppetiteLoss" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "anxietyStates" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "ascendingFlaccidParalysis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "backache" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bedridden" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bilateralCataracts" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "blackeningDeathOfTissue" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bleedingVagina" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bloodCirculationProblems" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bloodInStool" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bloodPressureDiastolic" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bloodPressureSystolic" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bloodUrine" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bloodyBlackStool" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "blueLips" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "breathlessness" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "buboesGroinArmpitNeck" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "bulgingFontanelle" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "chestPain" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "chestPressure" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "chillsSweats" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "coma" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "confusedDisoriented" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "congenitalGlaucoma" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "congenitalHeartDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "congenitalHeartDiseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "congenitalHeartDiseaseType" : {
            "type" : "string",
            "enum" : [ "PDA", "PPS", "VSD", "OTHER" ]
          },
          "conjunctivalInjection" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "conjunctivitis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "convulsion" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "cough" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "coughWithHeamoptysis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "coughWithSputum" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "coughWithoutSputum" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "coughingBlood" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "darkUrine" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "dehydration" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "delirium" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "developmentalDelay" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "diarrhea" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "difficultyBreathing" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "digestedBloodVomit" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "dizzinessStandingUp" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "dysphagia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "erraticBehaviour" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "excessSalivation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "excitation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "eyePainLightSensitive" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "eyesBleeding" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fastHeartRate" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fatigue" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fatigueWeakness" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "feelingIll" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fever" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "feverishFeeling" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fluidInLungCavity" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fluidInLungCavityAuscultation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "fluidInLungCavityXray" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "glasgowComaScale" : {
            "type" : "integer",
            "format" : "int32"
          },
          "gumsBleeding" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "headache" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hearingloss" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "heartRate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hemorrhagicSyndrome" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hiccups" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "highOrLowBloodPressure" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hydrophobia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hyperactivity" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hyperglycemia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "hypoglycemia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "inDrawingOfChestWall" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "inabilityToWalk" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "injectionSiteBleeding" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "insomnia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "jaundice" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "jaundiceWithin24HoursOfBirth" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "jointPain" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "kopliksSpots" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesions" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsAllOverBody" : {
            "type" : "boolean"
          },
          "lesionsArms" : {
            "type" : "boolean"
          },
          "lesionsDeepProfound" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsFace" : {
            "type" : "boolean"
          },
          "lesionsGenitals" : {
            "type" : "boolean"
          },
          "lesionsLegs" : {
            "type" : "boolean"
          },
          "lesionsOnsetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lesionsPalmsHands" : {
            "type" : "boolean"
          },
          "lesionsResembleImg1" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsResembleImg2" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsResembleImg3" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsResembleImg4" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsSameSize" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsSameState" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsSolesFeet" : {
            "type" : "boolean"
          },
          "lesionsThatItch" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lesionsThorax" : {
            "type" : "boolean"
          },
          "lossOfSmell" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lossOfTaste" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lossSkinTurgor" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lymphadenopathy" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lymphadenopathyAxillary" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lymphadenopathyCervical" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "lymphadenopathyInguinal" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "malaise" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "meningealSigns" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "meningoencephalitis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "microcephaly" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "midUpperArmCircumference" : {
            "type" : "integer",
            "format" : "int32"
          },
          "musclePain" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "nausea" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "neckStiffness" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "noseBleeding" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "oedemaFaceNeck" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "oedemaLowerExtremity" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "onsetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "onsetSymptom" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "opisthotonus" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "oralUlcers" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherComplications" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherComplicationsText" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "otherHemorrhagicSymptoms" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherHemorrhagicSymptomsText" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "otherNonHemorrhagicSymptoms" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "otherNonHemorrhagicSymptomsText" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "otitisMedia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "oxygenSaturationLower94" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "painfulLymphadenitis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "palpableLiver" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "palpableSpleen" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "palpitations" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "paralysis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "paresis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "paresthesiaAroundWound" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "patientIllLocation" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "pharyngealErythema" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pharyngealExudate" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pigmentaryRetinopathy" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pneumoniaClinicalOrRadiologic" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "purpuricRash" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "radiolucentBoneDisease" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "rapidBreathing" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "redBloodVomit" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "refusalFeedorDrink" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "respiratoryDiseaseVentilation" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "respiratoryRate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "runnyNose" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "seizures" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "sepsis" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "shivering" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "shock" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "sidePain" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "skinBruising" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "skinRash" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "skinUlcers" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "soreThroat" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "splenomegaly" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "stomachBleeding" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "sunkenEyesFontanelle" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "swollenGlands" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "symptomatic" : {
            "type" : "boolean"
          },
          "symptomsComments" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "temperature" : {
            "type" : "number",
            "format" : "float"
          },
          "temperatureSource" : {
            "type" : "string",
            "enum" : [ "AXILLARY", "ORAL", "RECTAL", "NON_CONTACT" ]
          },
          "throbocytopenia" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "tremor" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "unexplainedBleeding" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "unilateralCataracts" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "uproariousness" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "urinaryRetention" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vomiting" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "weakness" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "wheezing" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          }
        }
      },
      "TaskContextIndexCriteria" : {
        "type" : "object",
        "properties" : {
          "taskContext" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "EVENT", "TRAVEL_ENTRY", "ENVIRONMENT", "GENERAL" ]
          },
          "uuid" : {
            "type" : "string"
          }
        }
      },
      "TaskCriteria" : {
        "type" : "object",
        "properties" : {
          "assignedByUserLike" : {
            "type" : "string"
          },
          "assigneeUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "assigneeUserLike" : {
            "type" : "string"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "contactPerson" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "creatorUserLike" : {
            "type" : "string"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "dueDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentReferenceDto"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "excludeAssigneeUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "excludeLimitedSyncRestrictions" : {
            "type" : "boolean"
          },
          "freeText" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "startDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "statusChangeDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "statusChangeDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskContext" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "EVENT", "TRAVEL_ENTRY", "ENVIRONMENT", "GENERAL" ]
          },
          "taskStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE", "REMOVED", "NOT_EXECUTABLE" ]
          },
          "taskType" : {
            "type" : "string",
            "enum" : [ "ACTIVE_SEARCH_FOR_OTHER_CASES", "CASE_ISOLATION", "CASE_INVESTIGATION", "CASE_MANAGEMENT", "CASE_BURIAL", "CONTACT_TRACING", "CONTACT_MANAGEMENT", "SOURCECASE_TRACING", "SAMPLE_COLLECTION", "CONTACT_INVESTIGATION", "CONTACT_FOLLOW_UP", "ANIMAL_TESTING", "EVENT_INVESTIGATION", "EVENT_CONTINUE_INVESTIGATION", "EVENT_REQUEST_ADDITIONAL_INFORMATION", "TREATMENT_CENTER_ESTABLISHMENT", "ENVIRONMENTAL_HEALTH_ACTIVITIES", "DECONTAMINATION_DISINFECTION_ACTIVITIES", "QUARANTINE_PLACE", "QUARANTINE_MANAGEMENT", "QUARANTINE_ORDER_SEND", "VACCINATION_ACTIVITIES", "ANIMAL_DEPOPULATION", "OTHER", "DAILY_REPORT_GENERATION", "SURVEILLANCE_REPORT_GENERATION", "WEEKLY_REPORT_GENERATION", "ENVIRONMENT_INVESTIGATION" ]
          },
          "travelEntry" : {
            "$ref" : "#/components/schemas/TravelEntryReferenceDto"
          }
        }
      },
      "TaskDto" : {
        "type" : "object",
        "properties" : {
          "assignedByUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "assigneeReply" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "assigneeUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closedLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "closedLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "closedLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "contextReference" : {
            "$ref" : "#/components/schemas/ReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creatorComment" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "creatorUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentReferenceDto"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "observerUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserReferenceDto"
            },
            "uniqueItems" : true
          },
          "perceivedStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "priority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "statusChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "suggestedStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskContext" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "EVENT", "TRAVEL_ENTRY", "ENVIRONMENT", "GENERAL" ]
          },
          "taskStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE", "REMOVED", "NOT_EXECUTABLE" ]
          },
          "taskType" : {
            "type" : "string",
            "enum" : [ "ACTIVE_SEARCH_FOR_OTHER_CASES", "CASE_ISOLATION", "CASE_INVESTIGATION", "CASE_MANAGEMENT", "CASE_BURIAL", "CONTACT_TRACING", "CONTACT_MANAGEMENT", "SOURCECASE_TRACING", "SAMPLE_COLLECTION", "CONTACT_INVESTIGATION", "CONTACT_FOLLOW_UP", "ANIMAL_TESTING", "EVENT_INVESTIGATION", "EVENT_CONTINUE_INVESTIGATION", "EVENT_REQUEST_ADDITIONAL_INFORMATION", "TREATMENT_CENTER_ESTABLISHMENT", "ENVIRONMENTAL_HEALTH_ACTIVITIES", "DECONTAMINATION_DISINFECTION_ACTIVITIES", "QUARANTINE_PLACE", "QUARANTINE_MANAGEMENT", "QUARANTINE_ORDER_SEND", "VACCINATION_ACTIVITIES", "ANIMAL_DEPOPULATION", "OTHER", "DAILY_REPORT_GENERATION", "SURVEILLANCE_REPORT_GENERATION", "WEEKLY_REPORT_GENERATION", "ENVIRONMENT_INVESTIGATION" ]
          },
          "travelEntry" : {
            "$ref" : "#/components/schemas/TravelEntryReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "assigneeUser", "dueDate", "taskContext", "taskType" ]
      },
      "TaskIndexDto" : {
        "type" : "object",
        "properties" : {
          "assignedByUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "assigneeReply" : {
            "type" : "string"
          },
          "assigneeUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "caption" : {
            "type" : "string"
          },
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "contextReference" : {
            "$ref" : "#/components/schemas/ReferenceDto"
          },
          "creatorComment" : {
            "type" : "string"
          },
          "creatorUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentReferenceDto"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventReferenceDto"
          },
          "facility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "priority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "suggestedStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskContext" : {
            "type" : "string",
            "enum" : [ "CASE", "CONTACT", "EVENT", "TRAVEL_ENTRY", "ENVIRONMENT", "GENERAL" ]
          },
          "taskJurisdictionFlagsDto" : {
            "$ref" : "#/components/schemas/TaskJurisdictionFlagsDto"
          },
          "taskStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE", "REMOVED", "NOT_EXECUTABLE" ]
          },
          "taskType" : {
            "type" : "string",
            "enum" : [ "ACTIVE_SEARCH_FOR_OTHER_CASES", "CASE_ISOLATION", "CASE_INVESTIGATION", "CASE_MANAGEMENT", "CASE_BURIAL", "CONTACT_TRACING", "CONTACT_MANAGEMENT", "SOURCECASE_TRACING", "SAMPLE_COLLECTION", "CONTACT_INVESTIGATION", "CONTACT_FOLLOW_UP", "ANIMAL_TESTING", "EVENT_INVESTIGATION", "EVENT_CONTINUE_INVESTIGATION", "EVENT_REQUEST_ADDITIONAL_INFORMATION", "TREATMENT_CENTER_ESTABLISHMENT", "ENVIRONMENTAL_HEALTH_ACTIVITIES", "DECONTAMINATION_DISINFECTION_ACTIVITIES", "QUARANTINE_PLACE", "QUARANTINE_MANAGEMENT", "QUARANTINE_ORDER_SEND", "VACCINATION_ACTIVITIES", "ANIMAL_DEPOPULATION", "OTHER", "DAILY_REPORT_GENERATION", "SURVEILLANCE_REPORT_GENERATION", "WEEKLY_REPORT_GENERATION", "ENVIRONMENT_INVESTIGATION" ]
          },
          "travelEntry" : {
            "$ref" : "#/components/schemas/TravelEntryReferenceDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "TaskJurisdictionFlagsDto" : {
        "type" : "object",
        "properties" : {
          "caseInJurisdiction" : {
            "type" : "boolean"
          },
          "contactCaseInJurisdiction" : {
            "type" : "boolean"
          },
          "contactInJurisdiction" : {
            "type" : "boolean"
          },
          "environmentInJurisdiction" : {
            "type" : "boolean"
          },
          "eventInJurisdiction" : {
            "type" : "boolean"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "travelEntryInJurisdiction" : {
            "type" : "boolean"
          }
        }
      },
      "TestReportDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cqValue" : {
            "type" : "number",
            "format" : "float"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ctValueE" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueN" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueOrf1" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueRdrp" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueRdrpS" : {
            "type" : "number",
            "format" : "float"
          },
          "ctValueS" : {
            "type" : "number",
            "format" : "float"
          },
          "dateOfResult" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalOrderId" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "preliminary" : {
            "type" : "boolean"
          },
          "prescriberAddress" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberCity" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberCountry" : {
            "$ref" : "#/components/schemas/CountryReferenceDto"
          },
          "prescriberFirstName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberLastName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberPhoneNumber" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberPhysicianCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "prescriberPostalCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "sampleReport" : {
            "$ref" : "#/components/schemas/SampleReportReferenceDto"
          },
          "testDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "testLabCity" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "testLabExternalIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "testLabName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "testLabPostalCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "testPcrTestSpecification" : {
            "type" : "string",
            "enum" : [ "VARIANT_SPECIFIC", "N501Y_MUTATION_DETECTION" ]
          },
          "testResult" : {
            "type" : "string",
            "enum" : [ "INDETERMINATE", "PENDING", "NEGATIVE", "POSITIVE", "NOT_DONE" ]
          },
          "testResultText" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "testResultVerified" : {
            "type" : "boolean"
          },
          "testType" : {
            "type" : "string",
            "enum" : [ "ANTIBODY_DETECTION", "ANTIGEN_DETECTION", "RAPID_TEST", "CULTURE", "HISTOPATHOLOGY", "ISOLATION", "IGM_SERUM_ANTIBODY", "IGG_SERUM_ANTIBODY", "IGA_SERUM_ANTIBODY", "INCUBATION_TIME", "INDIRECT_FLUORESCENT_ANTIBODY", "DIRECT_FLUORESCENT_ANTIBODY", "MICROSCOPY", "NEUTRALIZING_ANTIBODIES", "PCR_RT_PCR", "GRAM_STAIN", "LATEX_AGGLUTINATION", "CQ_VALUE_DETECTION", "SEQUENCING", "DNA_MICROARRAY", "TMA", "OTHER" ]
          },
          "testedDiseaseVariant" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "testedDiseaseVariantDetails" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "typingId" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "sampleReport" ]
      },
      "TherapyDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "TherapyReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "TranslationElement" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "elementId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          }
        }
      },
      "TravelEntryCriteria" : {
        "type" : "object",
        "properties" : {
          "case" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "dateFilterOption" : {
            "type" : "string",
            "enum" : [ "DATE", "EPI_WEEK" ]
          },
          "nameUuidExternalIDLike" : {
            "type" : "string"
          },
          "onlyEntriesConvertedToCase" : {
            "type" : "boolean"
          },
          "onlyEntriesTestedNegative" : {
            "type" : "boolean"
          },
          "onlyRecoveredEntries" : {
            "type" : "boolean"
          },
          "onlyVaccinatedEntries" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "relevanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "ACTIVE_AND_ARCHIVED", "DELETED" ]
          },
          "reportDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportDateTo" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TravelEntryDto" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateOfArrival" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deaContent" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeaContentEntry"
            }
          },
          "deleted" : {
            "type" : "boolean"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "diseaseDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "diseaseVariant" : {
            "$ref" : "#/components/schemas/DiseaseVariant"
          },
          "diseaseVariantDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "externalId" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "otherDeletionReason" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "pointOfEntryDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pointOfEntryDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "pointOfEntryRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "quarantine" : {
            "type" : "string",
            "enum" : [ "HOME", "INSTITUTIONELL", "HOSPITAL", "HOTEL", "ASYLUM_ACCOMMODATION", "NONE", "UNKNOWN", "OTHER" ]
          },
          "quarantineExtended" : {
            "type" : "boolean"
          },
          "quarantineFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineHelpNeeded" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "quarantineHomePossible" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "quarantineHomePossibleComment" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "quarantineHomeSupplyEnsured" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "quarantineHomeSupplyEnsuredComment" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "quarantineOfficialOrderSent" : {
            "type" : "boolean"
          },
          "quarantineOfficialOrderSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineOrderedOfficialDocument" : {
            "type" : "boolean"
          },
          "quarantineOrderedOfficialDocumentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineOrderedVerbally" : {
            "type" : "boolean"
          },
          "quarantineOrderedVerballyDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineReduced" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "quarantineTypeDetails" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "recovered" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "responsibleCommunity" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "responsibleDistrict" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "responsibleRegion" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "resultingCase" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "testedNegative" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinated" : {
            "type" : "boolean"
          }
        },
        "required" : [ "person" ]
      },
      "TravelEntryIndexDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "deletionReason" : {
            "type" : "string",
            "enum" : [ "GDPR", "DELETION_REQUEST", "CREATED_WITH_NO_LEGAL_REASON", "TRANSFERRED_RESPONSIBILITY", "DUPLICATE_ENTRIES", "OTHER_REASON" ]
          },
          "externalId" : {
            "type" : "string"
          },
          "homeDistrictName" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "otherDeletionReason" : {
            "type" : "string"
          },
          "personFirstName" : {
            "type" : "string"
          },
          "personLastName" : {
            "type" : "string"
          },
          "pointOfEntryName" : {
            "type" : "string"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "quarantineTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "recovered" : {
            "type" : "boolean"
          },
          "testedNegative" : {
            "type" : "boolean"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinated" : {
            "type" : "boolean"
          }
        }
      },
      "TravelEntryReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "TreatmentCriteria" : {
        "type" : "object",
        "properties" : {
          "textFilter" : {
            "type" : "string"
          },
          "therapy" : {
            "$ref" : "#/components/schemas/TherapyReferenceDto"
          },
          "treatmentType" : {
            "type" : "string",
            "enum" : [ "DRUG_INTAKE", "ORAL_REHYDRATION_SALTS", "BLOOD_TRANSFUSION", "RENAL_REPLACEMENT_THERAPY", "IV_FLUID_THERAPY", "OXYGEN_THERAPY", "INVASIVE_MECHANICAL_VENTILATION", "VASOPRESSORS_INOTROPES", "OTHER" ]
          }
        }
      },
      "TreatmentDto" : {
        "type" : "object",
        "properties" : {
          "additionalNotes" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dose" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "executingClinician" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "prescription" : {
            "$ref" : "#/components/schemas/PrescriptionReferenceDto"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "route" : {
            "type" : "string",
            "enum" : [ "ORAL", "IV", "RECTAL", "TOPICAL", "OTHER" ]
          },
          "routeDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "therapy" : {
            "$ref" : "#/components/schemas/TherapyReferenceDto"
          },
          "treatmentDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "treatmentDetails" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "treatmentType" : {
            "type" : "string",
            "enum" : [ "DRUG_INTAKE", "ORAL_REHYDRATION_SALTS", "BLOOD_TRANSFUSION", "RENAL_REPLACEMENT_THERAPY", "IV_FLUID_THERAPY", "OXYGEN_THERAPY", "INVASIVE_MECHANICAL_VENTILATION", "VASOPRESSORS_INOTROPES", "OTHER" ]
          },
          "typeOfDrug" : {
            "type" : "string",
            "enum" : [ "ANTIMICROBIAL", "ANTIVIRAL", "OTHER" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "TreatmentIndexDto" : {
        "type" : "object",
        "properties" : {
          "dose" : {
            "type" : "string"
          },
          "executingClinician" : {
            "type" : "string"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "treatmentDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "treatmentIndexRoute" : {
            "$ref" : "#/components/schemas/TreatmentIndexRoute"
          },
          "treatmentIndexType" : {
            "$ref" : "#/components/schemas/TreatmentIndexType"
          },
          "treatmentRoute" : {
            "type" : "string"
          },
          "treatmentType" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "TreatmentIndexRoute" : {
        "type" : "object",
        "properties" : {
          "route" : {
            "type" : "string",
            "enum" : [ "ORAL", "IV", "RECTAL", "TOPICAL", "OTHER" ]
          },
          "routeDetails" : {
            "type" : "string"
          }
        }
      },
      "TreatmentIndexType" : {
        "type" : "object",
        "properties" : {
          "treatmentDetails" : {
            "type" : "string"
          },
          "typeOfDrug" : {
            "type" : "string",
            "enum" : [ "ANTIMICROBIAL", "ANTIVIRAL", "OTHER" ]
          }
        }
      },
      "UserCriteria" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "freeText" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "showOnlyRestrictedAccessToAssignedEntities" : {
            "type" : "boolean"
          },
          "userRole" : {
            "$ref" : "#/components/schemas/UserRoleReferenceDto"
          }
        }
      },
      "UserDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "address" : {
            "$ref" : "#/components/schemas/LocationDto"
          },
          "associatedOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "firstName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "hasConsentedToGdpr" : {
            "type" : "boolean"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "jurisdictionLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "NATION", "REGION", "DISTRICT", "COMMUNITY", "POINT_OF_ENTRY", "HEALTH_FACILITY", "LABORATORY", "EXTERNAL_LABORATORY" ]
          },
          "laboratory" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "language" : {
            "type" : "string",
            "enum" : [ "EN", "EN_NG", "EN_GH", "EN_AF", "FR", "FR_CH", "FR_TN", "DE", "DE_CH", "ES_BO", "ES_EC", "ES_CU", "IT", "IT_CH", "FI", "PS", "FA", "CZ", "UR_PK" ]
          },
          "lastName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "limitedDiseases" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
            },
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "pointOfEntry" : {
            "$ref" : "#/components/schemas/PointOfEntryReferenceDto"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionReferenceDto"
          },
          "userEmail" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "userName" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "userRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserRoleReferenceDto"
            },
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "UserReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "UserReferenceWithTaskNumbersDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "numberOfTasks" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "UserRoleDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string",
            "maxLength" : 512,
            "minLength" : 0
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 4096,
            "minLength" : 0
          },
          "emailNotificationTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CASE_CLASSIFICATION_CHANGED", "CASE_INVESTIGATION_DONE", "CASE_LAB_RESULT_ARRIVED", "CASE_DISEASE_CHANGED", "CONTACT_LAB_RESULT_ARRIVED", "CONTACT_SYMPTOMATIC", "CONTACT_VISIT_COMPLETED", "EVENT_PARTICIPANT_CASE_CLASSIFICATION_CONFIRMED", "EVENT_PARTICIPANT_RELATED_TO_OTHER_EVENTS", "EVENT_PARTICIPANT_LAB_RESULT_ARRIVED", "EVENT_GROUP_CREATED", "EVENT_ADDED_TO_EVENT_GROUP", "EVENT_REMOVED_FROM_EVENT_GROUP", "LAB_SAMPLE_SHIPPED", "TASK_START", "TASK_DUE", "TASK_UPDATED_ASSIGNEE" ]
            },
            "uniqueItems" : true
          },
          "enabled" : {
            "type" : "boolean"
          },
          "hasAssociatedDistrictUser" : {
            "type" : "boolean"
          },
          "hasOptionalHealthFacility" : {
            "type" : "boolean"
          },
          "jurisdictionLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "NATION", "REGION", "DISTRICT", "COMMUNITY", "POINT_OF_ENTRY", "HEALTH_FACILITY", "LABORATORY", "EXTERNAL_LABORATORY" ]
          },
          "linkedDefaultUserRole" : {
            "type" : "string",
            "enum" : [ "ADMIN", "NATIONAL_USER", "SURVEILLANCE_SUPERVISOR", "ADMIN_SUPERVISOR", "SURVEILLANCE_OFFICER", "HOSPITAL_INFORMANT", "COMMUNITY_OFFICER", "COMMUNITY_INFORMANT", "CASE_SUPERVISOR", "CASE_OFFICER", "CONTACT_SUPERVISOR", "CONTACT_OFFICER", "EVENT_OFFICER", "LAB_USER", "EXTERNAL_LAB_USER", "NATIONAL_OBSERVER", "STATE_OBSERVER", "DISTRICT_OBSERVER", "NATIONAL_CLINICIAN", "POE_INFORMANT", "POE_SUPERVISOR", "POE_NATIONAL_USER", "ENVIRONMENTAL_SURVEILLANCE_USER", "IMPORT_USER", "REST_EXTERNAL_VISITS_USER", "SORMAS_TO_SORMAS_CLIENT", "BAG_USER" ]
          },
          "portHealthUser" : {
            "type" : "boolean"
          },
          "restrictAccessToAssignedEntities" : {
            "type" : "boolean"
          },
          "smsNotificationTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CASE_CLASSIFICATION_CHANGED", "CASE_INVESTIGATION_DONE", "CASE_LAB_RESULT_ARRIVED", "CASE_DISEASE_CHANGED", "CONTACT_LAB_RESULT_ARRIVED", "CONTACT_SYMPTOMATIC", "CONTACT_VISIT_COMPLETED", "EVENT_PARTICIPANT_CASE_CLASSIFICATION_CONFIRMED", "EVENT_PARTICIPANT_RELATED_TO_OTHER_EVENTS", "EVENT_PARTICIPANT_LAB_RESULT_ARRIVED", "EVENT_GROUP_CREATED", "EVENT_ADDED_TO_EVENT_GROUP", "EVENT_REMOVED_FROM_EVENT_GROUP", "LAB_SAMPLE_SHIPPED", "TASK_START", "TASK_DUE", "TASK_UPDATED_ASSIGNEE" ]
            },
            "uniqueItems" : true
          },
          "userRights" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CASE_VIEW", "CASE_CREATE", "CASE_EDIT", "CASE_DELETE", "CASE_ARCHIVE", "CASE_VIEW_ARCHIVED", "CASE_IMPORT", "CASE_EXPORT", "CASE_INVESTIGATE", "CASE_CLASSIFY", "CASE_CHANGE_DISEASE", "CASE_CHANGE_EPID_NUMBER", "CASE_TRANSFER", "CASE_REFER_FROM_POE", "CASE_MERGE", "CASE_SHARE", "CASE_RESPONSIBLE", "GRANT_SPECIAL_CASE_ACCESS", "IMMUNIZATION_VIEW", "IMMUNIZATION_CREATE", "IMMUNIZATION_EDIT", "IMMUNIZATION_DELETE", "IMMUNIZATION_ARCHIVE", "IMMUNIZATION_VIEW_ARCHIVED", "PERSON_VIEW", "PERSON_EDIT", "PERSON_DELETE", "PERSON_EXPORT", "PERSON_CONTACT_DETAILS_DELETE", "PERSON_MERGE", "SAMPLE_VIEW", "SAMPLE_CREATE", "SAMPLE_EDIT", "SAMPLE_DELETE", "SAMPLE_EXPORT", "SAMPLE_TRANSFER", "SAMPLE_EDIT_NOT_OWNED", "PATHOGEN_TEST_CREATE", "PATHOGEN_TEST_EDIT", "PATHOGEN_TEST_DELETE", "ADDITIONAL_TEST_VIEW", "ADDITIONAL_TEST_CREATE", "ADDITIONAL_TEST_EDIT", "ADDITIONAL_TEST_DELETE", "CONTACT_VIEW", "CONTACT_CREATE", "CONTACT_EDIT", "CONTACT_DELETE", "CONTACT_ARCHIVE", "CONTACT_VIEW_ARCHIVED", "CONTACT_IMPORT", "CONTACT_EXPORT", "CONTACT_CONVERT", "CONTACT_REASSIGN_CASE", "CONTACT_MERGE", "CONTACT_RESPONSIBLE", "VISIT_CREATE", "VISIT_EDIT", "VISIT_DELETE", "VISIT_EXPORT", "TASK_VIEW", "TASK_CREATE", "TASK_EDIT", "TASK_DELETE", "TASK_EXPORT", "TASK_ASSIGN", "TASK_ARCHIVE", "TASK_VIEW_ARCHIVED", "ACTION_CREATE", "ACTION_DELETE", "ACTION_EDIT", "EVENT_VIEW", "EVENT_CREATE", "EVENT_EDIT", "EVENT_DELETE", "EVENT_ARCHIVE", "EVENT_VIEW_ARCHIVED", "EVENT_IMPORT", "EVENT_EXPORT", "EVENT_RESPONSIBLE", "EVENTPARTICIPANT_VIEW", "EVENTPARTICIPANT_CREATE", "EVENTPARTICIPANT_EDIT", "EVENTPARTICIPANT_DELETE", "EVENTPARTICIPANT_ARCHIVE", "EVENTPARTICIPANT_VIEW_ARCHIVED", "EVENTPARTICIPANT_IMPORT", "EVENTGROUP_CREATE", "EVENTGROUP_EDIT", "EVENTGROUP_ARCHIVE", "EVENTGROUP_VIEW_ARCHIVED", "EVENTGROUP_DELETE", "EVENTGROUP_LINK", "USER_VIEW", "USER_CREATE", "USER_EDIT", "USER_ROLE_VIEW", "USER_ROLE_EDIT", "USER_ROLE_DELETE", "STATISTICS_ACCESS", "STATISTICS_EXPORT", "INFRASTRUCTURE_VIEW", "INFRASTRUCTURE_CREATE", "INFRASTRUCTURE_EDIT", "INFRASTRUCTURE_IMPORT", "INFRASTRUCTURE_ARCHIVE", "INFRASTRUCTURE_VIEW_ARCHIVED", "INFRASTRUCTURE_EXPORT", "POPULATION_MANAGE", "DASHBOARD_SURVEILLANCE_VIEW", "DASHBOARD_CONTACT_VIEW", "DASHBOARD_CONTACT_VIEW_TRANSMISSION_CHAINS", "DASHBOARD_CAMPAIGNS_VIEW", "DASHBOARD_SAMPLES_VIEW", "CASE_CLINICIAN_VIEW", "THERAPY_VIEW", "PRESCRIPTION_CREATE", "PRESCRIPTION_EDIT", "PRESCRIPTION_DELETE", "TREATMENT_CREATE", "TREATMENT_EDIT", "TREATMENT_DELETE", "CLINICAL_COURSE_VIEW", "CLINICAL_COURSE_EDIT", "CLINICAL_VISIT_CREATE", "CLINICAL_VISIT_EDIT", "CLINICAL_VISIT_DELETE", "PORT_HEALTH_INFO_VIEW", "PORT_HEALTH_INFO_EDIT", "WEEKLYREPORT_VIEW", "WEEKLYREPORT_CREATE", "AGGREGATE_REPORT_VIEW", "AGGREGATE_REPORT_EDIT", "AGGREGATE_REPORT_EXPORT", "SEE_PERSONAL_DATA_IN_JURISDICTION", "SEE_PERSONAL_DATA_OUTSIDE_JURISDICTION", "SEE_SENSITIVE_DATA_IN_JURISDICTION", "SEE_SENSITIVE_DATA_OUTSIDE_JURISDICTION", "CAMPAIGN_VIEW", "CAMPAIGN_EDIT", "CAMPAIGN_ARCHIVE", "CAMPAIGN_VIEW_ARCHIVED", "CAMPAIGN_DELETE", "CAMPAIGN_FORM_DATA_VIEW", "CAMPAIGN_FORM_DATA_EDIT", "CAMPAIGN_FORM_DATA_ARCHIVE", "CAMPAIGN_FORM_DATA_DELETE", "CAMPAIGN_FORM_DATA_VIEW_ARCHIVED", "CAMPAIGN_FORM_DATA_EXPORT", "TRAVEL_ENTRY_MANAGEMENT_ACCESS", "TRAVEL_ENTRY_VIEW", "TRAVEL_ENTRY_CREATE", "TRAVEL_ENTRY_EDIT", "TRAVEL_ENTRY_ARCHIVE", "TRAVEL_ENTRY_VIEW_ARCHIVED", "TRAVEL_ENTRY_DELETE", "ENVIRONMENT_VIEW", "ENVIRONMENT_CREATE", "ENVIRONMENT_EDIT", "ENVIRONMENT_ARCHIVE", "ENVIRONMENT_VIEW_ARCHIVED", "ENVIRONMENT_DELETE", "ENVIRONMENT_IMPORT", "ENVIRONMENT_EXPORT", "ENVIRONMENT_SAMPLE_VIEW", "ENVIRONMENT_SAMPLE_CREATE", "ENVIRONMENT_SAMPLE_EDIT", "ENVIRONMENT_SAMPLE_EDIT_DISPATCH", "ENVIRONMENT_SAMPLE_EDIT_RECEIVAL", "ENVIRONMENT_SAMPLE_DELETE", "ENVIRONMENT_SAMPLE_IMPORT", "ENVIRONMENT_SAMPLE_EXPORT", "ENVIRONMENT_PATHOGEN_TEST_CREATE", "ENVIRONMENT_PATHOGEN_TEST_EDIT", "ENVIRONMENT_PATHOGEN_TEST_DELETE", "SELF_REPORT_VIEW", "SELF_REPORT_CREATE", "SELF_REPORT_EDIT", "SELF_REPORT_DELETE", "SELF_REPORT_ARCHIVE", "SELF_REPORT_PROCESS", "SELF_REPORT_IMPORT", "SELF_REPORT_EXPORT", "DOCUMENT_VIEW", "DOCUMENT_UPLOAD", "DOCUMENT_DELETE", "PERFORM_BULK_OPERATIONS", "PERFORM_BULK_OPERATIONS_PSEUDONYM", "QUARANTINE_ORDER_CREATE", "SORMAS_REST", "SORMAS_UI", "DATABASE_EXPORT_ACCESS", "EXPORT_DATA_PROTECTION_DATA", "BAG_EXPORT", "SEND_MANUAL_EXTERNAL_MESSAGES", "MANAGE_EXTERNAL_SYMPTOM_JOURNAL", "EXTERNAL_VISITS", "SORMAS_TO_SORMAS_CLIENT", "SORMAS_TO_SORMAS_SHARE", "SORMAS_TO_SORMAS_PROCESS", "EXTERNAL_SURVEILLANCE_SHARE", "EXTERNAL_SURVEILLANCE_DELETE", "EXTERNAL_MESSAGE_VIEW", "EXTERNAL_MESSAGE_PROCESS", "EXTERNAL_MESSAGE_PUSH", "EXTERNAL_MESSAGE_DELETE", "OUTBREAK_VIEW", "OUTBREAK_EDIT", "MANAGE_PUBLIC_EXPORT_CONFIGURATION", "DOCUMENT_TEMPLATE_MANAGEMENT", "LINE_LISTING_CONFIGURE", "DEV_MODE", "EMAIL_TEMPLATE_MANAGEMENT", "EXTERNAL_EMAIL_SEND", "EXTERNAL_EMAIL_ATTACH_DOCUMENTS", "CUSTOMIZABLE_ENUM_MANAGEMENT" ]
            },
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      },
      "UserRoleReferenceDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        },
        "required" : [ "uuid" ]
      },
      "VaccinationDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "healthConditions" : {
            "$ref" : "#/components/schemas/HealthConditionsDto"
          },
          "immunization" : {
            "$ref" : "#/components/schemas/ImmunizationReferenceDto"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "otherVaccineManufacturer" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "otherVaccineName" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "pregnant" : {
            "type" : "string",
            "enum" : [ "YES", "NO", "UNKNOWN" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "trimester" : {
            "type" : "string",
            "enum" : [ "FIRST", "SECOND", "THIRD", "UNKNOWN" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "vaccinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vaccinationInfoSource" : {
            "type" : "string",
            "enum" : [ "VACCINATION_CARD", "ORAL_COMMUNICATION", "NO_EVIDENCE", "UNKNOWN" ]
          },
          "vaccineAtcCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "vaccineBatchNumber" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "vaccineDose" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "vaccineInn" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "vaccineManufacturer" : {
            "type" : "string",
            "enum" : [ "BIONTECH_PFIZER", "MODERNA", "ASTRA_ZENECA", "JOHNSON_JOHNSON", "NOVAVAX", "SANOFI_GSK", "VALNEVA", "UNKNOWN", "OTHER" ]
          },
          "vaccineName" : {
            "type" : "string",
            "enum" : [ "COMIRNATY", "MRNA_BIVALENT_BA_1_BIONTECH_PFIZER", "MRNA_BIVALENT_BA_4_5_BIONTECH_PFIZER", "MRNA_1273", "MRNA_BIVALENT_BA_1_MODERNA", "MRNA_BIVALENT_BA_4_5_MODERNA", "VALNEVA", "NVX_COV_2373", "NUVAXOVID", "OXFORD_ASTRA_ZENECA", "AD26_COV2_S", "SANOFI_GSK", "UNKNOWN", "OTHER" ]
          },
          "vaccineType" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          },
          "vaccineUniiCode" : {
            "type" : "string",
            "maxLength" : 1000000,
            "minLength" : 0
          }
        },
        "required" : [ "reportDate" ]
      },
      "VisitCriteria" : {
        "type" : "object",
        "properties" : {
          "caze" : {
            "$ref" : "#/components/schemas/CaseReferenceDto"
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactReferenceDto"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "VisitDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "origin" : {
            "type" : "string",
            "enum" : [ "USER", "EXTERNAL_JOURNAL" ]
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonReferenceDto"
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "reportLat" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 90,
            "minimum" : -90
          },
          "reportLatLonAccuracy" : {
            "type" : "number",
            "format" : "float"
          },
          "reportLon" : {
            "type" : "number",
            "format" : "double",
            "maximum" : 180,
            "minimum" : -180
          },
          "symptoms" : {
            "$ref" : "#/components/schemas/SymptomsDto"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "visitDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "visitRemarks" : {
            "type" : "string"
          },
          "visitStatus" : {
            "type" : "string",
            "enum" : [ "UNAVAILABLE", "UNCOOPERATIVE", "COOPERATIVE" ]
          },
          "visitUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          }
        },
        "required" : [ "person", "visitDateTime", "visitStatus", "visitUser" ]
      },
      "VisitIndexDto" : {
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "inJurisdiction" : {
            "type" : "boolean"
          },
          "origin" : {
            "type" : "string",
            "enum" : [ "USER", "EXTERNAL_JOURNAL" ]
          },
          "pseudonymized" : {
            "type" : "boolean"
          },
          "symptomatic" : {
            "type" : "boolean"
          },
          "temperature" : {
            "type" : "number",
            "format" : "float"
          },
          "temperatureSource" : {
            "type" : "string",
            "enum" : [ "AXILLARY", "ORAL", "RECTAL", "NON_CONTACT" ]
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "visitDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "visitRemarks" : {
            "type" : "string"
          },
          "visitStatus" : {
            "type" : "string",
            "enum" : [ "UNAVAILABLE", "UNCOOPERATIVE", "COOPERATIVE" ]
          },
          "visitUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          }
        }
      },
      "VisitResultDto" : {
        "type" : "object",
        "properties" : {
          "origin" : {
            "type" : "string",
            "enum" : [ "USER", "EXTERNAL_JOURNAL" ]
          },
          "result" : {
            "type" : "string",
            "enum" : [ "NOT_SYMPTOMATIC", "SYMPTOMATIC", "UNAVAILABLE", "UNCOOPERATIVE", "NOT_PERFORMED" ]
          }
        }
      },
      "WeeklyReportDto" : {
        "type" : "object",
        "properties" : {
          "assignedOfficer" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "community" : {
            "$ref" : "#/components/schemas/CommunityReferenceDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "district" : {
            "$ref" : "#/components/schemas/DistrictReferenceDto"
          },
          "epiWeek" : {
            "type" : "integer",
            "format" : "int32"
          },
          "healthFacility" : {
            "$ref" : "#/components/schemas/FacilityReferenceDto"
          },
          "reportDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reportEntries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyReportEntryDto"
            }
          },
          "reportingUser" : {
            "$ref" : "#/components/schemas/UserReferenceDto"
          },
          "totalNumberOfCases" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WeeklyReportEntryDto" : {
        "type" : "object",
        "properties" : {
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disease" : {
            "type" : "string",
            "enum" : [ "AFP", "CHOLERA", "CONGENITAL_RUBELLA", "CSM", "DENGUE", "EVD", "GUINEA_WORM", "LASSA", "MEASLES", "MONKEYPOX", "NEW_INFLUENZA", "PLAGUE", "POLIO", "UNSPECIFIED_VHF", "WEST_NILE_FEVER", "YELLOW_FEVER", "RABIES", "ANTHRAX", "CORONAVIRUS", "PNEUMONIA", "MALARIA", "TYPHOID_FEVER", "ACUTE_VIRAL_HEPATITIS", "NON_NEONATAL_TETANUS", "HIV", "SCHISTOSOMIASIS", "SOIL_TRANSMITTED_HELMINTHS", "TRYPANOSOMIASIS", "DIARRHEA_DEHYDRATION", "DIARRHEA_BLOOD", "SNAKE_BITE", "RUBELLA", "TUBERCULOSIS", "LEPROSY", "LYMPHATIC_FILARIASIS", "BURULI_ULCER", "PERTUSSIS", "NEONATAL_TETANUS", "ONCHOCERCIASIS", "DIPHTERIA", "TRACHOMA", "YAWS_ENDEMIC_SYPHILIS", "MATERNAL_DEATHS", "PERINATAL_DEATHS", "INFLUENZA_A", "INFLUENZA_B", "H_METAPNEUMOVIRUS", "RESPIRATORY_SYNCYTIAL_VIRUS", "PARAINFLUENZA_1_4", "ADENOVIRUS", "RHINOVIRUS", "ENTEROVIRUS", "M_PNEUMONIAE", "C_PNEUMONIAE", "ARI", "CHIKUNGUNYA", "POST_IMMUNIZATION_ADVERSE_EVENTS_MILD", "POST_IMMUNIZATION_ADVERSE_EVENTS_SEVERE", "FHA", "OTHER", "UNDEFINED" ]
          },
          "numberOfCases" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uuid" : {
            "type" : "string",
            "maxLength" : 36,
            "minLength" : 20,
            "pattern" : "^[0-9a-zA-Z-]*$"
          }
        }
      }
    }
  }
}